name: Test-Actions

on:
  push:
    branches:
      - "citest/*"
    tags:
      - "v*"

jobs:
  build_and_release:
    if: ${{ startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/heads/ci/')  || startsWith(github.ref, 'refs/heads/citest/') }}
    strategy:
      matrix:
        os:
          - windows-latest
          - macos-latest
          - ubuntu-20.04
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Set Yak Version by Tag
        uses: mad9000/actions-find-and-replace-string@1
        id: fetchtag
        with:
          source: ${{ github.ref }}
          find: 'refs/tags/'
          replace: ''
      - name: Print RELEASE_VERSION
        run: |
          echo "github actions's env VERSION: ${{ steps.fetchtag.outputs.value }}"
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.20.3
      #      - name: Download Npcap SDK (Windows)
      #        run: |
      #          Invoke-WebRequest https://nmap.org/npcap/dist/npcap-sdk-1.07.zip -OutFile C:\NpcapSDK.zip
      #          Expand-Archive C:\NpcapSDK.zip -DestinationPath ..\wpdpack
      #        if: runner.os == 'Windows'
      - name: Install libpcap (macOS)
        run: |
          brew install libpcap
        if: runner.os == 'macOS'

      - name: Install libpcap (Linux)
        run: |
          sudo apt-get update
          sudo apt-get install libpcap-dev=1.9.1-3
        if: runner.os == 'Linux'

#      - name: Generate Document
#        run: go run common/yak/yakdoc/generate_doc/generate_doc.go common/yak/yakdoc/doc/doc.gob.gzip

      - name: Initialize License Machine
        run: go run common/xlic/cmd/initializer.go --ak ${{ secrets.OSS_KEY_ID }} --sk ${{ secrets.OSS_KEY_SECRET }}

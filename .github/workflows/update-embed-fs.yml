name: Auto Update Embed FS

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]
    paths:
      - 'common/syntaxflow/sfbuildin/buildin/**'
jobs:
  generate-commit:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref  }}
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}
      - name: Check last commit message is bot message
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          
          COMMIT_MESSAGE=$(git log -1 --pretty=format:%s)
          echo "Commit Message: $COMMIT_MESSAGE"
          
          if [[ "$COMMIT_MESSAGE" == *"[bot commit]"* ]]; then
            echo "Commit from bot detected. Stopping CI."
            echo "SKIP_CI=true" >> $GITHUB_ENV
          else
            echo "Commit from human. Continuing workflow."
          fi
      - name: Set up Go
        if: ${{env.SKIP_CI != 'true'}}
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      - name: Try Auto Merge
        if: ${{env.SKIP_CI != 'true'}}
        run: |
          git fetch origin main
          git rebase origin/main || true
          CONFLICTS=$(git diff --name-only --diff-filter=U)
          if [[ -n "$CONFLICTS" ]]; then
          echo "Conflicts detected. Stopping CI."
          exit 1
          else
          echo "No conflicts. Continuing workflow."
          fi
      - name: Execute commands
        if: ${{env.SKIP_CI != 'true'}}
        run: |
          go run common/yak/cmd/yak.go embed-fs-hash --override --all
          go test -timeout 30s -run TestEmbedRule ./common/syntaxflow/sfdb/...
          go run common/yak/cmd/yak.go

      - name: Commit changes
        if: ${{success() && env.SKIP_CI != 'true'}}
        run: |
          git add .
          git diff --quiet && git diff --staged --quiet || git commit -m "chore: auto-update embed files [bot commit]"
          git push --force origin ${{ github.event.pull_request.head.ref }}

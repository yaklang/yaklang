name: ManualBuildWithTarget

on:
  workflow_dispatch:
    inputs:
      os:
        description: "System to build"
        required: true
        type: choice
        options:
          - windows-latest
          - ubuntu-20.04
          # macos 13 means x64
          # macos 14 means arm64
          - macos-13
          - macos-14
          - ubuntu-20.04

jobs:
  build:
    runs-on: "${{ inputs.os }}"
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.20.3

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install libpcap (macOS)
        run: |
          brew install libpcap
        if: runner.os == 'macOS'

      - name: Install libpcap (Linux)
        run: |
          sudo apt-get update
          sudo apt-get install libpcap-dev=1.9.1-3
        if: runner.os == 'Linux'

      - name: Generate Document
        run: go run common/yak/yakdoc/generate_doc/generate_doc.go common/yak/yakdoc/doc/doc.gob.gzip

      - name: Build For Linux
        run: |
          go build -ldflags "-linkmode external -extldflags '-static' -s -w -X 'main.goVersion=$(go version)' -X 'main.gitHash=$(git show -s --format=%H)' -X 'main.buildTime=$(git show -s --format=%cd)' -X 'main.yakVersion=${{ steps.fetchtag.outputs.value }}'" -o "./yak_$(go env GOOS)_$(go env GOARCH)" -v common/yak/cmd/yak.go
        if: runner.os == 'Linux'

      - name: Build For MacOS
        run: |
          go build -ldflags "-s -w -X 'main.goVersion=$(go version)' -X 'main.gitHash=$(git show -s --format=%H)' -X 'main.buildTime=$(git show -s --format=%cd)' -X 'main.yakVersion=${{ steps.fetchtag.outputs.value }}'" -o "./yak_$(go env GOOS)_$(go env GOARCH)" -v common/yak/cmd/yak.go
        if: runner.os == 'macOS'

      - name: Build For Windows
        run: |
          go build -ldflags "-s -w -X 'main.goVersion=$(go version)' -X 'main.gitHash=$(git show -s --format=%H)' -X 'main.buildTime=$(git show -s --format=%cd)' -X 'main.yakVersion=${{ steps.fetchtag.outputs.value }}'" -o ./yak_windows_amd64.exe -v common/yak/cmd/yak.go
        if: runner.os == 'Windows'

      - name: Upload Artifacts Windows
        uses: actions/upload-artifact@v2
        if: runner.os == 'Windows'
        with:
          name: yak.exe
          path: ./yak_windows_amd64.exe

      - name: Upload Artifacts MacOS
        uses: actions/upload-artifact@v2
        if: runner.os == 'macOS'
        with:
          name: yak
          path: ./yak_darwin_amd64

      - name: Upload Artifacts Linux
        uses: actions/upload-artifact@v2
        if: runner.os == 'Linux'
        with:
          name: yak
          path: ./yak_linux_amd64

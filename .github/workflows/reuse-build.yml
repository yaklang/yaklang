name: Cross-Build

on:
  workflow_dispatch:
    inputs:
      os:
        description: "System to build"
        required: true
        type: choice
        options:
          - windows
          - macos-amd64 
          - macos-arm64
          - linux-amd64
          - linux-arm64
      ee:
        type: boolean
        description: whether to build ee version
        default: false
  
  workflow_call:
    inputs:
      os:
        description: "System to build"
        required: true
        type: string
      ee:
        type: boolean
        description: whether to build ee version
        default: false 


jobs:
  build_and_upload_asset:
    runs-on: ${{ contains(inputs.os, 'windows') && 'windows-latest' || 'macos-14' }}
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.20.3

      - name: Get Repo tags
        run: |
          go run common/yak/cmd/yak.go repos-tag -o tags.txt
          echo "YAK_TAG=$(cat tags.txt)" >> ${{ contains(inputs.os, 'windows') && '$env:GITHUB_ENV' || '$GITHUB_ENV' }} 

      - name: Download CrossBuild GCC(Linux x64 / MacOS x64)
        if: inputs.os == 'linux-amd64' || inputs.os == 'macos-amd64'
        run: |
          brew tap messense/macos-cross-toolchains
          brew install x86_64-unknown-linux-gnu
          x86_64-linux-gnu-gcc -v

      - name: Download CrossBuild GCC(Linux arm64)
        if: inputs.os == 'linux-arm64' 
        run: |
          brew tap messense/macos-cross-toolchains
          brew install aarch64-unknown-linux-gnu
          aarch64-linux-gnu-gcc -v

      - name: Generate Document
        run: go run common/yak/yakdoc/generate_doc/generate_doc.go common/yak/yakdoc/doc/doc.gob.gzip

      - name: Codec Methods Document
        run: go run common/yak/yaklib/codec/codegrpc/doc/codec_doc.go common/yak/yaklib/codec/codegrpc/codec.gob.gzip

      - name: Initialize License Machine
        if: inputs.ee
        run: go run common/xlic/cmd/initializer.go --ak ${{ secrets.OSS_KEY_ID }} --sk ${{ secrets.OSS_KEY_SECRET }}

      - name: Build For Linux(linux, amd64)
        run: |
          CGO_ENABLED=1 GOOS=linux GOARCH=amd64 CC=x86_64-linux-gnu-gcc go build -ldflags "-linkmode external -extldflags '-static' -s -w -X 'main.goVersion=$(go version)' -X 'main.gitHash=$(git show -s --format=%H)' -X 'main.buildTime=$(git show -s --format=%cd)' -X 'main.yakVersion=${{ env.YAK_TAG }}'" -o "./yak_linux_amd64" -v common/yak/cmd/yak.go && ls
        if: inputs.os == 'linux-amd64'

      - name: Build For Linux(linux, arm64)
        run: |
          CGO_ENABLED=1 GOOS=linux GOARCH=arm64 CC=aarch64-linux-gnu-gcc go build -ldflags "-linkmode external -extldflags '-static' -s -w -X 'main.goVersion=$(go version)' -X 'main.gitHash=$(git show -s --format=%H)' -X 'main.buildTime=$(git show -s --format=%cd)' -X 'main.yakVersion=${{ env.YAK_TAG }}'" -o "./yak_linux_arm64" -v common/yak/cmd/yak.go && ls
        if: inputs.os == 'linux-arm64'

      - name: Build For MacOS(arm64)
        run: |
          CGO_ENABLED=1 GOOS=darwin GOARCH=arm64 go build -ldflags "-s -w -X 'main.goVersion=$(go version)' -X 'main.gitHash=$(git show -s --format=%H)' -X 'main.buildTime=$(git show -s --format=%cd)' -X 'main.yakVersion=${{ env.YAK_TAG }}'" -o "./yak_darwin_arm64" -v common/yak/cmd/yak.go && ls
        if: inputs.os == 'macos-arm64'

      - name: Build For MacOS(amd64)
        run: |
          CGO_ENABLED=1 GOOS=darwin GOARCH=amd64 go build -ldflags "-s -w -X 'main.goVersion=$(go version)' -X 'main.gitHash=$(git show -s --format=%H)' -X 'main.buildTime=$(git show -s --format=%cd)' -X 'main.yakVersion=${{ env.YAK_TAG }}'" -o "./yak_darwin_amd64" -v common/yak/cmd/yak.go && ls
        if: inputs.os == 'macos-amd64'

      - name: Build For Windows
        run: |
          go build -ldflags "-s -w -X 'main.goVersion=$(go version)' -X 'main.gitHash=$(git show -s --format=%H)' -X 'main.buildTime=$(git show -s --format=%cd)' -X 'main.yakVersion=${{ env.YAK_TAG }}'" -o ./yak_windows_amd64.exe -v common/yak/cmd/yak.go
        if: runner.os == 'Windows'

      - name: Upload Artifacts Windows
        uses: actions/upload-artifact@v2
        if: runner.os == 'Windows'
        with:
          name: yak_windows_amd64.exe
          path: ./yak_windows_amd64.exe

      - name: Upload Artifacts MacOS(amd64)
        uses: actions/upload-artifact@v2
        if: inputs.os == 'macos-amd64'
        with:
          name: yak_darwin_amd64
          path: ./yak_darwin_amd64

      - name: Upload Artifacts MacOS(arm64)
        uses: actions/upload-artifact@v2
        if: inputs.os == 'macos-arm64'
        with:
          name: yak_darwin_arm64
          path: ./yak_darwin_arm64

      - name: Upload Artifacts CrossBuild Linux(amd64)
        uses: actions/upload-artifact@v2
        if: inputs.os == 'linux-amd64'
        with:
          name: yak_linux_amd64
          path: ./yak_linux_amd64

      - name: Upload Artifacts CrossBuild Linux(arm64)
        uses: actions/upload-artifact@v2
        if: inputs.os == 'linux-arm64'
        with:
          name: yak_linux_arm64
          path: ./yak_linux_arm64




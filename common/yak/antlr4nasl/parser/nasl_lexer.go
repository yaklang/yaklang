// Code generated from java-escape by ANTLR 4.11.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr/v4"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type NaslLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var nasllexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func nasllexerLexerInit() {
	staticData := &nasllexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "", "'['", "']'", "'('", "')'", "'{'", "'}'", "';'", "','", "'='",
		"':'", "'.'", "'++'", "'--'", "'+'", "'-'", "'~'", "'&'", "'^'", "'|'",
		"'>>'", "'<<'", "'<<<'", "'>>>'", "'!'", "'*'", "'**'", "'/'", "'%'",
		"'<'", "'>'", "'<='", "'>='", "'=='", "'=~'", "'!='", "'!~'", "'>!<'",
		"'><'", "'&&'", "'||'", "'*='", "'/='", "'%='", "'+='", "'-='", "'x'",
		"'>>>='", "'<<<='", "'>>='", "'<<='", "'break'", "'local_var'", "'global_var'",
		"'else'", "'return'", "'continue'", "'for'", "'foreach'", "'if'", "'function'",
		"'repeat'", "'while'", "'until'", "'exit'", "", "", "", "", "", "",
		"'NULL'",
	}
	staticData.symbolicNames = []string{
		"", "SingleLineComment", "OpenBracket", "CloseBracket", "OpenParen",
		"CloseParen", "OpenBrace", "CloseBrace", "SemiColon", "Comma", "Assign",
		"Colon", "Dot", "PlusPlus", "MinusMinus", "Plus", "Minus", "BitNot",
		"BitAnd", "BitXOr", "BitOr", "RightShiftArithmetic", "LeftShiftArithmetic",
		"LeftShiftLogical", "RightShiftLogical", "Not", "Multiply", "Pow", "Divide",
		"Modulus", "LessThan", "MoreThan", "LessThanEquals", "GreaterThanEquals",
		"Equals_", "EqualsRe", "NotEquals", "NotLong", "MTNotLT", "MTLT", "And",
		"Or", "MultiplyAssign", "DivideAssign", "ModulusAssign", "PlusAssign",
		"MinusAssign", "X", "RightShiftLogicalAssign", "LeftShiftLogicalAssign",
		"RightShiftArithmeticAssign", "LeftShiftArithmeticAssign", "Break",
		"LocalVar", "GlobalVar", "Else", "Return", "Continue", "For", "ForEach",
		"If", "Function_", "Repeat", "While", "Until", "Exit", "StringLiteral",
		"BooleanLiteral", "IntegerLiteral", "FloatLiteral", "IpLiteral", "HexLiteral",
		"NULLLiteral", "Identifier", "WhiteSpaces", "LineTerminator",
	}
	staticData.ruleNames = []string{
		"SingleLineComment", "OpenBracket", "CloseBracket", "OpenParen", "CloseParen",
		"OpenBrace", "CloseBrace", "SemiColon", "Comma", "Assign", "Colon",
		"Dot", "PlusPlus", "MinusMinus", "Plus", "Minus", "BitNot", "BitAnd",
		"BitXOr", "BitOr", "RightShiftArithmetic", "LeftShiftArithmetic", "LeftShiftLogical",
		"RightShiftLogical", "Not", "Multiply", "Pow", "Divide", "Modulus",
		"LessThan", "MoreThan", "LessThanEquals", "GreaterThanEquals", "Equals_",
		"EqualsRe", "NotEquals", "NotLong", "MTNotLT", "MTLT", "And", "Or",
		"MultiplyAssign", "DivideAssign", "ModulusAssign", "PlusAssign", "MinusAssign",
		"X", "RightShiftLogicalAssign", "LeftShiftLogicalAssign", "RightShiftArithmeticAssign",
		"LeftShiftArithmeticAssign", "Break", "LocalVar", "GlobalVar", "Else",
		"Return", "Continue", "For", "ForEach", "If", "Function_", "Repeat",
		"While", "Until", "Exit", "StringLiteral", "SingleStringCharacter",
		"BooleanLiteral", "IntegerLiteral", "FloatLiteral", "IpLiteral", "HexLiteral",
		"NULLLiteral", "Identifier", "WhiteSpaces", "LineTerminator",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 75, 506, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67,
		2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 2, 71, 7, 71, 2, 72, 7, 72, 2,
		73, 7, 73, 2, 74, 7, 74, 2, 75, 7, 75, 1, 0, 1, 0, 5, 0, 156, 8, 0, 10,
		0, 12, 0, 159, 9, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3, 1,
		4, 1, 4, 1, 5, 1, 5, 1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 1, 8, 1, 9, 1, 9, 1,
		10, 1, 10, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 14,
		1, 14, 1, 15, 1, 15, 1, 16, 1, 16, 1, 17, 1, 17, 1, 18, 1, 18, 1, 19, 1,
		19, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22,
		1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 25, 1, 25, 1, 26, 1, 26, 1,
		26, 1, 27, 1, 27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31,
		1, 31, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1, 34, 1,
		35, 1, 35, 1, 35, 1, 36, 1, 36, 1, 36, 1, 37, 1, 37, 1, 37, 1, 37, 1, 38,
		1, 38, 1, 38, 1, 39, 1, 39, 1, 39, 1, 40, 1, 40, 1, 40, 1, 41, 1, 41, 1,
		41, 1, 42, 1, 42, 1, 42, 1, 43, 1, 43, 1, 43, 1, 44, 1, 44, 1, 44, 1, 45,
		1, 45, 1, 45, 1, 46, 1, 46, 1, 47, 1, 47, 1, 47, 1, 47, 1, 47, 1, 48, 1,
		48, 1, 48, 1, 48, 1, 48, 1, 49, 1, 49, 1, 49, 1, 49, 1, 50, 1, 50, 1, 50,
		1, 50, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 52, 1, 52, 1, 52, 1,
		52, 1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 1, 53, 1, 53, 1, 53, 1, 53,
		1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 54, 1, 54, 1, 54, 1,
		54, 1, 54, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 56, 1, 56,
		1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 57, 1, 57, 1, 57, 1,
		57, 1, 58, 1, 58, 1, 58, 1, 58, 1, 58, 1, 58, 1, 58, 1, 58, 1, 59, 1, 59,
		1, 59, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60, 1,
		61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 62, 1, 62, 1, 62, 1, 62,
		1, 62, 1, 62, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 64, 1, 64, 1,
		64, 1, 64, 1, 64, 1, 65, 1, 65, 5, 65, 396, 8, 65, 10, 65, 12, 65, 399,
		9, 65, 1, 65, 1, 65, 1, 65, 5, 65, 404, 8, 65, 10, 65, 12, 65, 407, 9,
		65, 1, 65, 3, 65, 410, 8, 65, 1, 66, 1, 66, 1, 66, 3, 66, 415, 8, 66, 1,
		67, 1, 67, 1, 67, 1, 67, 1, 67, 1, 67, 1, 67, 1, 67, 1, 67, 1, 67, 1, 67,
		1, 67, 1, 67, 1, 67, 1, 67, 1, 67, 1, 67, 1, 67, 3, 67, 435, 8, 67, 1,
		68, 4, 68, 438, 8, 68, 11, 68, 12, 68, 439, 1, 69, 1, 69, 1, 69, 5, 69,
		445, 8, 69, 10, 69, 12, 69, 448, 9, 69, 1, 70, 5, 70, 451, 8, 70, 10, 70,
		12, 70, 454, 9, 70, 1, 70, 1, 70, 5, 70, 458, 8, 70, 10, 70, 12, 70, 461,
		9, 70, 1, 70, 1, 70, 5, 70, 465, 8, 70, 10, 70, 12, 70, 468, 9, 70, 1,
		70, 1, 70, 5, 70, 472, 8, 70, 10, 70, 12, 70, 475, 9, 70, 1, 71, 1, 71,
		1, 71, 4, 71, 480, 8, 71, 11, 71, 12, 71, 481, 1, 72, 1, 72, 1, 72, 1,
		72, 1, 72, 1, 73, 1, 73, 5, 73, 491, 8, 73, 10, 73, 12, 73, 494, 9, 73,
		1, 74, 4, 74, 497, 8, 74, 11, 74, 12, 74, 498, 1, 74, 1, 74, 1, 75, 1,
		75, 1, 75, 1, 75, 0, 0, 76, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7,
		15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33,
		17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51,
		26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69,
		35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42, 85, 43, 87,
		44, 89, 45, 91, 46, 93, 47, 95, 48, 97, 49, 99, 50, 101, 51, 103, 52, 105,
		53, 107, 54, 109, 55, 111, 56, 113, 57, 115, 58, 117, 59, 119, 60, 121,
		61, 123, 62, 125, 63, 127, 64, 129, 65, 131, 66, 133, 0, 135, 67, 137,
		68, 139, 69, 141, 70, 143, 71, 145, 72, 147, 73, 149, 74, 151, 75, 1, 0,
		9, 3, 0, 10, 10, 13, 13, 8232, 8233, 1, 0, 34, 34, 2, 0, 39, 39, 92, 92,
		1, 0, 48, 57, 2, 0, 88, 88, 120, 120, 3, 0, 48, 57, 65, 70, 97, 102, 4,
		0, 36, 36, 65, 90, 95, 95, 97, 122, 5, 0, 36, 36, 48, 57, 65, 90, 95, 95,
		97, 122, 4, 0, 9, 9, 11, 12, 32, 32, 160, 160, 521, 0, 1, 1, 0, 0, 0, 0,
		3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0,
		11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0,
		0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0,
		0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0,
		0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1,
		0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49,
		1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0,
		57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0,
		0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0,
		0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0,
		0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1,
		0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95,
		1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0,
		103, 1, 0, 0, 0, 0, 105, 1, 0, 0, 0, 0, 107, 1, 0, 0, 0, 0, 109, 1, 0,
		0, 0, 0, 111, 1, 0, 0, 0, 0, 113, 1, 0, 0, 0, 0, 115, 1, 0, 0, 0, 0, 117,
		1, 0, 0, 0, 0, 119, 1, 0, 0, 0, 0, 121, 1, 0, 0, 0, 0, 123, 1, 0, 0, 0,
		0, 125, 1, 0, 0, 0, 0, 127, 1, 0, 0, 0, 0, 129, 1, 0, 0, 0, 0, 131, 1,
		0, 0, 0, 0, 135, 1, 0, 0, 0, 0, 137, 1, 0, 0, 0, 0, 139, 1, 0, 0, 0, 0,
		141, 1, 0, 0, 0, 0, 143, 1, 0, 0, 0, 0, 145, 1, 0, 0, 0, 0, 147, 1, 0,
		0, 0, 0, 149, 1, 0, 0, 0, 0, 151, 1, 0, 0, 0, 1, 153, 1, 0, 0, 0, 3, 162,
		1, 0, 0, 0, 5, 164, 1, 0, 0, 0, 7, 166, 1, 0, 0, 0, 9, 168, 1, 0, 0, 0,
		11, 170, 1, 0, 0, 0, 13, 172, 1, 0, 0, 0, 15, 174, 1, 0, 0, 0, 17, 176,
		1, 0, 0, 0, 19, 178, 1, 0, 0, 0, 21, 180, 1, 0, 0, 0, 23, 182, 1, 0, 0,
		0, 25, 184, 1, 0, 0, 0, 27, 187, 1, 0, 0, 0, 29, 190, 1, 0, 0, 0, 31, 192,
		1, 0, 0, 0, 33, 194, 1, 0, 0, 0, 35, 196, 1, 0, 0, 0, 37, 198, 1, 0, 0,
		0, 39, 200, 1, 0, 0, 0, 41, 202, 1, 0, 0, 0, 43, 205, 1, 0, 0, 0, 45, 208,
		1, 0, 0, 0, 47, 212, 1, 0, 0, 0, 49, 216, 1, 0, 0, 0, 51, 218, 1, 0, 0,
		0, 53, 220, 1, 0, 0, 0, 55, 223, 1, 0, 0, 0, 57, 225, 1, 0, 0, 0, 59, 227,
		1, 0, 0, 0, 61, 229, 1, 0, 0, 0, 63, 231, 1, 0, 0, 0, 65, 234, 1, 0, 0,
		0, 67, 237, 1, 0, 0, 0, 69, 240, 1, 0, 0, 0, 71, 243, 1, 0, 0, 0, 73, 246,
		1, 0, 0, 0, 75, 249, 1, 0, 0, 0, 77, 253, 1, 0, 0, 0, 79, 256, 1, 0, 0,
		0, 81, 259, 1, 0, 0, 0, 83, 262, 1, 0, 0, 0, 85, 265, 1, 0, 0, 0, 87, 268,
		1, 0, 0, 0, 89, 271, 1, 0, 0, 0, 91, 274, 1, 0, 0, 0, 93, 277, 1, 0, 0,
		0, 95, 279, 1, 0, 0, 0, 97, 284, 1, 0, 0, 0, 99, 289, 1, 0, 0, 0, 101,
		293, 1, 0, 0, 0, 103, 297, 1, 0, 0, 0, 105, 303, 1, 0, 0, 0, 107, 313,
		1, 0, 0, 0, 109, 324, 1, 0, 0, 0, 111, 329, 1, 0, 0, 0, 113, 336, 1, 0,
		0, 0, 115, 345, 1, 0, 0, 0, 117, 349, 1, 0, 0, 0, 119, 357, 1, 0, 0, 0,
		121, 360, 1, 0, 0, 0, 123, 369, 1, 0, 0, 0, 125, 376, 1, 0, 0, 0, 127,
		382, 1, 0, 0, 0, 129, 388, 1, 0, 0, 0, 131, 409, 1, 0, 0, 0, 133, 414,
		1, 0, 0, 0, 135, 434, 1, 0, 0, 0, 137, 437, 1, 0, 0, 0, 139, 441, 1, 0,
		0, 0, 141, 452, 1, 0, 0, 0, 143, 476, 1, 0, 0, 0, 145, 483, 1, 0, 0, 0,
		147, 488, 1, 0, 0, 0, 149, 496, 1, 0, 0, 0, 151, 502, 1, 0, 0, 0, 153,
		157, 5, 35, 0, 0, 154, 156, 8, 0, 0, 0, 155, 154, 1, 0, 0, 0, 156, 159,
		1, 0, 0, 0, 157, 155, 1, 0, 0, 0, 157, 158, 1, 0, 0, 0, 158, 160, 1, 0,
		0, 0, 159, 157, 1, 0, 0, 0, 160, 161, 6, 0, 0, 0, 161, 2, 1, 0, 0, 0, 162,
		163, 5, 91, 0, 0, 163, 4, 1, 0, 0, 0, 164, 165, 5, 93, 0, 0, 165, 6, 1,
		0, 0, 0, 166, 167, 5, 40, 0, 0, 167, 8, 1, 0, 0, 0, 168, 169, 5, 41, 0,
		0, 169, 10, 1, 0, 0, 0, 170, 171, 5, 123, 0, 0, 171, 12, 1, 0, 0, 0, 172,
		173, 5, 125, 0, 0, 173, 14, 1, 0, 0, 0, 174, 175, 5, 59, 0, 0, 175, 16,
		1, 0, 0, 0, 176, 177, 5, 44, 0, 0, 177, 18, 1, 0, 0, 0, 178, 179, 5, 61,
		0, 0, 179, 20, 1, 0, 0, 0, 180, 181, 5, 58, 0, 0, 181, 22, 1, 0, 0, 0,
		182, 183, 5, 46, 0, 0, 183, 24, 1, 0, 0, 0, 184, 185, 5, 43, 0, 0, 185,
		186, 5, 43, 0, 0, 186, 26, 1, 0, 0, 0, 187, 188, 5, 45, 0, 0, 188, 189,
		5, 45, 0, 0, 189, 28, 1, 0, 0, 0, 190, 191, 5, 43, 0, 0, 191, 30, 1, 0,
		0, 0, 192, 193, 5, 45, 0, 0, 193, 32, 1, 0, 0, 0, 194, 195, 5, 126, 0,
		0, 195, 34, 1, 0, 0, 0, 196, 197, 5, 38, 0, 0, 197, 36, 1, 0, 0, 0, 198,
		199, 5, 94, 0, 0, 199, 38, 1, 0, 0, 0, 200, 201, 5, 124, 0, 0, 201, 40,
		1, 0, 0, 0, 202, 203, 5, 62, 0, 0, 203, 204, 5, 62, 0, 0, 204, 42, 1, 0,
		0, 0, 205, 206, 5, 60, 0, 0, 206, 207, 5, 60, 0, 0, 207, 44, 1, 0, 0, 0,
		208, 209, 5, 60, 0, 0, 209, 210, 5, 60, 0, 0, 210, 211, 5, 60, 0, 0, 211,
		46, 1, 0, 0, 0, 212, 213, 5, 62, 0, 0, 213, 214, 5, 62, 0, 0, 214, 215,
		5, 62, 0, 0, 215, 48, 1, 0, 0, 0, 216, 217, 5, 33, 0, 0, 217, 50, 1, 0,
		0, 0, 218, 219, 5, 42, 0, 0, 219, 52, 1, 0, 0, 0, 220, 221, 5, 42, 0, 0,
		221, 222, 5, 42, 0, 0, 222, 54, 1, 0, 0, 0, 223, 224, 5, 47, 0, 0, 224,
		56, 1, 0, 0, 0, 225, 226, 5, 37, 0, 0, 226, 58, 1, 0, 0, 0, 227, 228, 5,
		60, 0, 0, 228, 60, 1, 0, 0, 0, 229, 230, 5, 62, 0, 0, 230, 62, 1, 0, 0,
		0, 231, 232, 5, 60, 0, 0, 232, 233, 5, 61, 0, 0, 233, 64, 1, 0, 0, 0, 234,
		235, 5, 62, 0, 0, 235, 236, 5, 61, 0, 0, 236, 66, 1, 0, 0, 0, 237, 238,
		5, 61, 0, 0, 238, 239, 5, 61, 0, 0, 239, 68, 1, 0, 0, 0, 240, 241, 5, 61,
		0, 0, 241, 242, 5, 126, 0, 0, 242, 70, 1, 0, 0, 0, 243, 244, 5, 33, 0,
		0, 244, 245, 5, 61, 0, 0, 245, 72, 1, 0, 0, 0, 246, 247, 5, 33, 0, 0, 247,
		248, 5, 126, 0, 0, 248, 74, 1, 0, 0, 0, 249, 250, 5, 62, 0, 0, 250, 251,
		5, 33, 0, 0, 251, 252, 5, 60, 0, 0, 252, 76, 1, 0, 0, 0, 253, 254, 5, 62,
		0, 0, 254, 255, 5, 60, 0, 0, 255, 78, 1, 0, 0, 0, 256, 257, 5, 38, 0, 0,
		257, 258, 5, 38, 0, 0, 258, 80, 1, 0, 0, 0, 259, 260, 5, 124, 0, 0, 260,
		261, 5, 124, 0, 0, 261, 82, 1, 0, 0, 0, 262, 263, 5, 42, 0, 0, 263, 264,
		5, 61, 0, 0, 264, 84, 1, 0, 0, 0, 265, 266, 5, 47, 0, 0, 266, 267, 5, 61,
		0, 0, 267, 86, 1, 0, 0, 0, 268, 269, 5, 37, 0, 0, 269, 270, 5, 61, 0, 0,
		270, 88, 1, 0, 0, 0, 271, 272, 5, 43, 0, 0, 272, 273, 5, 61, 0, 0, 273,
		90, 1, 0, 0, 0, 274, 275, 5, 45, 0, 0, 275, 276, 5, 61, 0, 0, 276, 92,
		1, 0, 0, 0, 277, 278, 5, 120, 0, 0, 278, 94, 1, 0, 0, 0, 279, 280, 5, 62,
		0, 0, 280, 281, 5, 62, 0, 0, 281, 282, 5, 62, 0, 0, 282, 283, 5, 61, 0,
		0, 283, 96, 1, 0, 0, 0, 284, 285, 5, 60, 0, 0, 285, 286, 5, 60, 0, 0, 286,
		287, 5, 60, 0, 0, 287, 288, 5, 61, 0, 0, 288, 98, 1, 0, 0, 0, 289, 290,
		5, 62, 0, 0, 290, 291, 5, 62, 0, 0, 291, 292, 5, 61, 0, 0, 292, 100, 1,
		0, 0, 0, 293, 294, 5, 60, 0, 0, 294, 295, 5, 60, 0, 0, 295, 296, 5, 61,
		0, 0, 296, 102, 1, 0, 0, 0, 297, 298, 5, 98, 0, 0, 298, 299, 5, 114, 0,
		0, 299, 300, 5, 101, 0, 0, 300, 301, 5, 97, 0, 0, 301, 302, 5, 107, 0,
		0, 302, 104, 1, 0, 0, 0, 303, 304, 5, 108, 0, 0, 304, 305, 5, 111, 0, 0,
		305, 306, 5, 99, 0, 0, 306, 307, 5, 97, 0, 0, 307, 308, 5, 108, 0, 0, 308,
		309, 5, 95, 0, 0, 309, 310, 5, 118, 0, 0, 310, 311, 5, 97, 0, 0, 311, 312,
		5, 114, 0, 0, 312, 106, 1, 0, 0, 0, 313, 314, 5, 103, 0, 0, 314, 315, 5,
		108, 0, 0, 315, 316, 5, 111, 0, 0, 316, 317, 5, 98, 0, 0, 317, 318, 5,
		97, 0, 0, 318, 319, 5, 108, 0, 0, 319, 320, 5, 95, 0, 0, 320, 321, 5, 118,
		0, 0, 321, 322, 5, 97, 0, 0, 322, 323, 5, 114, 0, 0, 323, 108, 1, 0, 0,
		0, 324, 325, 5, 101, 0, 0, 325, 326, 5, 108, 0, 0, 326, 327, 5, 115, 0,
		0, 327, 328, 5, 101, 0, 0, 328, 110, 1, 0, 0, 0, 329, 330, 5, 114, 0, 0,
		330, 331, 5, 101, 0, 0, 331, 332, 5, 116, 0, 0, 332, 333, 5, 117, 0, 0,
		333, 334, 5, 114, 0, 0, 334, 335, 5, 110, 0, 0, 335, 112, 1, 0, 0, 0, 336,
		337, 5, 99, 0, 0, 337, 338, 5, 111, 0, 0, 338, 339, 5, 110, 0, 0, 339,
		340, 5, 116, 0, 0, 340, 341, 5, 105, 0, 0, 341, 342, 5, 110, 0, 0, 342,
		343, 5, 117, 0, 0, 343, 344, 5, 101, 0, 0, 344, 114, 1, 0, 0, 0, 345, 346,
		5, 102, 0, 0, 346, 347, 5, 111, 0, 0, 347, 348, 5, 114, 0, 0, 348, 116,
		1, 0, 0, 0, 349, 350, 5, 102, 0, 0, 350, 351, 5, 111, 0, 0, 351, 352, 5,
		114, 0, 0, 352, 353, 5, 101, 0, 0, 353, 354, 5, 97, 0, 0, 354, 355, 5,
		99, 0, 0, 355, 356, 5, 104, 0, 0, 356, 118, 1, 0, 0, 0, 357, 358, 5, 105,
		0, 0, 358, 359, 5, 102, 0, 0, 359, 120, 1, 0, 0, 0, 360, 361, 5, 102, 0,
		0, 361, 362, 5, 117, 0, 0, 362, 363, 5, 110, 0, 0, 363, 364, 5, 99, 0,
		0, 364, 365, 5, 116, 0, 0, 365, 366, 5, 105, 0, 0, 366, 367, 5, 111, 0,
		0, 367, 368, 5, 110, 0, 0, 368, 122, 1, 0, 0, 0, 369, 370, 5, 114, 0, 0,
		370, 371, 5, 101, 0, 0, 371, 372, 5, 112, 0, 0, 372, 373, 5, 101, 0, 0,
		373, 374, 5, 97, 0, 0, 374, 375, 5, 116, 0, 0, 375, 124, 1, 0, 0, 0, 376,
		377, 5, 119, 0, 0, 377, 378, 5, 104, 0, 0, 378, 379, 5, 105, 0, 0, 379,
		380, 5, 108, 0, 0, 380, 381, 5, 101, 0, 0, 381, 126, 1, 0, 0, 0, 382, 383,
		5, 117, 0, 0, 383, 384, 5, 110, 0, 0, 384, 385, 5, 116, 0, 0, 385, 386,
		5, 105, 0, 0, 386, 387, 5, 108, 0, 0, 387, 128, 1, 0, 0, 0, 388, 389, 5,
		101, 0, 0, 389, 390, 5, 120, 0, 0, 390, 391, 5, 105, 0, 0, 391, 392, 5,
		116, 0, 0, 392, 130, 1, 0, 0, 0, 393, 397, 5, 34, 0, 0, 394, 396, 8, 1,
		0, 0, 395, 394, 1, 0, 0, 0, 396, 399, 1, 0, 0, 0, 397, 395, 1, 0, 0, 0,
		397, 398, 1, 0, 0, 0, 398, 400, 1, 0, 0, 0, 399, 397, 1, 0, 0, 0, 400,
		410, 5, 34, 0, 0, 401, 405, 5, 39, 0, 0, 402, 404, 3, 133, 66, 0, 403,
		402, 1, 0, 0, 0, 404, 407, 1, 0, 0, 0, 405, 403, 1, 0, 0, 0, 405, 406,
		1, 0, 0, 0, 406, 408, 1, 0, 0, 0, 407, 405, 1, 0, 0, 0, 408, 410, 5, 39,
		0, 0, 409, 393, 1, 0, 0, 0, 409, 401, 1, 0, 0, 0, 410, 132, 1, 0, 0, 0,
		411, 415, 8, 2, 0, 0, 412, 413, 5, 92, 0, 0, 413, 415, 9, 0, 0, 0, 414,
		411, 1, 0, 0, 0, 414, 412, 1, 0, 0, 0, 415, 134, 1, 0, 0, 0, 416, 417,
		5, 116, 0, 0, 417, 418, 5, 114, 0, 0, 418, 419, 5, 117, 0, 0, 419, 435,
		5, 101, 0, 0, 420, 421, 5, 102, 0, 0, 421, 422, 5, 97, 0, 0, 422, 423,
		5, 108, 0, 0, 423, 424, 5, 115, 0, 0, 424, 435, 5, 101, 0, 0, 425, 426,
		5, 70, 0, 0, 426, 427, 5, 65, 0, 0, 427, 428, 5, 76, 0, 0, 428, 429, 5,
		83, 0, 0, 429, 435, 5, 69, 0, 0, 430, 431, 5, 84, 0, 0, 431, 432, 5, 82,
		0, 0, 432, 433, 5, 85, 0, 0, 433, 435, 5, 69, 0, 0, 434, 416, 1, 0, 0,
		0, 434, 420, 1, 0, 0, 0, 434, 425, 1, 0, 0, 0, 434, 430, 1, 0, 0, 0, 435,
		136, 1, 0, 0, 0, 436, 438, 7, 3, 0, 0, 437, 436, 1, 0, 0, 0, 438, 439,
		1, 0, 0, 0, 439, 437, 1, 0, 0, 0, 439, 440, 1, 0, 0, 0, 440, 138, 1, 0,
		0, 0, 441, 442, 3, 137, 68, 0, 442, 446, 5, 46, 0, 0, 443, 445, 7, 3, 0,
		0, 444, 443, 1, 0, 0, 0, 445, 448, 1, 0, 0, 0, 446, 444, 1, 0, 0, 0, 446,
		447, 1, 0, 0, 0, 447, 140, 1, 0, 0, 0, 448, 446, 1, 0, 0, 0, 449, 451,
		7, 3, 0, 0, 450, 449, 1, 0, 0, 0, 451, 454, 1, 0, 0, 0, 452, 450, 1, 0,
		0, 0, 452, 453, 1, 0, 0, 0, 453, 455, 1, 0, 0, 0, 454, 452, 1, 0, 0, 0,
		455, 459, 5, 46, 0, 0, 456, 458, 7, 3, 0, 0, 457, 456, 1, 0, 0, 0, 458,
		461, 1, 0, 0, 0, 459, 457, 1, 0, 0, 0, 459, 460, 1, 0, 0, 0, 460, 462,
		1, 0, 0, 0, 461, 459, 1, 0, 0, 0, 462, 466, 5, 46, 0, 0, 463, 465, 7, 3,
		0, 0, 464, 463, 1, 0, 0, 0, 465, 468, 1, 0, 0, 0, 466, 464, 1, 0, 0, 0,
		466, 467, 1, 0, 0, 0, 467, 469, 1, 0, 0, 0, 468, 466, 1, 0, 0, 0, 469,
		473, 5, 46, 0, 0, 470, 472, 7, 3, 0, 0, 471, 470, 1, 0, 0, 0, 472, 475,
		1, 0, 0, 0, 473, 471, 1, 0, 0, 0, 473, 474, 1, 0, 0, 0, 474, 142, 1, 0,
		0, 0, 475, 473, 1, 0, 0, 0, 476, 477, 5, 48, 0, 0, 477, 479, 7, 4, 0, 0,
		478, 480, 7, 5, 0, 0, 479, 478, 1, 0, 0, 0, 480, 481, 1, 0, 0, 0, 481,
		479, 1, 0, 0, 0, 481, 482, 1, 0, 0, 0, 482, 144, 1, 0, 0, 0, 483, 484,
		5, 78, 0, 0, 484, 485, 5, 85, 0, 0, 485, 486, 5, 76, 0, 0, 486, 487, 5,
		76, 0, 0, 487, 146, 1, 0, 0, 0, 488, 492, 7, 6, 0, 0, 489, 491, 7, 7, 0,
		0, 490, 489, 1, 0, 0, 0, 491, 494, 1, 0, 0, 0, 492, 490, 1, 0, 0, 0, 492,
		493, 1, 0, 0, 0, 493, 148, 1, 0, 0, 0, 494, 492, 1, 0, 0, 0, 495, 497,
		7, 8, 0, 0, 496, 495, 1, 0, 0, 0, 497, 498, 1, 0, 0, 0, 498, 496, 1, 0,
		0, 0, 498, 499, 1, 0, 0, 0, 499, 500, 1, 0, 0, 0, 500, 501, 6, 74, 0, 0,
		501, 150, 1, 0, 0, 0, 502, 503, 7, 0, 0, 0, 503, 504, 1, 0, 0, 0, 504,
		505, 6, 75, 0, 0, 505, 152, 1, 0, 0, 0, 16, 0, 157, 397, 405, 409, 414,
		434, 439, 446, 452, 459, 466, 473, 481, 492, 498, 1, 0, 1, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// NaslLexerInit initializes any static state used to implement NaslLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewNaslLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func NaslLexerInit() {
	staticData := &nasllexerLexerStaticData
	staticData.once.Do(nasllexerLexerInit)
}

// NewNaslLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewNaslLexer(input antlr.CharStream) *NaslLexer {
	NaslLexerInit()
	l := new(NaslLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &nasllexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "NaslLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// NaslLexer tokens.
const (
	NaslLexerSingleLineComment          = 1
	NaslLexerOpenBracket                = 2
	NaslLexerCloseBracket               = 3
	NaslLexerOpenParen                  = 4
	NaslLexerCloseParen                 = 5
	NaslLexerOpenBrace                  = 6
	NaslLexerCloseBrace                 = 7
	NaslLexerSemiColon                  = 8
	NaslLexerComma                      = 9
	NaslLexerAssign                     = 10
	NaslLexerColon                      = 11
	NaslLexerDot                        = 12
	NaslLexerPlusPlus                   = 13
	NaslLexerMinusMinus                 = 14
	NaslLexerPlus                       = 15
	NaslLexerMinus                      = 16
	NaslLexerBitNot                     = 17
	NaslLexerBitAnd                     = 18
	NaslLexerBitXOr                     = 19
	NaslLexerBitOr                      = 20
	NaslLexerRightShiftArithmetic       = 21
	NaslLexerLeftShiftArithmetic        = 22
	NaslLexerLeftShiftLogical           = 23
	NaslLexerRightShiftLogical          = 24
	NaslLexerNot                        = 25
	NaslLexerMultiply                   = 26
	NaslLexerPow                        = 27
	NaslLexerDivide                     = 28
	NaslLexerModulus                    = 29
	NaslLexerLessThan                   = 30
	NaslLexerMoreThan                   = 31
	NaslLexerLessThanEquals             = 32
	NaslLexerGreaterThanEquals          = 33
	NaslLexerEquals_                    = 34
	NaslLexerEqualsRe                   = 35
	NaslLexerNotEquals                  = 36
	NaslLexerNotLong                    = 37
	NaslLexerMTNotLT                    = 38
	NaslLexerMTLT                       = 39
	NaslLexerAnd                        = 40
	NaslLexerOr                         = 41
	NaslLexerMultiplyAssign             = 42
	NaslLexerDivideAssign               = 43
	NaslLexerModulusAssign              = 44
	NaslLexerPlusAssign                 = 45
	NaslLexerMinusAssign                = 46
	NaslLexerX                          = 47
	NaslLexerRightShiftLogicalAssign    = 48
	NaslLexerLeftShiftLogicalAssign     = 49
	NaslLexerRightShiftArithmeticAssign = 50
	NaslLexerLeftShiftArithmeticAssign  = 51
	NaslLexerBreak                      = 52
	NaslLexerLocalVar                   = 53
	NaslLexerGlobalVar                  = 54
	NaslLexerElse                       = 55
	NaslLexerReturn                     = 56
	NaslLexerContinue                   = 57
	NaslLexerFor                        = 58
	NaslLexerForEach                    = 59
	NaslLexerIf                         = 60
	NaslLexerFunction_                  = 61
	NaslLexerRepeat                     = 62
	NaslLexerWhile                      = 63
	NaslLexerUntil                      = 64
	NaslLexerExit                       = 65
	NaslLexerStringLiteral              = 66
	NaslLexerBooleanLiteral             = 67
	NaslLexerIntegerLiteral             = 68
	NaslLexerFloatLiteral               = 69
	NaslLexerIpLiteral                  = 70
	NaslLexerHexLiteral                 = 71
	NaslLexerNULLLiteral                = 72
	NaslLexerIdentifier                 = 73
	NaslLexerWhiteSpaces                = 74
	NaslLexerLineTerminator             = 75
)

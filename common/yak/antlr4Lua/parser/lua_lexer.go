// Code generated from java-escape by ANTLR 4.11.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr/v4"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type LuaLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lualexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func lualexerLexerInit() {
	staticData := &lualexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "'function'", "'nil'", "'false'", "'true'", "'return'", "'break'",
		"'continue'", "'goto'", "'repeat'", "'until'", "'while'", "'do'", "'end'",
		"'if'", "'then'", "'else'", "'elseif'", "'for'", "'in'", "'local'",
		"'not'", "'or'", "'and'", "'*'", "'/'", "'//'", "'%'", "'&'", "'|'",
		"'<<'", "'>>'", "'+'", "'-'", "'^'", "'<'", "'>'", "'=='", "'<='", "'>='",
		"'~='", "':'", "'::'", "'['", "']'", "'('", "')'", "'{'", "'}'", "','",
		"'#'", "'='", "'++'", "'--'", "'+='", "'-='", "'*='", "'/='", "'%='",
		"';'", "'...'", "'~'", "'.'", "'..'",
	}
	staticData.symbolicNames = []string{
		"", "Function", "Nil", "False", "True", "Return", "Break", "Continue",
		"Goto", "Repeat", "Until", "While", "Do", "End", "If", "Then", "Else",
		"ElseIf", "For", "In", "Local", "Not", "Or", "And", "Mul", "Div", "IntegralDiv",
		"Mod", "Amp", "Xand", "LtLt", "GtGt", "Plus", "Sub", "Power", "Lt",
		"Gt", "Eq", "LtEq", "GtEq", "Neq", "Colon", "DoubleColon", "LBracket",
		"RBracket", "LParen", "RParen", "LBrace", "RBrace", "Comma", "Pound",
		"AssignEq", "PlusPlus", "SubSub", "PlusEq", "MinusEq", "MulEq", "DivEq",
		"ModEq", "SemiColon", "Ellipsis", "NotSymbol", "Dot", "Strcat", "NAME",
		"NORMALSTRING", "CHARSTRING", "LONGSTRING", "INT", "HEX", "FLOAT", "HEX_FLOAT",
		"COMMENT", "LINE_COMMENT", "WS", "SHEBANG",
	}
	staticData.ruleNames = []string{
		"Function", "Nil", "False", "True", "Return", "Break", "Continue", "Goto",
		"Repeat", "Until", "While", "Do", "End", "If", "Then", "Else", "ElseIf",
		"For", "In", "Local", "Not", "Or", "And", "Mul", "Div", "IntegralDiv",
		"Mod", "Amp", "Xand", "LtLt", "GtGt", "Plus", "Sub", "Power", "Lt",
		"Gt", "Eq", "LtEq", "GtEq", "Neq", "Colon", "DoubleColon", "LBracket",
		"RBracket", "LParen", "RParen", "LBrace", "RBrace", "Comma", "Pound",
		"AssignEq", "PlusPlus", "SubSub", "PlusEq", "MinusEq", "MulEq", "DivEq",
		"ModEq", "SemiColon", "Ellipsis", "NotSymbol", "Dot", "Strcat", "NAME",
		"NORMALSTRING", "CHARSTRING", "LONGSTRING", "NESTED_STR", "INT", "HEX",
		"FLOAT", "HEX_FLOAT", "ExponentPart", "HexExponentPart", "EscapeSequence",
		"DecimalEscape", "HexEscape", "UtfEscape", "Digit", "HexDigit", "SingleLineInputCharacter",
		"COMMENT", "LINE_COMMENT", "WS", "SHEBANG",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 75, 621, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67,
		2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 2, 71, 7, 71, 2, 72, 7, 72, 2,
		73, 7, 73, 2, 74, 7, 74, 2, 75, 7, 75, 2, 76, 7, 76, 2, 77, 7, 77, 2, 78,
		7, 78, 2, 79, 7, 79, 2, 80, 7, 80, 2, 81, 7, 81, 2, 82, 7, 82, 2, 83, 7,
		83, 2, 84, 7, 84, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3,
		1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5,
		1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6,
		1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8,
		1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1,
		10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13,
		1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1,
		15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17,
		1, 17, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1,
		20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22,
		1, 23, 1, 23, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 27, 1,
		27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31,
		1, 32, 1, 32, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 36, 1, 36, 1,
		36, 1, 37, 1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1, 39, 1, 39, 1, 39, 1, 40,
		1, 40, 1, 41, 1, 41, 1, 41, 1, 42, 1, 42, 1, 43, 1, 43, 1, 44, 1, 44, 1,
		45, 1, 45, 1, 46, 1, 46, 1, 47, 1, 47, 1, 48, 1, 48, 1, 49, 1, 49, 1, 50,
		1, 50, 1, 51, 1, 51, 1, 51, 1, 52, 1, 52, 1, 52, 1, 53, 1, 53, 1, 53, 1,
		54, 1, 54, 1, 54, 1, 55, 1, 55, 1, 55, 1, 56, 1, 56, 1, 56, 1, 57, 1, 57,
		1, 57, 1, 58, 1, 58, 1, 59, 1, 59, 1, 59, 1, 59, 1, 60, 1, 60, 1, 61, 1,
		61, 1, 62, 1, 62, 1, 62, 1, 63, 1, 63, 5, 63, 393, 8, 63, 10, 63, 12, 63,
		396, 9, 63, 1, 64, 1, 64, 1, 64, 5, 64, 401, 8, 64, 10, 64, 12, 64, 404,
		9, 64, 1, 64, 1, 64, 1, 65, 1, 65, 1, 65, 5, 65, 411, 8, 65, 10, 65, 12,
		65, 414, 9, 65, 1, 65, 1, 65, 1, 66, 1, 66, 1, 66, 1, 66, 1, 67, 1, 67,
		1, 67, 1, 67, 1, 67, 1, 67, 5, 67, 428, 8, 67, 10, 67, 12, 67, 431, 9,
		67, 1, 67, 3, 67, 434, 8, 67, 1, 68, 4, 68, 437, 8, 68, 11, 68, 12, 68,
		438, 1, 69, 1, 69, 1, 69, 4, 69, 444, 8, 69, 11, 69, 12, 69, 445, 1, 70,
		4, 70, 449, 8, 70, 11, 70, 12, 70, 450, 1, 70, 1, 70, 5, 70, 455, 8, 70,
		10, 70, 12, 70, 458, 9, 70, 1, 70, 3, 70, 461, 8, 70, 1, 70, 1, 70, 4,
		70, 465, 8, 70, 11, 70, 12, 70, 466, 1, 70, 3, 70, 470, 8, 70, 1, 70, 4,
		70, 473, 8, 70, 11, 70, 12, 70, 474, 1, 70, 1, 70, 3, 70, 479, 8, 70, 1,
		71, 1, 71, 1, 71, 4, 71, 484, 8, 71, 11, 71, 12, 71, 485, 1, 71, 1, 71,
		5, 71, 490, 8, 71, 10, 71, 12, 71, 493, 9, 71, 1, 71, 3, 71, 496, 8, 71,
		1, 71, 1, 71, 1, 71, 1, 71, 4, 71, 502, 8, 71, 11, 71, 12, 71, 503, 1,
		71, 3, 71, 507, 8, 71, 1, 71, 1, 71, 1, 71, 4, 71, 512, 8, 71, 11, 71,
		12, 71, 513, 1, 71, 1, 71, 3, 71, 518, 8, 71, 1, 72, 1, 72, 3, 72, 522,
		8, 72, 1, 72, 4, 72, 525, 8, 72, 11, 72, 12, 72, 526, 1, 73, 1, 73, 3,
		73, 531, 8, 73, 1, 73, 4, 73, 534, 8, 73, 11, 73, 12, 73, 535, 1, 74, 1,
		74, 1, 74, 1, 74, 3, 74, 542, 8, 74, 1, 74, 1, 74, 1, 74, 1, 74, 3, 74,
		548, 8, 74, 1, 75, 1, 75, 1, 75, 1, 75, 1, 75, 1, 75, 1, 75, 1, 75, 1,
		75, 1, 75, 1, 75, 3, 75, 561, 8, 75, 1, 76, 1, 76, 1, 76, 1, 76, 1, 76,
		1, 77, 1, 77, 1, 77, 1, 77, 1, 77, 4, 77, 573, 8, 77, 11, 77, 12, 77, 574,
		1, 77, 1, 77, 1, 78, 1, 78, 1, 79, 1, 79, 1, 80, 1, 80, 1, 81, 1, 81, 1,
		81, 1, 81, 1, 81, 1, 81, 1, 81, 1, 81, 1, 81, 1, 82, 1, 82, 1, 82, 1, 82,
		5, 82, 598, 8, 82, 10, 82, 12, 82, 601, 9, 82, 1, 82, 1, 82, 1, 83, 4,
		83, 606, 8, 83, 11, 83, 12, 83, 607, 1, 83, 1, 83, 1, 84, 1, 84, 1, 84,
		5, 84, 615, 8, 84, 10, 84, 12, 84, 618, 9, 84, 1, 84, 1, 84, 1, 429, 0,
		85, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21,
		11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39,
		20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57,
		29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75,
		38, 77, 39, 79, 40, 81, 41, 83, 42, 85, 43, 87, 44, 89, 45, 91, 46, 93,
		47, 95, 48, 97, 49, 99, 50, 101, 51, 103, 52, 105, 53, 107, 54, 109, 55,
		111, 56, 113, 57, 115, 58, 117, 59, 119, 60, 121, 61, 123, 62, 125, 63,
		127, 64, 129, 65, 131, 66, 133, 67, 135, 0, 137, 68, 139, 69, 141, 70,
		143, 71, 145, 0, 147, 0, 149, 0, 151, 0, 153, 0, 155, 0, 157, 0, 159, 0,
		161, 0, 163, 72, 165, 73, 167, 74, 169, 75, 1, 0, 14, 3, 0, 65, 90, 95,
		95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 2, 0, 34, 34, 92, 92,
		2, 0, 39, 39, 92, 92, 2, 0, 88, 88, 120, 120, 2, 0, 69, 69, 101, 101, 2,
		0, 43, 43, 45, 45, 2, 0, 80, 80, 112, 112, 11, 0, 34, 36, 39, 39, 92, 92,
		97, 98, 102, 102, 110, 110, 114, 114, 116, 116, 118, 118, 122, 122, 124,
		124, 1, 0, 48, 50, 1, 0, 48, 57, 3, 0, 48, 57, 65, 70, 97, 102, 4, 0, 10,
		10, 13, 13, 133, 133, 8232, 8233, 3, 0, 9, 10, 12, 13, 32, 32, 650, 0,
		1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0,
		9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0,
		0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0,
		0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0,
		0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1,
		0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47,
		1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0,
		55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0,
		0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0,
		0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0,
		0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1,
		0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93,
		1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0,
		101, 1, 0, 0, 0, 0, 103, 1, 0, 0, 0, 0, 105, 1, 0, 0, 0, 0, 107, 1, 0,
		0, 0, 0, 109, 1, 0, 0, 0, 0, 111, 1, 0, 0, 0, 0, 113, 1, 0, 0, 0, 0, 115,
		1, 0, 0, 0, 0, 117, 1, 0, 0, 0, 0, 119, 1, 0, 0, 0, 0, 121, 1, 0, 0, 0,
		0, 123, 1, 0, 0, 0, 0, 125, 1, 0, 0, 0, 0, 127, 1, 0, 0, 0, 0, 129, 1,
		0, 0, 0, 0, 131, 1, 0, 0, 0, 0, 133, 1, 0, 0, 0, 0, 137, 1, 0, 0, 0, 0,
		139, 1, 0, 0, 0, 0, 141, 1, 0, 0, 0, 0, 143, 1, 0, 0, 0, 0, 163, 1, 0,
		0, 0, 0, 165, 1, 0, 0, 0, 0, 167, 1, 0, 0, 0, 0, 169, 1, 0, 0, 0, 1, 171,
		1, 0, 0, 0, 3, 180, 1, 0, 0, 0, 5, 184, 1, 0, 0, 0, 7, 190, 1, 0, 0, 0,
		9, 195, 1, 0, 0, 0, 11, 202, 1, 0, 0, 0, 13, 208, 1, 0, 0, 0, 15, 217,
		1, 0, 0, 0, 17, 222, 1, 0, 0, 0, 19, 229, 1, 0, 0, 0, 21, 235, 1, 0, 0,
		0, 23, 241, 1, 0, 0, 0, 25, 244, 1, 0, 0, 0, 27, 248, 1, 0, 0, 0, 29, 251,
		1, 0, 0, 0, 31, 256, 1, 0, 0, 0, 33, 261, 1, 0, 0, 0, 35, 268, 1, 0, 0,
		0, 37, 272, 1, 0, 0, 0, 39, 275, 1, 0, 0, 0, 41, 281, 1, 0, 0, 0, 43, 285,
		1, 0, 0, 0, 45, 288, 1, 0, 0, 0, 47, 292, 1, 0, 0, 0, 49, 294, 1, 0, 0,
		0, 51, 296, 1, 0, 0, 0, 53, 299, 1, 0, 0, 0, 55, 301, 1, 0, 0, 0, 57, 303,
		1, 0, 0, 0, 59, 305, 1, 0, 0, 0, 61, 308, 1, 0, 0, 0, 63, 311, 1, 0, 0,
		0, 65, 313, 1, 0, 0, 0, 67, 315, 1, 0, 0, 0, 69, 317, 1, 0, 0, 0, 71, 319,
		1, 0, 0, 0, 73, 321, 1, 0, 0, 0, 75, 324, 1, 0, 0, 0, 77, 327, 1, 0, 0,
		0, 79, 330, 1, 0, 0, 0, 81, 333, 1, 0, 0, 0, 83, 335, 1, 0, 0, 0, 85, 338,
		1, 0, 0, 0, 87, 340, 1, 0, 0, 0, 89, 342, 1, 0, 0, 0, 91, 344, 1, 0, 0,
		0, 93, 346, 1, 0, 0, 0, 95, 348, 1, 0, 0, 0, 97, 350, 1, 0, 0, 0, 99, 352,
		1, 0, 0, 0, 101, 354, 1, 0, 0, 0, 103, 356, 1, 0, 0, 0, 105, 359, 1, 0,
		0, 0, 107, 362, 1, 0, 0, 0, 109, 365, 1, 0, 0, 0, 111, 368, 1, 0, 0, 0,
		113, 371, 1, 0, 0, 0, 115, 374, 1, 0, 0, 0, 117, 377, 1, 0, 0, 0, 119,
		379, 1, 0, 0, 0, 121, 383, 1, 0, 0, 0, 123, 385, 1, 0, 0, 0, 125, 387,
		1, 0, 0, 0, 127, 390, 1, 0, 0, 0, 129, 397, 1, 0, 0, 0, 131, 407, 1, 0,
		0, 0, 133, 417, 1, 0, 0, 0, 135, 433, 1, 0, 0, 0, 137, 436, 1, 0, 0, 0,
		139, 440, 1, 0, 0, 0, 141, 478, 1, 0, 0, 0, 143, 517, 1, 0, 0, 0, 145,
		519, 1, 0, 0, 0, 147, 528, 1, 0, 0, 0, 149, 547, 1, 0, 0, 0, 151, 560,
		1, 0, 0, 0, 153, 562, 1, 0, 0, 0, 155, 567, 1, 0, 0, 0, 157, 578, 1, 0,
		0, 0, 159, 580, 1, 0, 0, 0, 161, 582, 1, 0, 0, 0, 163, 584, 1, 0, 0, 0,
		165, 593, 1, 0, 0, 0, 167, 605, 1, 0, 0, 0, 169, 611, 1, 0, 0, 0, 171,
		172, 5, 102, 0, 0, 172, 173, 5, 117, 0, 0, 173, 174, 5, 110, 0, 0, 174,
		175, 5, 99, 0, 0, 175, 176, 5, 116, 0, 0, 176, 177, 5, 105, 0, 0, 177,
		178, 5, 111, 0, 0, 178, 179, 5, 110, 0, 0, 179, 2, 1, 0, 0, 0, 180, 181,
		5, 110, 0, 0, 181, 182, 5, 105, 0, 0, 182, 183, 5, 108, 0, 0, 183, 4, 1,
		0, 0, 0, 184, 185, 5, 102, 0, 0, 185, 186, 5, 97, 0, 0, 186, 187, 5, 108,
		0, 0, 187, 188, 5, 115, 0, 0, 188, 189, 5, 101, 0, 0, 189, 6, 1, 0, 0,
		0, 190, 191, 5, 116, 0, 0, 191, 192, 5, 114, 0, 0, 192, 193, 5, 117, 0,
		0, 193, 194, 5, 101, 0, 0, 194, 8, 1, 0, 0, 0, 195, 196, 5, 114, 0, 0,
		196, 197, 5, 101, 0, 0, 197, 198, 5, 116, 0, 0, 198, 199, 5, 117, 0, 0,
		199, 200, 5, 114, 0, 0, 200, 201, 5, 110, 0, 0, 201, 10, 1, 0, 0, 0, 202,
		203, 5, 98, 0, 0, 203, 204, 5, 114, 0, 0, 204, 205, 5, 101, 0, 0, 205,
		206, 5, 97, 0, 0, 206, 207, 5, 107, 0, 0, 207, 12, 1, 0, 0, 0, 208, 209,
		5, 99, 0, 0, 209, 210, 5, 111, 0, 0, 210, 211, 5, 110, 0, 0, 211, 212,
		5, 116, 0, 0, 212, 213, 5, 105, 0, 0, 213, 214, 5, 110, 0, 0, 214, 215,
		5, 117, 0, 0, 215, 216, 5, 101, 0, 0, 216, 14, 1, 0, 0, 0, 217, 218, 5,
		103, 0, 0, 218, 219, 5, 111, 0, 0, 219, 220, 5, 116, 0, 0, 220, 221, 5,
		111, 0, 0, 221, 16, 1, 0, 0, 0, 222, 223, 5, 114, 0, 0, 223, 224, 5, 101,
		0, 0, 224, 225, 5, 112, 0, 0, 225, 226, 5, 101, 0, 0, 226, 227, 5, 97,
		0, 0, 227, 228, 5, 116, 0, 0, 228, 18, 1, 0, 0, 0, 229, 230, 5, 117, 0,
		0, 230, 231, 5, 110, 0, 0, 231, 232, 5, 116, 0, 0, 232, 233, 5, 105, 0,
		0, 233, 234, 5, 108, 0, 0, 234, 20, 1, 0, 0, 0, 235, 236, 5, 119, 0, 0,
		236, 237, 5, 104, 0, 0, 237, 238, 5, 105, 0, 0, 238, 239, 5, 108, 0, 0,
		239, 240, 5, 101, 0, 0, 240, 22, 1, 0, 0, 0, 241, 242, 5, 100, 0, 0, 242,
		243, 5, 111, 0, 0, 243, 24, 1, 0, 0, 0, 244, 245, 5, 101, 0, 0, 245, 246,
		5, 110, 0, 0, 246, 247, 5, 100, 0, 0, 247, 26, 1, 0, 0, 0, 248, 249, 5,
		105, 0, 0, 249, 250, 5, 102, 0, 0, 250, 28, 1, 0, 0, 0, 251, 252, 5, 116,
		0, 0, 252, 253, 5, 104, 0, 0, 253, 254, 5, 101, 0, 0, 254, 255, 5, 110,
		0, 0, 255, 30, 1, 0, 0, 0, 256, 257, 5, 101, 0, 0, 257, 258, 5, 108, 0,
		0, 258, 259, 5, 115, 0, 0, 259, 260, 5, 101, 0, 0, 260, 32, 1, 0, 0, 0,
		261, 262, 5, 101, 0, 0, 262, 263, 5, 108, 0, 0, 263, 264, 5, 115, 0, 0,
		264, 265, 5, 101, 0, 0, 265, 266, 5, 105, 0, 0, 266, 267, 5, 102, 0, 0,
		267, 34, 1, 0, 0, 0, 268, 269, 5, 102, 0, 0, 269, 270, 5, 111, 0, 0, 270,
		271, 5, 114, 0, 0, 271, 36, 1, 0, 0, 0, 272, 273, 5, 105, 0, 0, 273, 274,
		5, 110, 0, 0, 274, 38, 1, 0, 0, 0, 275, 276, 5, 108, 0, 0, 276, 277, 5,
		111, 0, 0, 277, 278, 5, 99, 0, 0, 278, 279, 5, 97, 0, 0, 279, 280, 5, 108,
		0, 0, 280, 40, 1, 0, 0, 0, 281, 282, 5, 110, 0, 0, 282, 283, 5, 111, 0,
		0, 283, 284, 5, 116, 0, 0, 284, 42, 1, 0, 0, 0, 285, 286, 5, 111, 0, 0,
		286, 287, 5, 114, 0, 0, 287, 44, 1, 0, 0, 0, 288, 289, 5, 97, 0, 0, 289,
		290, 5, 110, 0, 0, 290, 291, 5, 100, 0, 0, 291, 46, 1, 0, 0, 0, 292, 293,
		5, 42, 0, 0, 293, 48, 1, 0, 0, 0, 294, 295, 5, 47, 0, 0, 295, 50, 1, 0,
		0, 0, 296, 297, 5, 47, 0, 0, 297, 298, 5, 47, 0, 0, 298, 52, 1, 0, 0, 0,
		299, 300, 5, 37, 0, 0, 300, 54, 1, 0, 0, 0, 301, 302, 5, 38, 0, 0, 302,
		56, 1, 0, 0, 0, 303, 304, 5, 124, 0, 0, 304, 58, 1, 0, 0, 0, 305, 306,
		5, 60, 0, 0, 306, 307, 5, 60, 0, 0, 307, 60, 1, 0, 0, 0, 308, 309, 5, 62,
		0, 0, 309, 310, 5, 62, 0, 0, 310, 62, 1, 0, 0, 0, 311, 312, 5, 43, 0, 0,
		312, 64, 1, 0, 0, 0, 313, 314, 5, 45, 0, 0, 314, 66, 1, 0, 0, 0, 315, 316,
		5, 94, 0, 0, 316, 68, 1, 0, 0, 0, 317, 318, 5, 60, 0, 0, 318, 70, 1, 0,
		0, 0, 319, 320, 5, 62, 0, 0, 320, 72, 1, 0, 0, 0, 321, 322, 5, 61, 0, 0,
		322, 323, 5, 61, 0, 0, 323, 74, 1, 0, 0, 0, 324, 325, 5, 60, 0, 0, 325,
		326, 5, 61, 0, 0, 326, 76, 1, 0, 0, 0, 327, 328, 5, 62, 0, 0, 328, 329,
		5, 61, 0, 0, 329, 78, 1, 0, 0, 0, 330, 331, 5, 126, 0, 0, 331, 332, 5,
		61, 0, 0, 332, 80, 1, 0, 0, 0, 333, 334, 5, 58, 0, 0, 334, 82, 1, 0, 0,
		0, 335, 336, 5, 58, 0, 0, 336, 337, 5, 58, 0, 0, 337, 84, 1, 0, 0, 0, 338,
		339, 5, 91, 0, 0, 339, 86, 1, 0, 0, 0, 340, 341, 5, 93, 0, 0, 341, 88,
		1, 0, 0, 0, 342, 343, 5, 40, 0, 0, 343, 90, 1, 0, 0, 0, 344, 345, 5, 41,
		0, 0, 345, 92, 1, 0, 0, 0, 346, 347, 5, 123, 0, 0, 347, 94, 1, 0, 0, 0,
		348, 349, 5, 125, 0, 0, 349, 96, 1, 0, 0, 0, 350, 351, 5, 44, 0, 0, 351,
		98, 1, 0, 0, 0, 352, 353, 5, 35, 0, 0, 353, 100, 1, 0, 0, 0, 354, 355,
		5, 61, 0, 0, 355, 102, 1, 0, 0, 0, 356, 357, 5, 43, 0, 0, 357, 358, 5,
		43, 0, 0, 358, 104, 1, 0, 0, 0, 359, 360, 5, 45, 0, 0, 360, 361, 5, 45,
		0, 0, 361, 106, 1, 0, 0, 0, 362, 363, 5, 43, 0, 0, 363, 364, 5, 61, 0,
		0, 364, 108, 1, 0, 0, 0, 365, 366, 5, 45, 0, 0, 366, 367, 5, 61, 0, 0,
		367, 110, 1, 0, 0, 0, 368, 369, 5, 42, 0, 0, 369, 370, 5, 61, 0, 0, 370,
		112, 1, 0, 0, 0, 371, 372, 5, 47, 0, 0, 372, 373, 5, 61, 0, 0, 373, 114,
		1, 0, 0, 0, 374, 375, 5, 37, 0, 0, 375, 376, 5, 61, 0, 0, 376, 116, 1,
		0, 0, 0, 377, 378, 5, 59, 0, 0, 378, 118, 1, 0, 0, 0, 379, 380, 5, 46,
		0, 0, 380, 381, 5, 46, 0, 0, 381, 382, 5, 46, 0, 0, 382, 120, 1, 0, 0,
		0, 383, 384, 5, 126, 0, 0, 384, 122, 1, 0, 0, 0, 385, 386, 5, 46, 0, 0,
		386, 124, 1, 0, 0, 0, 387, 388, 5, 46, 0, 0, 388, 389, 5, 46, 0, 0, 389,
		126, 1, 0, 0, 0, 390, 394, 7, 0, 0, 0, 391, 393, 7, 1, 0, 0, 392, 391,
		1, 0, 0, 0, 393, 396, 1, 0, 0, 0, 394, 392, 1, 0, 0, 0, 394, 395, 1, 0,
		0, 0, 395, 128, 1, 0, 0, 0, 396, 394, 1, 0, 0, 0, 397, 402, 5, 34, 0, 0,
		398, 401, 3, 149, 74, 0, 399, 401, 8, 2, 0, 0, 400, 398, 1, 0, 0, 0, 400,
		399, 1, 0, 0, 0, 401, 404, 1, 0, 0, 0, 402, 400, 1, 0, 0, 0, 402, 403,
		1, 0, 0, 0, 403, 405, 1, 0, 0, 0, 404, 402, 1, 0, 0, 0, 405, 406, 5, 34,
		0, 0, 406, 130, 1, 0, 0, 0, 407, 412, 5, 39, 0, 0, 408, 411, 3, 149, 74,
		0, 409, 411, 8, 3, 0, 0, 410, 408, 1, 0, 0, 0, 410, 409, 1, 0, 0, 0, 411,
		414, 1, 0, 0, 0, 412, 410, 1, 0, 0, 0, 412, 413, 1, 0, 0, 0, 413, 415,
		1, 0, 0, 0, 414, 412, 1, 0, 0, 0, 415, 416, 5, 39, 0, 0, 416, 132, 1, 0,
		0, 0, 417, 418, 5, 91, 0, 0, 418, 419, 3, 135, 67, 0, 419, 420, 5, 93,
		0, 0, 420, 134, 1, 0, 0, 0, 421, 422, 5, 61, 0, 0, 422, 423, 3, 135, 67,
		0, 423, 424, 5, 61, 0, 0, 424, 434, 1, 0, 0, 0, 425, 429, 5, 91, 0, 0,
		426, 428, 9, 0, 0, 0, 427, 426, 1, 0, 0, 0, 428, 431, 1, 0, 0, 0, 429,
		430, 1, 0, 0, 0, 429, 427, 1, 0, 0, 0, 430, 432, 1, 0, 0, 0, 431, 429,
		1, 0, 0, 0, 432, 434, 5, 93, 0, 0, 433, 421, 1, 0, 0, 0, 433, 425, 1, 0,
		0, 0, 434, 136, 1, 0, 0, 0, 435, 437, 3, 157, 78, 0, 436, 435, 1, 0, 0,
		0, 437, 438, 1, 0, 0, 0, 438, 436, 1, 0, 0, 0, 438, 439, 1, 0, 0, 0, 439,
		138, 1, 0, 0, 0, 440, 441, 5, 48, 0, 0, 441, 443, 7, 4, 0, 0, 442, 444,
		3, 159, 79, 0, 443, 442, 1, 0, 0, 0, 444, 445, 1, 0, 0, 0, 445, 443, 1,
		0, 0, 0, 445, 446, 1, 0, 0, 0, 446, 140, 1, 0, 0, 0, 447, 449, 3, 157,
		78, 0, 448, 447, 1, 0, 0, 0, 449, 450, 1, 0, 0, 0, 450, 448, 1, 0, 0, 0,
		450, 451, 1, 0, 0, 0, 451, 452, 1, 0, 0, 0, 452, 456, 5, 46, 0, 0, 453,
		455, 3, 157, 78, 0, 454, 453, 1, 0, 0, 0, 455, 458, 1, 0, 0, 0, 456, 454,
		1, 0, 0, 0, 456, 457, 1, 0, 0, 0, 457, 460, 1, 0, 0, 0, 458, 456, 1, 0,
		0, 0, 459, 461, 3, 145, 72, 0, 460, 459, 1, 0, 0, 0, 460, 461, 1, 0, 0,
		0, 461, 479, 1, 0, 0, 0, 462, 464, 5, 46, 0, 0, 463, 465, 3, 157, 78, 0,
		464, 463, 1, 0, 0, 0, 465, 466, 1, 0, 0, 0, 466, 464, 1, 0, 0, 0, 466,
		467, 1, 0, 0, 0, 467, 469, 1, 0, 0, 0, 468, 470, 3, 145, 72, 0, 469, 468,
		1, 0, 0, 0, 469, 470, 1, 0, 0, 0, 470, 479, 1, 0, 0, 0, 471, 473, 3, 157,
		78, 0, 472, 471, 1, 0, 0, 0, 473, 474, 1, 0, 0, 0, 474, 472, 1, 0, 0, 0,
		474, 475, 1, 0, 0, 0, 475, 476, 1, 0, 0, 0, 476, 477, 3, 145, 72, 0, 477,
		479, 1, 0, 0, 0, 478, 448, 1, 0, 0, 0, 478, 462, 1, 0, 0, 0, 478, 472,
		1, 0, 0, 0, 479, 142, 1, 0, 0, 0, 480, 481, 5, 48, 0, 0, 481, 483, 7, 4,
		0, 0, 482, 484, 3, 159, 79, 0, 483, 482, 1, 0, 0, 0, 484, 485, 1, 0, 0,
		0, 485, 483, 1, 0, 0, 0, 485, 486, 1, 0, 0, 0, 486, 487, 1, 0, 0, 0, 487,
		491, 5, 46, 0, 0, 488, 490, 3, 159, 79, 0, 489, 488, 1, 0, 0, 0, 490, 493,
		1, 0, 0, 0, 491, 489, 1, 0, 0, 0, 491, 492, 1, 0, 0, 0, 492, 495, 1, 0,
		0, 0, 493, 491, 1, 0, 0, 0, 494, 496, 3, 147, 73, 0, 495, 494, 1, 0, 0,
		0, 495, 496, 1, 0, 0, 0, 496, 518, 1, 0, 0, 0, 497, 498, 5, 48, 0, 0, 498,
		499, 7, 4, 0, 0, 499, 501, 5, 46, 0, 0, 500, 502, 3, 159, 79, 0, 501, 500,
		1, 0, 0, 0, 502, 503, 1, 0, 0, 0, 503, 501, 1, 0, 0, 0, 503, 504, 1, 0,
		0, 0, 504, 506, 1, 0, 0, 0, 505, 507, 3, 147, 73, 0, 506, 505, 1, 0, 0,
		0, 506, 507, 1, 0, 0, 0, 507, 518, 1, 0, 0, 0, 508, 509, 5, 48, 0, 0, 509,
		511, 7, 4, 0, 0, 510, 512, 3, 159, 79, 0, 511, 510, 1, 0, 0, 0, 512, 513,
		1, 0, 0, 0, 513, 511, 1, 0, 0, 0, 513, 514, 1, 0, 0, 0, 514, 515, 1, 0,
		0, 0, 515, 516, 3, 147, 73, 0, 516, 518, 1, 0, 0, 0, 517, 480, 1, 0, 0,
		0, 517, 497, 1, 0, 0, 0, 517, 508, 1, 0, 0, 0, 518, 144, 1, 0, 0, 0, 519,
		521, 7, 5, 0, 0, 520, 522, 7, 6, 0, 0, 521, 520, 1, 0, 0, 0, 521, 522,
		1, 0, 0, 0, 522, 524, 1, 0, 0, 0, 523, 525, 3, 157, 78, 0, 524, 523, 1,
		0, 0, 0, 525, 526, 1, 0, 0, 0, 526, 524, 1, 0, 0, 0, 526, 527, 1, 0, 0,
		0, 527, 146, 1, 0, 0, 0, 528, 530, 7, 7, 0, 0, 529, 531, 7, 6, 0, 0, 530,
		529, 1, 0, 0, 0, 530, 531, 1, 0, 0, 0, 531, 533, 1, 0, 0, 0, 532, 534,
		3, 157, 78, 0, 533, 532, 1, 0, 0, 0, 534, 535, 1, 0, 0, 0, 535, 533, 1,
		0, 0, 0, 535, 536, 1, 0, 0, 0, 536, 148, 1, 0, 0, 0, 537, 538, 5, 92, 0,
		0, 538, 548, 7, 8, 0, 0, 539, 541, 5, 92, 0, 0, 540, 542, 5, 13, 0, 0,
		541, 540, 1, 0, 0, 0, 541, 542, 1, 0, 0, 0, 542, 543, 1, 0, 0, 0, 543,
		548, 5, 10, 0, 0, 544, 548, 3, 151, 75, 0, 545, 548, 3, 153, 76, 0, 546,
		548, 3, 155, 77, 0, 547, 537, 1, 0, 0, 0, 547, 539, 1, 0, 0, 0, 547, 544,
		1, 0, 0, 0, 547, 545, 1, 0, 0, 0, 547, 546, 1, 0, 0, 0, 548, 150, 1, 0,
		0, 0, 549, 550, 5, 92, 0, 0, 550, 561, 3, 157, 78, 0, 551, 552, 5, 92,
		0, 0, 552, 553, 3, 157, 78, 0, 553, 554, 3, 157, 78, 0, 554, 561, 1, 0,
		0, 0, 555, 556, 5, 92, 0, 0, 556, 557, 7, 9, 0, 0, 557, 558, 3, 157, 78,
		0, 558, 559, 3, 157, 78, 0, 559, 561, 1, 0, 0, 0, 560, 549, 1, 0, 0, 0,
		560, 551, 1, 0, 0, 0, 560, 555, 1, 0, 0, 0, 561, 152, 1, 0, 0, 0, 562,
		563, 5, 92, 0, 0, 563, 564, 5, 120, 0, 0, 564, 565, 3, 159, 79, 0, 565,
		566, 3, 159, 79, 0, 566, 154, 1, 0, 0, 0, 567, 568, 5, 92, 0, 0, 568, 569,
		5, 117, 0, 0, 569, 570, 5, 123, 0, 0, 570, 572, 1, 0, 0, 0, 571, 573, 3,
		159, 79, 0, 572, 571, 1, 0, 0, 0, 573, 574, 1, 0, 0, 0, 574, 572, 1, 0,
		0, 0, 574, 575, 1, 0, 0, 0, 575, 576, 1, 0, 0, 0, 576, 577, 5, 125, 0,
		0, 577, 156, 1, 0, 0, 0, 578, 579, 7, 10, 0, 0, 579, 158, 1, 0, 0, 0, 580,
		581, 7, 11, 0, 0, 581, 160, 1, 0, 0, 0, 582, 583, 8, 12, 0, 0, 583, 162,
		1, 0, 0, 0, 584, 585, 5, 45, 0, 0, 585, 586, 5, 45, 0, 0, 586, 587, 5,
		91, 0, 0, 587, 588, 1, 0, 0, 0, 588, 589, 3, 135, 67, 0, 589, 590, 5, 93,
		0, 0, 590, 591, 1, 0, 0, 0, 591, 592, 6, 81, 0, 0, 592, 164, 1, 0, 0, 0,
		593, 594, 5, 45, 0, 0, 594, 595, 5, 45, 0, 0, 595, 599, 1, 0, 0, 0, 596,
		598, 3, 161, 80, 0, 597, 596, 1, 0, 0, 0, 598, 601, 1, 0, 0, 0, 599, 597,
		1, 0, 0, 0, 599, 600, 1, 0, 0, 0, 600, 602, 1, 0, 0, 0, 601, 599, 1, 0,
		0, 0, 602, 603, 6, 82, 0, 0, 603, 166, 1, 0, 0, 0, 604, 606, 7, 13, 0,
		0, 605, 604, 1, 0, 0, 0, 606, 607, 1, 0, 0, 0, 607, 605, 1, 0, 0, 0, 607,
		608, 1, 0, 0, 0, 608, 609, 1, 0, 0, 0, 609, 610, 6, 83, 1, 0, 610, 168,
		1, 0, 0, 0, 611, 612, 5, 35, 0, 0, 612, 616, 5, 33, 0, 0, 613, 615, 3,
		161, 80, 0, 614, 613, 1, 0, 0, 0, 615, 618, 1, 0, 0, 0, 616, 614, 1, 0,
		0, 0, 616, 617, 1, 0, 0, 0, 617, 619, 1, 0, 0, 0, 618, 616, 1, 0, 0, 0,
		619, 620, 6, 84, 0, 0, 620, 170, 1, 0, 0, 0, 35, 0, 394, 400, 402, 410,
		412, 429, 433, 438, 445, 450, 456, 460, 466, 469, 474, 478, 485, 491, 495,
		503, 506, 513, 517, 521, 526, 530, 535, 541, 547, 560, 574, 599, 607, 616,
		2, 0, 1, 0, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// LuaLexerInit initializes any static state used to implement LuaLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewLuaLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func LuaLexerInit() {
	staticData := &lualexerLexerStaticData
	staticData.once.Do(lualexerLexerInit)
}

// NewLuaLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewLuaLexer(input antlr.CharStream) *LuaLexer {
	LuaLexerInit()
	l := new(LuaLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &lualexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "LuaLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// LuaLexer tokens.
const (
	LuaLexerFunction     = 1
	LuaLexerNil          = 2
	LuaLexerFalse        = 3
	LuaLexerTrue         = 4
	LuaLexerReturn       = 5
	LuaLexerBreak        = 6
	LuaLexerContinue     = 7
	LuaLexerGoto         = 8
	LuaLexerRepeat       = 9
	LuaLexerUntil        = 10
	LuaLexerWhile        = 11
	LuaLexerDo           = 12
	LuaLexerEnd          = 13
	LuaLexerIf           = 14
	LuaLexerThen         = 15
	LuaLexerElse         = 16
	LuaLexerElseIf       = 17
	LuaLexerFor          = 18
	LuaLexerIn           = 19
	LuaLexerLocal        = 20
	LuaLexerNot          = 21
	LuaLexerOr           = 22
	LuaLexerAnd          = 23
	LuaLexerMul          = 24
	LuaLexerDiv          = 25
	LuaLexerIntegralDiv  = 26
	LuaLexerMod          = 27
	LuaLexerAmp          = 28
	LuaLexerXand         = 29
	LuaLexerLtLt         = 30
	LuaLexerGtGt         = 31
	LuaLexerPlus         = 32
	LuaLexerSub          = 33
	LuaLexerPower        = 34
	LuaLexerLt           = 35
	LuaLexerGt           = 36
	LuaLexerEq           = 37
	LuaLexerLtEq         = 38
	LuaLexerGtEq         = 39
	LuaLexerNeq          = 40
	LuaLexerColon        = 41
	LuaLexerDoubleColon  = 42
	LuaLexerLBracket     = 43
	LuaLexerRBracket     = 44
	LuaLexerLParen       = 45
	LuaLexerRParen       = 46
	LuaLexerLBrace       = 47
	LuaLexerRBrace       = 48
	LuaLexerComma        = 49
	LuaLexerPound        = 50
	LuaLexerAssignEq     = 51
	LuaLexerPlusPlus     = 52
	LuaLexerSubSub       = 53
	LuaLexerPlusEq       = 54
	LuaLexerMinusEq      = 55
	LuaLexerMulEq        = 56
	LuaLexerDivEq        = 57
	LuaLexerModEq        = 58
	LuaLexerSemiColon    = 59
	LuaLexerEllipsis     = 60
	LuaLexerNotSymbol    = 61
	LuaLexerDot          = 62
	LuaLexerStrcat       = 63
	LuaLexerNAME         = 64
	LuaLexerNORMALSTRING = 65
	LuaLexerCHARSTRING   = 66
	LuaLexerLONGSTRING   = 67
	LuaLexerINT          = 68
	LuaLexerHEX          = 69
	LuaLexerFLOAT        = 70
	LuaLexerHEX_FLOAT    = 71
	LuaLexerCOMMENT      = 72
	LuaLexerLINE_COMMENT = 73
	LuaLexerWS           = 74
	LuaLexerSHEBANG      = 75
)

// Code generated from java-escape by ANTLR 4.11.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr/v4"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type YaklangLexer struct {
	YaklangLexerBase
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var yaklanglexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func yaklanglexerLexerInit() {
	staticData := &yaklanglexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE", "TEMPLATE_SINGLE_QUOTE_MODE", "TEMPLATE_DOUBLE_QUOTE_MODE",
		"TEMPLATE_BACKTICK_MODE", "HereDocIdentifier", "CRLFHereDoc", "LFHereDoc",
	}
	staticData.literalNames = []string{
		"", "'panic'", "'recover'", "'if'", "'elif'", "'else'", "'switch'",
		"'case'", "'default'", "'for'", "'continue'", "'break'", "'return'",
		"'include'", "'try'", "'catch'", "'finally'", "'importmod'", "'as'",
		"'export'", "'defer'", "'go'", "'range'", "", "'map'", "'chan'", "'class'",
		"'new'", "'make'", "'true'", "'false'", "'in'", "'not'", "'assert'",
		"", "", "'undefined'", "'fallthrough'", "'nil'", "", "", "'*'", "'/'",
		"'%'", "'<<'", "'<'", "'>>'", "'>'", "'&'", "'&^'", "'+'", "'-'", "'^'",
		"'|'", "'=='", "'<='", "'>='", "'!='", "'<-'", "'&&'", "'||'", "'?'",
		"':'", "'['", "']'", "'('", "')'", "'{'", "", "'}'", "','", "'='", "'~'",
		"':='", "'++'", "'--'", "'+='", "'-='", "'*='", "'/='", "'%='", "'^='",
		"'<<='", "'>>='", "'&='", "'|='", "'&^='", "';'", "'...'", "'=>'", "'<>'",
		"'!'", "'.'", "", "'/*'", "'*/'", "'`'", "", "'<<<'", "", "'\\n'",
	}
	staticData.symbolicNames = []string{
		"", "Panic", "Recover", "If", "Elif", "Else", "Switch", "Case", "Default",
		"For", "Continue", "Break", "Return", "Include", "Try", "Catch", "Finally",
		"Importmod", "As", "Export", "Defer", "Go", "Range", "Func", "Map",
		"Chan", "Class", "New", "Make", "True", "False", "In", "NotLiteral",
		"Assert", "Var", "VarTypeName", "UndefinedLiteral", "Fallthrough", "NilLiteral",
		"Identifier", "IdentifierWithDollar", "Mul", "Div", "Mod", "LtLt", "Lt",
		"GtGt", "Gt", "Amp", "AmpNot", "Plus", "Sub", "Xor", "Xand", "Eq", "LtEq",
		"GtEq", "Neq", "ChanIn", "LogicAnd", "LogicOr", "Question", "Colon",
		"LBracket", "RBracket", "LParen", "RParen", "LBrace", "TemplateCloseBrace",
		"RBrace", "Comma", "AssignEq", "Wavy", "ColonAssignEq", "PlusPlus",
		"SubSub", "PlusEq", "MinusEq", "MulEq", "DivEq", "ModEq", "BitOrEq",
		"LtLtEq", "GtGtEq", "AmpEq", "BitAndEq", "BitAndNotEq", "SemiColon",
		"Ellipsis", "EqGt", "LtGt", "Not", "Dot", "WS", "CommentStart", "CommentEnd",
		"BackTickL", "COMMENT", "StartNowDoc", "LINE_COMMENT", "LF", "EOS",
		"IntegerLiteral", "FloatLiteral", "TemplateSingleQuoteStringStart",
		"TemplateDoubleQuoteStringStart", "TemplateBackTickStringStart", "StringLiteral",
		"CharacterLiteral", "TemplateSingleQuoteStringCharacterStringEnd", "TemplateSingleQuoteStringCharacter",
		"TemplateSingleQuoteStringStartExpression", "TemplateDoubleQuoteStringCharacterStringEnd",
		"TemplateDoubleQuoteStringCharacter", "TemplateDoubleQuoteStringStartExpression",
		"TemplateBackTickStringCharacterStringEnd", "TemplateBackTickStringCharacter",
		"TemplateBackTickStringStartExpression", "HereDocIdentifierName", "HereDocIdentifierBreak",
		"CRLFEndDoc", "CRLFHereDocText", "LFEndDoc", "LFHereDocText",
	}
	staticData.ruleNames = []string{
		"Panic", "Recover", "If", "Elif", "Else", "Switch", "Case", "Default",
		"For", "Continue", "Break", "Return", "Include", "Try", "Catch", "Finally",
		"Importmod", "As", "Export", "Defer", "Go", "Range", "Func", "Map",
		"Chan", "Class", "New", "Make", "True", "False", "In", "NotLiteral",
		"Assert", "Var", "VarTypeName", "UndefinedLiteral", "Fallthrough", "NilLiteral",
		"Identifier", "IdentifierWithDollar", "Mul", "Div", "Mod", "LtLt", "Lt",
		"GtGt", "Gt", "Amp", "AmpNot", "Plus", "Sub", "Xor", "Xand", "Eq", "LtEq",
		"GtEq", "Neq", "ChanIn", "LogicAnd", "LogicOr", "Question", "Colon",
		"LBracket", "RBracket", "LParen", "RParen", "LBrace", "TemplateCloseBrace",
		"RBrace", "Comma", "AssignEq", "Wavy", "ColonAssignEq", "PlusPlus",
		"SubSub", "PlusEq", "MinusEq", "MulEq", "DivEq", "ModEq", "BitOrEq",
		"LtLtEq", "GtGtEq", "AmpEq", "BitAndEq", "BitAndNotEq", "SemiColon",
		"Ellipsis", "EqGt", "LtGt", "Not", "Dot", "WS", "CommentStart", "CommentEnd",
		"BackTickL", "COMMENT", "StartNowDoc", "LINE_COMMENT", "LF", "EOS",
		"IntegerLiteral", "FloatLiteral", "TemplateSingleQuoteStringStart",
		"TemplateDoubleQuoteStringStart", "TemplateBackTickStringStart", "StringLiteral",
		"CharacterLiteral", "TemplateSingleQuoteStringCharacterStringEnd", "TemplateSingleQuoteStringCharacter",
		"TemplateSingleQuoteStringStartExpression", "TemplateDoubleQuoteStringCharacterStringEnd",
		"TemplateDoubleQuoteStringCharacter", "TemplateDoubleQuoteStringStartExpression",
		"TemplateBackTickStringCharacterStringEnd", "TemplateBackTickStringCharacter",
		"TemplateBackTickStringStartExpression", "HereDocIdentifierName", "HereDocIdentifierBreak",
		"CRLFEndDoc", "CRLFHereDocText", "LFEndDoc", "LFHereDocText", "NameString",
		"HexIntegerLiteral", "OctalIntegerLiteral", "BinaryIntegerLiteral",
		"HexDigit", "DecimalIntegerLiteral", "EscapeSequence", "CharacterEscapeSequence",
		"HexEscapeSequence", "SingleEscapeCharacter", "NonEscapeCharacter",
		"EscapeCharacter", "DoubleStringCharacter", "SingleStringCharacter",
		"BackTickStringCharacter", "DoubleQuoteTemplateStringLiteral", "BackTickTemplateStringLiteral",
		"DoubleQuoteStringLiteral", "SingleQuoteStringLiteral", "BackTickStringLiteral",
		"HexStringLiteral", "StringLiteralPrefix",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 123, 1118, 6, -1, 6, -1, 6, -1, 6, -1, 6, -1, 6, -1, 6, -1, 2, 0,
		7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2, 6,
		7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2,
		12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15, 7, 15, 2, 16, 7, 16, 2, 17,
		7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7, 20, 2, 21, 7, 21, 2, 22, 7,
		22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25, 2, 26, 7, 26, 2, 27, 7, 27,
		2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2, 31, 7, 31, 2, 32, 7, 32, 2,
		33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36, 7, 36, 2, 37, 7, 37, 2, 38,
		7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7, 41, 2, 42, 7, 42, 2, 43, 7,
		43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46, 2, 47, 7, 47, 2, 48, 7, 48,
		2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2, 52, 7, 52, 2, 53, 7, 53, 2,
		54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57, 7, 57, 2, 58, 7, 58, 2, 59,
		7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7, 62, 2, 63, 7, 63, 2, 64, 7,
		64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67, 2, 68, 7, 68, 2, 69, 7, 69,
		2, 70, 7, 70, 2, 71, 7, 71, 2, 72, 7, 72, 2, 73, 7, 73, 2, 74, 7, 74, 2,
		75, 7, 75, 2, 76, 7, 76, 2, 77, 7, 77, 2, 78, 7, 78, 2, 79, 7, 79, 2, 80,
		7, 80, 2, 81, 7, 81, 2, 82, 7, 82, 2, 83, 7, 83, 2, 84, 7, 84, 2, 85, 7,
		85, 2, 86, 7, 86, 2, 87, 7, 87, 2, 88, 7, 88, 2, 89, 7, 89, 2, 90, 7, 90,
		2, 91, 7, 91, 2, 92, 7, 92, 2, 93, 7, 93, 2, 94, 7, 94, 2, 95, 7, 95, 2,
		96, 7, 96, 2, 97, 7, 97, 2, 98, 7, 98, 2, 99, 7, 99, 2, 100, 7, 100, 2,
		101, 7, 101, 2, 102, 7, 102, 2, 103, 7, 103, 2, 104, 7, 104, 2, 105, 7,
		105, 2, 106, 7, 106, 2, 107, 7, 107, 2, 108, 7, 108, 2, 109, 7, 109, 2,
		110, 7, 110, 2, 111, 7, 111, 2, 112, 7, 112, 2, 113, 7, 113, 2, 114, 7,
		114, 2, 115, 7, 115, 2, 116, 7, 116, 2, 117, 7, 117, 2, 118, 7, 118, 2,
		119, 7, 119, 2, 120, 7, 120, 2, 121, 7, 121, 2, 122, 7, 122, 2, 123, 7,
		123, 2, 124, 7, 124, 2, 125, 7, 125, 2, 126, 7, 126, 2, 127, 7, 127, 2,
		128, 7, 128, 2, 129, 7, 129, 2, 130, 7, 130, 2, 131, 7, 131, 2, 132, 7,
		132, 2, 133, 7, 133, 2, 134, 7, 134, 2, 135, 7, 135, 2, 136, 7, 136, 2,
		137, 7, 137, 2, 138, 7, 138, 2, 139, 7, 139, 2, 140, 7, 140, 2, 141, 7,
		141, 2, 142, 7, 142, 2, 143, 7, 143, 2, 144, 7, 144, 1, 0, 1, 0, 1, 0,
		1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
		1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4,
		1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6,
		1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8,
		1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1,
		10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11,
		1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1,
		13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15,
		1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1,
		16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18,
		1, 18, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1,
		20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22,
		1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1,
		22, 1, 22, 1, 22, 1, 22, 1, 22, 3, 22, 449, 8, 22, 1, 23, 1, 23, 1, 23,
		1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 25, 1,
		25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27,
		1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1,
		29, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 31, 1, 32, 1, 32, 1, 32,
		1, 32, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 3,
		33, 506, 8, 33, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34,
		1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1,
		34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34,
		1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1,
		34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34,
		1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1,
		34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34,
		1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1,
		34, 1, 34, 1, 34, 1, 34, 1, 34, 3, 34, 594, 8, 34, 1, 35, 1, 35, 1, 35,
		1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 36, 1, 36, 1, 36, 1,
		36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 37, 1, 37,
		1, 37, 1, 37, 1, 38, 1, 38, 5, 38, 624, 8, 38, 10, 38, 12, 38, 627, 9,
		38, 1, 39, 1, 39, 1, 39, 5, 39, 632, 8, 39, 10, 39, 12, 39, 635, 9, 39,
		1, 40, 1, 40, 1, 41, 1, 41, 1, 42, 1, 42, 1, 43, 1, 43, 1, 43, 1, 44, 1,
		44, 1, 45, 1, 45, 1, 45, 1, 46, 1, 46, 1, 47, 1, 47, 1, 48, 1, 48, 1, 48,
		1, 49, 1, 49, 1, 50, 1, 50, 1, 51, 1, 51, 1, 52, 1, 52, 1, 53, 1, 53, 1,
		53, 1, 54, 1, 54, 1, 54, 1, 55, 1, 55, 1, 55, 1, 56, 1, 56, 1, 56, 1, 57,
		1, 57, 1, 57, 1, 58, 1, 58, 1, 58, 1, 59, 1, 59, 1, 59, 1, 60, 1, 60, 1,
		61, 1, 61, 1, 62, 1, 62, 1, 63, 1, 63, 1, 64, 1, 64, 1, 65, 1, 65, 1, 66,
		1, 66, 1, 67, 1, 67, 1, 67, 1, 67, 1, 67, 1, 68, 1, 68, 1, 69, 1, 69, 1,
		70, 1, 70, 1, 71, 1, 71, 1, 72, 1, 72, 1, 72, 1, 73, 1, 73, 1, 73, 1, 74,
		1, 74, 1, 74, 1, 75, 1, 75, 1, 75, 1, 76, 1, 76, 1, 76, 1, 77, 1, 77, 1,
		77, 1, 78, 1, 78, 1, 78, 1, 79, 1, 79, 1, 79, 1, 80, 1, 80, 1, 80, 1, 81,
		1, 81, 1, 81, 1, 81, 1, 82, 1, 82, 1, 82, 1, 82, 1, 83, 1, 83, 1, 83, 1,
		84, 1, 84, 1, 84, 1, 85, 1, 85, 1, 85, 1, 85, 1, 86, 1, 86, 1, 87, 1, 87,
		1, 87, 1, 87, 1, 88, 1, 88, 1, 88, 1, 89, 1, 89, 1, 89, 1, 90, 1, 90, 1,
		91, 1, 91, 1, 92, 4, 92, 776, 8, 92, 11, 92, 12, 92, 777, 1, 92, 1, 92,
		1, 93, 1, 93, 1, 93, 1, 94, 1, 94, 1, 94, 1, 95, 1, 95, 1, 96, 1, 96, 1,
		96, 1, 96, 5, 96, 794, 8, 96, 10, 96, 12, 96, 797, 9, 96, 1, 96, 1, 96,
		1, 96, 1, 97, 1, 97, 1, 97, 1, 97, 1, 97, 1, 97, 1, 98, 1, 98, 1, 98, 3,
		98, 811, 8, 98, 1, 98, 5, 98, 814, 8, 98, 10, 98, 12, 98, 817, 9, 98, 1,
		99, 1, 99, 1, 100, 1, 100, 1, 100, 1, 100, 1, 100, 5, 100, 826, 8, 100,
		10, 100, 12, 100, 829, 9, 100, 1, 100, 1, 100, 1, 100, 3, 100, 834, 8,
		100, 1, 101, 1, 101, 1, 101, 1, 101, 3, 101, 840, 8, 101, 1, 102, 1, 102,
		1, 102, 4, 102, 845, 8, 102, 11, 102, 12, 102, 846, 1, 102, 1, 102, 4,
		102, 851, 8, 102, 11, 102, 12, 102, 852, 3, 102, 855, 8, 102, 1, 103, 1,
		103, 1, 103, 1, 103, 1, 103, 1, 103, 1, 103, 1, 104, 1, 104, 1, 104, 1,
		104, 1, 104, 1, 104, 1, 104, 1, 105, 1, 105, 1, 105, 1, 105, 1, 105, 1,
		105, 1, 105, 1, 106, 1, 106, 1, 106, 1, 106, 3, 106, 882, 8, 106, 1, 107,
		1, 107, 1, 107, 1, 107, 1, 108, 1, 108, 1, 108, 1, 108, 1, 108, 1, 109,
		1, 109, 1, 109, 1, 109, 1, 109, 3, 109, 898, 8, 109, 1, 110, 1, 110, 1,
		110, 1, 110, 1, 110, 1, 111, 1, 111, 1, 111, 1, 111, 1, 111, 1, 112, 1,
		112, 1, 112, 1, 112, 1, 112, 3, 112, 915, 8, 112, 1, 113, 1, 113, 1, 113,
		1, 113, 1, 113, 1, 114, 1, 114, 1, 114, 1, 114, 1, 114, 1, 115, 1, 115,
		1, 115, 1, 115, 1, 115, 1, 115, 1, 115, 3, 115, 934, 8, 115, 1, 116, 1,
		116, 1, 116, 1, 116, 1, 116, 1, 117, 1, 117, 1, 117, 1, 117, 1, 117, 1,
		117, 1, 117, 1, 117, 1, 117, 3, 117, 950, 8, 117, 1, 118, 3, 118, 953,
		8, 118, 1, 118, 1, 118, 1, 118, 1, 118, 1, 119, 1, 119, 1, 119, 1, 119,
		1, 119, 1, 119, 1, 120, 1, 120, 1, 121, 1, 121, 1, 121, 1, 121, 1, 122,
		1, 122, 1, 123, 1, 123, 5, 123, 975, 8, 123, 10, 123, 12, 123, 978, 9,
		123, 1, 124, 1, 124, 1, 124, 4, 124, 983, 8, 124, 11, 124, 12, 124, 984,
		1, 125, 1, 125, 4, 125, 989, 8, 125, 11, 125, 12, 125, 990, 1, 125, 1,
		125, 1, 125, 4, 125, 996, 8, 125, 11, 125, 12, 125, 997, 3, 125, 1000,
		8, 125, 1, 126, 1, 126, 1, 126, 4, 126, 1005, 8, 126, 11, 126, 12, 126,
		1006, 1, 127, 1, 127, 1, 128, 1, 128, 1, 128, 5, 128, 1014, 8, 128, 10,
		128, 12, 128, 1017, 9, 128, 3, 128, 1019, 8, 128, 1, 129, 1, 129, 1, 129,
		3, 129, 1024, 8, 129, 1, 130, 1, 130, 3, 130, 1028, 8, 130, 1, 131, 1,
		131, 1, 131, 1, 131, 1, 132, 1, 132, 1, 133, 1, 133, 1, 134, 1, 134, 3,
		134, 1040, 8, 134, 1, 135, 1, 135, 1, 135, 3, 135, 1045, 8, 135, 1, 136,
		1, 136, 1, 136, 3, 136, 1050, 8, 136, 1, 137, 1, 137, 1, 138, 3, 138, 1055,
		8, 138, 1, 138, 1, 138, 1, 139, 3, 139, 1060, 8, 139, 1, 139, 1, 139, 1,
		140, 3, 140, 1065, 8, 140, 1, 140, 1, 140, 5, 140, 1069, 8, 140, 10, 140,
		12, 140, 1072, 9, 140, 1, 140, 1, 140, 1, 141, 3, 141, 1077, 8, 141, 1,
		141, 1, 141, 1, 141, 3, 141, 1082, 8, 141, 1, 141, 1, 141, 1, 141, 4, 141,
		1087, 8, 141, 11, 141, 12, 141, 1088, 1, 141, 1, 141, 3, 141, 1093, 8,
		141, 1, 142, 3, 142, 1096, 8, 142, 1, 142, 1, 142, 5, 142, 1100, 8, 142,
		10, 142, 12, 142, 1103, 9, 142, 1, 142, 1, 142, 1, 143, 1, 143, 1, 143,
		1, 143, 1, 143, 1, 143, 4, 143, 1113, 8, 143, 11, 143, 12, 143, 1114, 1,
		144, 1, 144, 2, 795, 827, 0, 145, 7, 1, 9, 2, 11, 3, 13, 4, 15, 5, 17,
		6, 19, 7, 21, 8, 23, 9, 25, 10, 27, 11, 29, 12, 31, 13, 33, 14, 35, 15,
		37, 16, 39, 17, 41, 18, 43, 19, 45, 20, 47, 21, 49, 22, 51, 23, 53, 24,
		55, 25, 57, 26, 59, 27, 61, 28, 63, 29, 65, 30, 67, 31, 69, 32, 71, 33,
		73, 34, 75, 35, 77, 36, 79, 37, 81, 38, 83, 39, 85, 40, 87, 41, 89, 42,
		91, 43, 93, 44, 95, 45, 97, 46, 99, 47, 101, 48, 103, 49, 105, 50, 107,
		51, 109, 52, 111, 53, 113, 54, 115, 55, 117, 56, 119, 57, 121, 58, 123,
		59, 125, 60, 127, 61, 129, 62, 131, 63, 133, 64, 135, 65, 137, 66, 139,
		67, 141, 68, 143, 69, 145, 70, 147, 71, 149, 72, 151, 73, 153, 74, 155,
		75, 157, 76, 159, 77, 161, 78, 163, 79, 165, 80, 167, 81, 169, 82, 171,
		83, 173, 84, 175, 85, 177, 86, 179, 87, 181, 88, 183, 89, 185, 90, 187,
		91, 189, 92, 191, 93, 193, 94, 195, 95, 197, 96, 199, 97, 201, 98, 203,
		99, 205, 100, 207, 101, 209, 102, 211, 103, 213, 104, 215, 105, 217, 106,
		219, 107, 221, 108, 223, 109, 225, 110, 227, 111, 229, 112, 231, 113, 233,
		114, 235, 115, 237, 116, 239, 117, 241, 118, 243, 119, 245, 120, 247, 121,
		249, 122, 251, 123, 253, 0, 255, 0, 257, 0, 259, 0, 261, 0, 263, 0, 265,
		0, 267, 0, 269, 0, 271, 0, 273, 0, 275, 0, 277, 0, 279, 0, 281, 0, 283,
		0, 285, 0, 287, 0, 289, 0, 291, 0, 293, 0, 295, 0, 7, 0, 1, 2, 3, 4, 5,
		6, 24, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97,
		122, 3, 0, 9, 9, 13, 13, 32, 32, 2, 0, 10, 10, 13, 13, 1, 0, 48, 57, 5,
		0, 10, 10, 13, 13, 36, 36, 39, 39, 92, 92, 5, 0, 10, 10, 13, 13, 34, 34,
		36, 36, 92, 92, 3, 0, 36, 36, 92, 92, 96, 96, 4, 0, 65, 90, 95, 95, 97,
		122, 128, 65534, 5, 0, 48, 57, 65, 90, 95, 95, 97, 122, 128, 65534, 2,
		0, 88, 88, 120, 120, 1, 0, 48, 55, 2, 0, 79, 79, 111, 111, 2, 0, 66, 66,
		98, 98, 1, 0, 48, 49, 3, 0, 48, 57, 65, 70, 97, 102, 1, 0, 49, 57, 9, 0,
		34, 34, 39, 39, 92, 92, 98, 98, 102, 102, 110, 110, 114, 114, 116, 116,
		118, 118, 12, 0, 10, 10, 13, 13, 34, 34, 39, 39, 48, 57, 92, 92, 98, 98,
		102, 102, 110, 110, 114, 114, 116, 118, 120, 120, 3, 0, 48, 57, 117, 117,
		120, 120, 4, 0, 10, 10, 13, 13, 34, 34, 92, 92, 4, 0, 10, 10, 13, 13, 39,
		39, 92, 92, 1, 0, 96, 96, 3, 0, 65, 90, 97, 101, 103, 122, 1162, 0, 7,
		1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0,
		15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0,
		0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0,
		0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0,
		0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1,
		0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53,
		1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0,
		61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0,
		0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0,
		0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0,
		0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1,
		0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 99,
		1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1, 0, 0, 0, 0, 105, 1, 0, 0, 0,
		0, 107, 1, 0, 0, 0, 0, 109, 1, 0, 0, 0, 0, 111, 1, 0, 0, 0, 0, 113, 1,
		0, 0, 0, 0, 115, 1, 0, 0, 0, 0, 117, 1, 0, 0, 0, 0, 119, 1, 0, 0, 0, 0,
		121, 1, 0, 0, 0, 0, 123, 1, 0, 0, 0, 0, 125, 1, 0, 0, 0, 0, 127, 1, 0,
		0, 0, 0, 129, 1, 0, 0, 0, 0, 131, 1, 0, 0, 0, 0, 133, 1, 0, 0, 0, 0, 135,
		1, 0, 0, 0, 0, 137, 1, 0, 0, 0, 0, 139, 1, 0, 0, 0, 0, 141, 1, 0, 0, 0,
		0, 143, 1, 0, 0, 0, 0, 145, 1, 0, 0, 0, 0, 147, 1, 0, 0, 0, 0, 149, 1,
		0, 0, 0, 0, 151, 1, 0, 0, 0, 0, 153, 1, 0, 0, 0, 0, 155, 1, 0, 0, 0, 0,
		157, 1, 0, 0, 0, 0, 159, 1, 0, 0, 0, 0, 161, 1, 0, 0, 0, 0, 163, 1, 0,
		0, 0, 0, 165, 1, 0, 0, 0, 0, 167, 1, 0, 0, 0, 0, 169, 1, 0, 0, 0, 0, 171,
		1, 0, 0, 0, 0, 173, 1, 0, 0, 0, 0, 175, 1, 0, 0, 0, 0, 177, 1, 0, 0, 0,
		0, 179, 1, 0, 0, 0, 0, 181, 1, 0, 0, 0, 0, 183, 1, 0, 0, 0, 0, 185, 1,
		0, 0, 0, 0, 187, 1, 0, 0, 0, 0, 189, 1, 0, 0, 0, 0, 191, 1, 0, 0, 0, 0,
		193, 1, 0, 0, 0, 0, 195, 1, 0, 0, 0, 0, 197, 1, 0, 0, 0, 0, 199, 1, 0,
		0, 0, 0, 201, 1, 0, 0, 0, 0, 203, 1, 0, 0, 0, 0, 205, 1, 0, 0, 0, 0, 207,
		1, 0, 0, 0, 0, 209, 1, 0, 0, 0, 0, 211, 1, 0, 0, 0, 0, 213, 1, 0, 0, 0,
		0, 215, 1, 0, 0, 0, 0, 217, 1, 0, 0, 0, 0, 219, 1, 0, 0, 0, 0, 221, 1,
		0, 0, 0, 1, 223, 1, 0, 0, 0, 1, 225, 1, 0, 0, 0, 1, 227, 1, 0, 0, 0, 2,
		229, 1, 0, 0, 0, 2, 231, 1, 0, 0, 0, 2, 233, 1, 0, 0, 0, 3, 235, 1, 0,
		0, 0, 3, 237, 1, 0, 0, 0, 3, 239, 1, 0, 0, 0, 4, 241, 1, 0, 0, 0, 4, 243,
		1, 0, 0, 0, 5, 245, 1, 0, 0, 0, 5, 247, 1, 0, 0, 0, 6, 249, 1, 0, 0, 0,
		6, 251, 1, 0, 0, 0, 7, 297, 1, 0, 0, 0, 9, 303, 1, 0, 0, 0, 11, 311, 1,
		0, 0, 0, 13, 314, 1, 0, 0, 0, 15, 319, 1, 0, 0, 0, 17, 324, 1, 0, 0, 0,
		19, 331, 1, 0, 0, 0, 21, 336, 1, 0, 0, 0, 23, 344, 1, 0, 0, 0, 25, 348,
		1, 0, 0, 0, 27, 357, 1, 0, 0, 0, 29, 363, 1, 0, 0, 0, 31, 370, 1, 0, 0,
		0, 33, 378, 1, 0, 0, 0, 35, 382, 1, 0, 0, 0, 37, 388, 1, 0, 0, 0, 39, 396,
		1, 0, 0, 0, 41, 406, 1, 0, 0, 0, 43, 409, 1, 0, 0, 0, 45, 416, 1, 0, 0,
		0, 47, 422, 1, 0, 0, 0, 49, 425, 1, 0, 0, 0, 51, 448, 1, 0, 0, 0, 53, 450,
		1, 0, 0, 0, 55, 454, 1, 0, 0, 0, 57, 459, 1, 0, 0, 0, 59, 465, 1, 0, 0,
		0, 61, 469, 1, 0, 0, 0, 63, 474, 1, 0, 0, 0, 65, 479, 1, 0, 0, 0, 67, 485,
		1, 0, 0, 0, 69, 488, 1, 0, 0, 0, 71, 492, 1, 0, 0, 0, 73, 505, 1, 0, 0,
		0, 75, 593, 1, 0, 0, 0, 77, 595, 1, 0, 0, 0, 79, 605, 1, 0, 0, 0, 81, 617,
		1, 0, 0, 0, 83, 621, 1, 0, 0, 0, 85, 628, 1, 0, 0, 0, 87, 636, 1, 0, 0,
		0, 89, 638, 1, 0, 0, 0, 91, 640, 1, 0, 0, 0, 93, 642, 1, 0, 0, 0, 95, 645,
		1, 0, 0, 0, 97, 647, 1, 0, 0, 0, 99, 650, 1, 0, 0, 0, 101, 652, 1, 0, 0,
		0, 103, 654, 1, 0, 0, 0, 105, 657, 1, 0, 0, 0, 107, 659, 1, 0, 0, 0, 109,
		661, 1, 0, 0, 0, 111, 663, 1, 0, 0, 0, 113, 665, 1, 0, 0, 0, 115, 668,
		1, 0, 0, 0, 117, 671, 1, 0, 0, 0, 119, 674, 1, 0, 0, 0, 121, 677, 1, 0,
		0, 0, 123, 680, 1, 0, 0, 0, 125, 683, 1, 0, 0, 0, 127, 686, 1, 0, 0, 0,
		129, 688, 1, 0, 0, 0, 131, 690, 1, 0, 0, 0, 133, 692, 1, 0, 0, 0, 135,
		694, 1, 0, 0, 0, 137, 696, 1, 0, 0, 0, 139, 698, 1, 0, 0, 0, 141, 700,
		1, 0, 0, 0, 143, 705, 1, 0, 0, 0, 145, 707, 1, 0, 0, 0, 147, 709, 1, 0,
		0, 0, 149, 711, 1, 0, 0, 0, 151, 713, 1, 0, 0, 0, 153, 716, 1, 0, 0, 0,
		155, 719, 1, 0, 0, 0, 157, 722, 1, 0, 0, 0, 159, 725, 1, 0, 0, 0, 161,
		728, 1, 0, 0, 0, 163, 731, 1, 0, 0, 0, 165, 734, 1, 0, 0, 0, 167, 737,
		1, 0, 0, 0, 169, 740, 1, 0, 0, 0, 171, 744, 1, 0, 0, 0, 173, 748, 1, 0,
		0, 0, 175, 751, 1, 0, 0, 0, 177, 754, 1, 0, 0, 0, 179, 758, 1, 0, 0, 0,
		181, 760, 1, 0, 0, 0, 183, 764, 1, 0, 0, 0, 185, 767, 1, 0, 0, 0, 187,
		770, 1, 0, 0, 0, 189, 772, 1, 0, 0, 0, 191, 775, 1, 0, 0, 0, 193, 781,
		1, 0, 0, 0, 195, 784, 1, 0, 0, 0, 197, 787, 1, 0, 0, 0, 199, 789, 1, 0,
		0, 0, 201, 801, 1, 0, 0, 0, 203, 810, 1, 0, 0, 0, 205, 818, 1, 0, 0, 0,
		207, 833, 1, 0, 0, 0, 209, 839, 1, 0, 0, 0, 211, 854, 1, 0, 0, 0, 213,
		856, 1, 0, 0, 0, 215, 863, 1, 0, 0, 0, 217, 870, 1, 0, 0, 0, 219, 881,
		1, 0, 0, 0, 221, 883, 1, 0, 0, 0, 223, 887, 1, 0, 0, 0, 225, 897, 1, 0,
		0, 0, 227, 899, 1, 0, 0, 0, 229, 904, 1, 0, 0, 0, 231, 914, 1, 0, 0, 0,
		233, 916, 1, 0, 0, 0, 235, 921, 1, 0, 0, 0, 237, 933, 1, 0, 0, 0, 239,
		935, 1, 0, 0, 0, 241, 949, 1, 0, 0, 0, 243, 952, 1, 0, 0, 0, 245, 958,
		1, 0, 0, 0, 247, 964, 1, 0, 0, 0, 249, 966, 1, 0, 0, 0, 251, 970, 1, 0,
		0, 0, 253, 972, 1, 0, 0, 0, 255, 979, 1, 0, 0, 0, 257, 999, 1, 0, 0, 0,
		259, 1001, 1, 0, 0, 0, 261, 1008, 1, 0, 0, 0, 263, 1018, 1, 0, 0, 0, 265,
		1023, 1, 0, 0, 0, 267, 1027, 1, 0, 0, 0, 269, 1029, 1, 0, 0, 0, 271, 1033,
		1, 0, 0, 0, 273, 1035, 1, 0, 0, 0, 275, 1039, 1, 0, 0, 0, 277, 1044, 1,
		0, 0, 0, 279, 1049, 1, 0, 0, 0, 281, 1051, 1, 0, 0, 0, 283, 1054, 1, 0,
		0, 0, 285, 1059, 1, 0, 0, 0, 287, 1064, 1, 0, 0, 0, 289, 1092, 1, 0, 0,
		0, 291, 1095, 1, 0, 0, 0, 293, 1106, 1, 0, 0, 0, 295, 1116, 1, 0, 0, 0,
		297, 298, 5, 112, 0, 0, 298, 299, 5, 97, 0, 0, 299, 300, 5, 110, 0, 0,
		300, 301, 5, 105, 0, 0, 301, 302, 5, 99, 0, 0, 302, 8, 1, 0, 0, 0, 303,
		304, 5, 114, 0, 0, 304, 305, 5, 101, 0, 0, 305, 306, 5, 99, 0, 0, 306,
		307, 5, 111, 0, 0, 307, 308, 5, 118, 0, 0, 308, 309, 5, 101, 0, 0, 309,
		310, 5, 114, 0, 0, 310, 10, 1, 0, 0, 0, 311, 312, 5, 105, 0, 0, 312, 313,
		5, 102, 0, 0, 313, 12, 1, 0, 0, 0, 314, 315, 5, 101, 0, 0, 315, 316, 5,
		108, 0, 0, 316, 317, 5, 105, 0, 0, 317, 318, 5, 102, 0, 0, 318, 14, 1,
		0, 0, 0, 319, 320, 5, 101, 0, 0, 320, 321, 5, 108, 0, 0, 321, 322, 5, 115,
		0, 0, 322, 323, 5, 101, 0, 0, 323, 16, 1, 0, 0, 0, 324, 325, 5, 115, 0,
		0, 325, 326, 5, 119, 0, 0, 326, 327, 5, 105, 0, 0, 327, 328, 5, 116, 0,
		0, 328, 329, 5, 99, 0, 0, 329, 330, 5, 104, 0, 0, 330, 18, 1, 0, 0, 0,
		331, 332, 5, 99, 0, 0, 332, 333, 5, 97, 0, 0, 333, 334, 5, 115, 0, 0, 334,
		335, 5, 101, 0, 0, 335, 20, 1, 0, 0, 0, 336, 337, 5, 100, 0, 0, 337, 338,
		5, 101, 0, 0, 338, 339, 5, 102, 0, 0, 339, 340, 5, 97, 0, 0, 340, 341,
		5, 117, 0, 0, 341, 342, 5, 108, 0, 0, 342, 343, 5, 116, 0, 0, 343, 22,
		1, 0, 0, 0, 344, 345, 5, 102, 0, 0, 345, 346, 5, 111, 0, 0, 346, 347, 5,
		114, 0, 0, 347, 24, 1, 0, 0, 0, 348, 349, 5, 99, 0, 0, 349, 350, 5, 111,
		0, 0, 350, 351, 5, 110, 0, 0, 351, 352, 5, 116, 0, 0, 352, 353, 5, 105,
		0, 0, 353, 354, 5, 110, 0, 0, 354, 355, 5, 117, 0, 0, 355, 356, 5, 101,
		0, 0, 356, 26, 1, 0, 0, 0, 357, 358, 5, 98, 0, 0, 358, 359, 5, 114, 0,
		0, 359, 360, 5, 101, 0, 0, 360, 361, 5, 97, 0, 0, 361, 362, 5, 107, 0,
		0, 362, 28, 1, 0, 0, 0, 363, 364, 5, 114, 0, 0, 364, 365, 5, 101, 0, 0,
		365, 366, 5, 116, 0, 0, 366, 367, 5, 117, 0, 0, 367, 368, 5, 114, 0, 0,
		368, 369, 5, 110, 0, 0, 369, 30, 1, 0, 0, 0, 370, 371, 5, 105, 0, 0, 371,
		372, 5, 110, 0, 0, 372, 373, 5, 99, 0, 0, 373, 374, 5, 108, 0, 0, 374,
		375, 5, 117, 0, 0, 375, 376, 5, 100, 0, 0, 376, 377, 5, 101, 0, 0, 377,
		32, 1, 0, 0, 0, 378, 379, 5, 116, 0, 0, 379, 380, 5, 114, 0, 0, 380, 381,
		5, 121, 0, 0, 381, 34, 1, 0, 0, 0, 382, 383, 5, 99, 0, 0, 383, 384, 5,
		97, 0, 0, 384, 385, 5, 116, 0, 0, 385, 386, 5, 99, 0, 0, 386, 387, 5, 104,
		0, 0, 387, 36, 1, 0, 0, 0, 388, 389, 5, 102, 0, 0, 389, 390, 5, 105, 0,
		0, 390, 391, 5, 110, 0, 0, 391, 392, 5, 97, 0, 0, 392, 393, 5, 108, 0,
		0, 393, 394, 5, 108, 0, 0, 394, 395, 5, 121, 0, 0, 395, 38, 1, 0, 0, 0,
		396, 397, 5, 105, 0, 0, 397, 398, 5, 109, 0, 0, 398, 399, 5, 112, 0, 0,
		399, 400, 5, 111, 0, 0, 400, 401, 5, 114, 0, 0, 401, 402, 5, 116, 0, 0,
		402, 403, 5, 109, 0, 0, 403, 404, 5, 111, 0, 0, 404, 405, 5, 100, 0, 0,
		405, 40, 1, 0, 0, 0, 406, 407, 5, 97, 0, 0, 407, 408, 5, 115, 0, 0, 408,
		42, 1, 0, 0, 0, 409, 410, 5, 101, 0, 0, 410, 411, 5, 120, 0, 0, 411, 412,
		5, 112, 0, 0, 412, 413, 5, 111, 0, 0, 413, 414, 5, 114, 0, 0, 414, 415,
		5, 116, 0, 0, 415, 44, 1, 0, 0, 0, 416, 417, 5, 100, 0, 0, 417, 418, 5,
		101, 0, 0, 418, 419, 5, 102, 0, 0, 419, 420, 5, 101, 0, 0, 420, 421, 5,
		114, 0, 0, 421, 46, 1, 0, 0, 0, 422, 423, 5, 103, 0, 0, 423, 424, 5, 111,
		0, 0, 424, 48, 1, 0, 0, 0, 425, 426, 5, 114, 0, 0, 426, 427, 5, 97, 0,
		0, 427, 428, 5, 110, 0, 0, 428, 429, 5, 103, 0, 0, 429, 430, 5, 101, 0,
		0, 430, 50, 1, 0, 0, 0, 431, 432, 5, 102, 0, 0, 432, 433, 5, 117, 0, 0,
		433, 434, 5, 110, 0, 0, 434, 449, 5, 99, 0, 0, 435, 436, 5, 102, 0, 0,
		436, 449, 5, 110, 0, 0, 437, 438, 5, 100, 0, 0, 438, 439, 5, 101, 0, 0,
		439, 449, 5, 102, 0, 0, 440, 441, 5, 102, 0, 0, 441, 442, 5, 117, 0, 0,
		442, 443, 5, 110, 0, 0, 443, 444, 5, 99, 0, 0, 444, 445, 5, 116, 0, 0,
		445, 446, 5, 105, 0, 0, 446, 447, 5, 111, 0, 0, 447, 449, 5, 110, 0, 0,
		448, 431, 1, 0, 0, 0, 448, 435, 1, 0, 0, 0, 448, 437, 1, 0, 0, 0, 448,
		440, 1, 0, 0, 0, 449, 52, 1, 0, 0, 0, 450, 451, 5, 109, 0, 0, 451, 452,
		5, 97, 0, 0, 452, 453, 5, 112, 0, 0, 453, 54, 1, 0, 0, 0, 454, 455, 5,
		99, 0, 0, 455, 456, 5, 104, 0, 0, 456, 457, 5, 97, 0, 0, 457, 458, 5, 110,
		0, 0, 458, 56, 1, 0, 0, 0, 459, 460, 5, 99, 0, 0, 460, 461, 5, 108, 0,
		0, 461, 462, 5, 97, 0, 0, 462, 463, 5, 115, 0, 0, 463, 464, 5, 115, 0,
		0, 464, 58, 1, 0, 0, 0, 465, 466, 5, 110, 0, 0, 466, 467, 5, 101, 0, 0,
		467, 468, 5, 119, 0, 0, 468, 60, 1, 0, 0, 0, 469, 470, 5, 109, 0, 0, 470,
		471, 5, 97, 0, 0, 471, 472, 5, 107, 0, 0, 472, 473, 5, 101, 0, 0, 473,
		62, 1, 0, 0, 0, 474, 475, 5, 116, 0, 0, 475, 476, 5, 114, 0, 0, 476, 477,
		5, 117, 0, 0, 477, 478, 5, 101, 0, 0, 478, 64, 1, 0, 0, 0, 479, 480, 5,
		102, 0, 0, 480, 481, 5, 97, 0, 0, 481, 482, 5, 108, 0, 0, 482, 483, 5,
		115, 0, 0, 483, 484, 5, 101, 0, 0, 484, 66, 1, 0, 0, 0, 485, 486, 5, 105,
		0, 0, 486, 487, 5, 110, 0, 0, 487, 68, 1, 0, 0, 0, 488, 489, 5, 110, 0,
		0, 489, 490, 5, 111, 0, 0, 490, 491, 5, 116, 0, 0, 491, 70, 1, 0, 0, 0,
		492, 493, 5, 97, 0, 0, 493, 494, 5, 115, 0, 0, 494, 495, 5, 115, 0, 0,
		495, 496, 5, 101, 0, 0, 496, 497, 5, 114, 0, 0, 497, 498, 5, 116, 0, 0,
		498, 72, 1, 0, 0, 0, 499, 500, 5, 118, 0, 0, 500, 501, 5, 97, 0, 0, 501,
		506, 5, 114, 0, 0, 502, 503, 5, 97, 0, 0, 503, 504, 5, 110, 0, 0, 504,
		506, 5, 121, 0, 0, 505, 499, 1, 0, 0, 0, 505, 502, 1, 0, 0, 0, 506, 74,
		1, 0, 0, 0, 507, 508, 5, 117, 0, 0, 508, 509, 5, 105, 0, 0, 509, 510, 5,
		110, 0, 0, 510, 594, 5, 116, 0, 0, 511, 512, 5, 117, 0, 0, 512, 513, 5,
		105, 0, 0, 513, 514, 5, 110, 0, 0, 514, 515, 5, 116, 0, 0, 515, 594, 5,
		56, 0, 0, 516, 517, 5, 98, 0, 0, 517, 518, 5, 121, 0, 0, 518, 519, 5, 116,
		0, 0, 519, 594, 5, 101, 0, 0, 520, 521, 5, 117, 0, 0, 521, 522, 5, 105,
		0, 0, 522, 523, 5, 110, 0, 0, 523, 524, 5, 116, 0, 0, 524, 525, 5, 49,
		0, 0, 525, 594, 5, 54, 0, 0, 526, 527, 5, 117, 0, 0, 527, 528, 5, 105,
		0, 0, 528, 529, 5, 110, 0, 0, 529, 530, 5, 116, 0, 0, 530, 531, 5, 51,
		0, 0, 531, 594, 5, 50, 0, 0, 532, 533, 5, 117, 0, 0, 533, 534, 5, 105,
		0, 0, 534, 535, 5, 110, 0, 0, 535, 536, 5, 116, 0, 0, 536, 537, 5, 54,
		0, 0, 537, 594, 5, 52, 0, 0, 538, 539, 5, 105, 0, 0, 539, 540, 5, 110,
		0, 0, 540, 594, 5, 116, 0, 0, 541, 542, 5, 105, 0, 0, 542, 543, 5, 110,
		0, 0, 543, 544, 5, 116, 0, 0, 544, 594, 5, 56, 0, 0, 545, 546, 5, 105,
		0, 0, 546, 547, 5, 110, 0, 0, 547, 548, 5, 116, 0, 0, 548, 549, 5, 49,
		0, 0, 549, 594, 5, 54, 0, 0, 550, 551, 5, 105, 0, 0, 551, 552, 5, 110,
		0, 0, 552, 553, 5, 116, 0, 0, 553, 554, 5, 51, 0, 0, 554, 594, 5, 50, 0,
		0, 555, 556, 5, 105, 0, 0, 556, 557, 5, 110, 0, 0, 557, 558, 5, 116, 0,
		0, 558, 559, 5, 54, 0, 0, 559, 594, 5, 52, 0, 0, 560, 561, 5, 98, 0, 0,
		561, 562, 5, 111, 0, 0, 562, 563, 5, 111, 0, 0, 563, 594, 5, 108, 0, 0,
		564, 565, 5, 102, 0, 0, 565, 566, 5, 108, 0, 0, 566, 567, 5, 111, 0, 0,
		567, 568, 5, 97, 0, 0, 568, 594, 5, 116, 0, 0, 569, 570, 5, 102, 0, 0,
		570, 571, 5, 108, 0, 0, 571, 572, 5, 111, 0, 0, 572, 573, 5, 97, 0, 0,
		573, 574, 5, 116, 0, 0, 574, 575, 5, 54, 0, 0, 575, 594, 5, 52, 0, 0, 576,
		577, 5, 100, 0, 0, 577, 578, 5, 111, 0, 0, 578, 579, 5, 117, 0, 0, 579,
		580, 5, 98, 0, 0, 580, 581, 5, 108, 0, 0, 581, 594, 5, 101, 0, 0, 582,
		583, 5, 115, 0, 0, 583, 584, 5, 116, 0, 0, 584, 585, 5, 114, 0, 0, 585,
		586, 5, 105, 0, 0, 586, 587, 5, 110, 0, 0, 587, 594, 5, 103, 0, 0, 588,
		589, 5, 111, 0, 0, 589, 590, 5, 109, 0, 0, 590, 591, 5, 97, 0, 0, 591,
		594, 5, 112, 0, 0, 592, 594, 3, 73, 33, 0, 593, 507, 1, 0, 0, 0, 593, 511,
		1, 0, 0, 0, 593, 516, 1, 0, 0, 0, 593, 520, 1, 0, 0, 0, 593, 526, 1, 0,
		0, 0, 593, 532, 1, 0, 0, 0, 593, 538, 1, 0, 0, 0, 593, 541, 1, 0, 0, 0,
		593, 545, 1, 0, 0, 0, 593, 550, 1, 0, 0, 0, 593, 555, 1, 0, 0, 0, 593,
		560, 1, 0, 0, 0, 593, 564, 1, 0, 0, 0, 593, 569, 1, 0, 0, 0, 593, 576,
		1, 0, 0, 0, 593, 582, 1, 0, 0, 0, 593, 588, 1, 0, 0, 0, 593, 592, 1, 0,
		0, 0, 594, 76, 1, 0, 0, 0, 595, 596, 5, 117, 0, 0, 596, 597, 5, 110, 0,
		0, 597, 598, 5, 100, 0, 0, 598, 599, 5, 101, 0, 0, 599, 600, 5, 102, 0,
		0, 600, 601, 5, 105, 0, 0, 601, 602, 5, 110, 0, 0, 602, 603, 5, 101, 0,
		0, 603, 604, 5, 100, 0, 0, 604, 78, 1, 0, 0, 0, 605, 606, 5, 102, 0, 0,
		606, 607, 5, 97, 0, 0, 607, 608, 5, 108, 0, 0, 608, 609, 5, 108, 0, 0,
		609, 610, 5, 116, 0, 0, 610, 611, 5, 104, 0, 0, 611, 612, 5, 114, 0, 0,
		612, 613, 5, 111, 0, 0, 613, 614, 5, 117, 0, 0, 614, 615, 5, 103, 0, 0,
		615, 616, 5, 104, 0, 0, 616, 80, 1, 0, 0, 0, 617, 618, 5, 110, 0, 0, 618,
		619, 5, 105, 0, 0, 619, 620, 5, 108, 0, 0, 620, 82, 1, 0, 0, 0, 621, 625,
		7, 0, 0, 0, 622, 624, 7, 1, 0, 0, 623, 622, 1, 0, 0, 0, 624, 627, 1, 0,
		0, 0, 625, 623, 1, 0, 0, 0, 625, 626, 1, 0, 0, 0, 626, 84, 1, 0, 0, 0,
		627, 625, 1, 0, 0, 0, 628, 629, 5, 36, 0, 0, 629, 633, 7, 0, 0, 0, 630,
		632, 7, 1, 0, 0, 631, 630, 1, 0, 0, 0, 632, 635, 1, 0, 0, 0, 633, 631,
		1, 0, 0, 0, 633, 634, 1, 0, 0, 0, 634, 86, 1, 0, 0, 0, 635, 633, 1, 0,
		0, 0, 636, 637, 5, 42, 0, 0, 637, 88, 1, 0, 0, 0, 638, 639, 5, 47, 0, 0,
		639, 90, 1, 0, 0, 0, 640, 641, 5, 37, 0, 0, 641, 92, 1, 0, 0, 0, 642, 643,
		5, 60, 0, 0, 643, 644, 5, 60, 0, 0, 644, 94, 1, 0, 0, 0, 645, 646, 5, 60,
		0, 0, 646, 96, 1, 0, 0, 0, 647, 648, 5, 62, 0, 0, 648, 649, 5, 62, 0, 0,
		649, 98, 1, 0, 0, 0, 650, 651, 5, 62, 0, 0, 651, 100, 1, 0, 0, 0, 652,
		653, 5, 38, 0, 0, 653, 102, 1, 0, 0, 0, 654, 655, 5, 38, 0, 0, 655, 656,
		5, 94, 0, 0, 656, 104, 1, 0, 0, 0, 657, 658, 5, 43, 0, 0, 658, 106, 1,
		0, 0, 0, 659, 660, 5, 45, 0, 0, 660, 108, 1, 0, 0, 0, 661, 662, 5, 94,
		0, 0, 662, 110, 1, 0, 0, 0, 663, 664, 5, 124, 0, 0, 664, 112, 1, 0, 0,
		0, 665, 666, 5, 61, 0, 0, 666, 667, 5, 61, 0, 0, 667, 114, 1, 0, 0, 0,
		668, 669, 5, 60, 0, 0, 669, 670, 5, 61, 0, 0, 670, 116, 1, 0, 0, 0, 671,
		672, 5, 62, 0, 0, 672, 673, 5, 61, 0, 0, 673, 118, 1, 0, 0, 0, 674, 675,
		5, 33, 0, 0, 675, 676, 5, 61, 0, 0, 676, 120, 1, 0, 0, 0, 677, 678, 5,
		60, 0, 0, 678, 679, 5, 45, 0, 0, 679, 122, 1, 0, 0, 0, 680, 681, 5, 38,
		0, 0, 681, 682, 5, 38, 0, 0, 682, 124, 1, 0, 0, 0, 683, 684, 5, 124, 0,
		0, 684, 685, 5, 124, 0, 0, 685, 126, 1, 0, 0, 0, 686, 687, 5, 63, 0, 0,
		687, 128, 1, 0, 0, 0, 688, 689, 5, 58, 0, 0, 689, 130, 1, 0, 0, 0, 690,
		691, 5, 91, 0, 0, 691, 132, 1, 0, 0, 0, 692, 693, 5, 93, 0, 0, 693, 134,
		1, 0, 0, 0, 694, 695, 5, 40, 0, 0, 695, 136, 1, 0, 0, 0, 696, 697, 5, 41,
		0, 0, 697, 138, 1, 0, 0, 0, 698, 699, 5, 123, 0, 0, 699, 140, 1, 0, 0,
		0, 700, 701, 5, 125, 0, 0, 701, 702, 4, 67, 0, 0, 702, 703, 1, 0, 0, 0,
		703, 704, 6, 67, 0, 0, 704, 142, 1, 0, 0, 0, 705, 706, 5, 125, 0, 0, 706,
		144, 1, 0, 0, 0, 707, 708, 5, 44, 0, 0, 708, 146, 1, 0, 0, 0, 709, 710,
		5, 61, 0, 0, 710, 148, 1, 0, 0, 0, 711, 712, 5, 126, 0, 0, 712, 150, 1,
		0, 0, 0, 713, 714, 5, 58, 0, 0, 714, 715, 5, 61, 0, 0, 715, 152, 1, 0,
		0, 0, 716, 717, 5, 43, 0, 0, 717, 718, 5, 43, 0, 0, 718, 154, 1, 0, 0,
		0, 719, 720, 5, 45, 0, 0, 720, 721, 5, 45, 0, 0, 721, 156, 1, 0, 0, 0,
		722, 723, 5, 43, 0, 0, 723, 724, 5, 61, 0, 0, 724, 158, 1, 0, 0, 0, 725,
		726, 5, 45, 0, 0, 726, 727, 5, 61, 0, 0, 727, 160, 1, 0, 0, 0, 728, 729,
		5, 42, 0, 0, 729, 730, 5, 61, 0, 0, 730, 162, 1, 0, 0, 0, 731, 732, 5,
		47, 0, 0, 732, 733, 5, 61, 0, 0, 733, 164, 1, 0, 0, 0, 734, 735, 5, 37,
		0, 0, 735, 736, 5, 61, 0, 0, 736, 166, 1, 0, 0, 0, 737, 738, 5, 94, 0,
		0, 738, 739, 5, 61, 0, 0, 739, 168, 1, 0, 0, 0, 740, 741, 5, 60, 0, 0,
		741, 742, 5, 60, 0, 0, 742, 743, 5, 61, 0, 0, 743, 170, 1, 0, 0, 0, 744,
		745, 5, 62, 0, 0, 745, 746, 5, 62, 0, 0, 746, 747, 5, 61, 0, 0, 747, 172,
		1, 0, 0, 0, 748, 749, 5, 38, 0, 0, 749, 750, 5, 61, 0, 0, 750, 174, 1,
		0, 0, 0, 751, 752, 5, 124, 0, 0, 752, 753, 5, 61, 0, 0, 753, 176, 1, 0,
		0, 0, 754, 755, 5, 38, 0, 0, 755, 756, 5, 94, 0, 0, 756, 757, 5, 61, 0,
		0, 757, 178, 1, 0, 0, 0, 758, 759, 5, 59, 0, 0, 759, 180, 1, 0, 0, 0, 760,
		761, 5, 46, 0, 0, 761, 762, 5, 46, 0, 0, 762, 763, 5, 46, 0, 0, 763, 182,
		1, 0, 0, 0, 764, 765, 5, 61, 0, 0, 765, 766, 5, 62, 0, 0, 766, 184, 1,
		0, 0, 0, 767, 768, 5, 60, 0, 0, 768, 769, 5, 62, 0, 0, 769, 186, 1, 0,
		0, 0, 770, 771, 5, 33, 0, 0, 771, 188, 1, 0, 0, 0, 772, 773, 5, 46, 0,
		0, 773, 190, 1, 0, 0, 0, 774, 776, 7, 2, 0, 0, 775, 774, 1, 0, 0, 0, 776,
		777, 1, 0, 0, 0, 777, 775, 1, 0, 0, 0, 777, 778, 1, 0, 0, 0, 778, 779,
		1, 0, 0, 0, 779, 780, 6, 92, 1, 0, 780, 192, 1, 0, 0, 0, 781, 782, 5, 47,
		0, 0, 782, 783, 5, 42, 0, 0, 783, 194, 1, 0, 0, 0, 784, 785, 5, 42, 0,
		0, 785, 786, 5, 47, 0, 0, 786, 196, 1, 0, 0, 0, 787, 788, 5, 96, 0, 0,
		788, 198, 1, 0, 0, 0, 789, 790, 5, 47, 0, 0, 790, 791, 5, 42, 0, 0, 791,
		795, 1, 0, 0, 0, 792, 794, 9, 0, 0, 0, 793, 792, 1, 0, 0, 0, 794, 797,
		1, 0, 0, 0, 795, 796, 1, 0, 0, 0, 795, 793, 1, 0, 0, 0, 796, 798, 1, 0,
		0, 0, 797, 795, 1, 0, 0, 0, 798, 799, 5, 42, 0, 0, 799, 800, 5, 47, 0,
		0, 800, 200, 1, 0, 0, 0, 801, 802, 5, 60, 0, 0, 802, 803, 5, 60, 0, 0,
		803, 804, 5, 60, 0, 0, 804, 805, 1, 0, 0, 0, 805, 806, 6, 97, 2, 0, 806,
		202, 1, 0, 0, 0, 807, 808, 5, 47, 0, 0, 808, 811, 5, 47, 0, 0, 809, 811,
		5, 35, 0, 0, 810, 807, 1, 0, 0, 0, 810, 809, 1, 0, 0, 0, 811, 815, 1, 0,
		0, 0, 812, 814, 8, 3, 0, 0, 813, 812, 1, 0, 0, 0, 814, 817, 1, 0, 0, 0,
		815, 813, 1, 0, 0, 0, 815, 816, 1, 0, 0, 0, 816, 204, 1, 0, 0, 0, 817,
		815, 1, 0, 0, 0, 818, 819, 5, 10, 0, 0, 819, 206, 1, 0, 0, 0, 820, 834,
		5, 59, 0, 0, 821, 822, 5, 47, 0, 0, 822, 823, 5, 42, 0, 0, 823, 827, 1,
		0, 0, 0, 824, 826, 9, 0, 0, 0, 825, 824, 1, 0, 0, 0, 826, 829, 1, 0, 0,
		0, 827, 828, 1, 0, 0, 0, 827, 825, 1, 0, 0, 0, 828, 830, 1, 0, 0, 0, 829,
		827, 1, 0, 0, 0, 830, 831, 5, 42, 0, 0, 831, 834, 5, 47, 0, 0, 832, 834,
		5, 0, 0, 1, 833, 820, 1, 0, 0, 0, 833, 821, 1, 0, 0, 0, 833, 832, 1, 0,
		0, 0, 834, 208, 1, 0, 0, 0, 835, 840, 3, 263, 128, 0, 836, 840, 3, 257,
		125, 0, 837, 840, 3, 255, 124, 0, 838, 840, 3, 259, 126, 0, 839, 835, 1,
		0, 0, 0, 839, 836, 1, 0, 0, 0, 839, 837, 1, 0, 0, 0, 839, 838, 1, 0, 0,
		0, 840, 210, 1, 0, 0, 0, 841, 842, 3, 263, 128, 0, 842, 844, 5, 46, 0,
		0, 843, 845, 7, 4, 0, 0, 844, 843, 1, 0, 0, 0, 845, 846, 1, 0, 0, 0, 846,
		844, 1, 0, 0, 0, 846, 847, 1, 0, 0, 0, 847, 855, 1, 0, 0, 0, 848, 850,
		5, 46, 0, 0, 849, 851, 7, 4, 0, 0, 850, 849, 1, 0, 0, 0, 851, 852, 1, 0,
		0, 0, 852, 850, 1, 0, 0, 0, 852, 853, 1, 0, 0, 0, 853, 855, 1, 0, 0, 0,
		854, 841, 1, 0, 0, 0, 854, 848, 1, 0, 0, 0, 855, 212, 1, 0, 0, 0, 856,
		857, 5, 102, 0, 0, 857, 858, 5, 39, 0, 0, 858, 859, 1, 0, 0, 0, 859, 860,
		6, 103, 3, 0, 860, 861, 1, 0, 0, 0, 861, 862, 6, 103, 4, 0, 862, 214, 1,
		0, 0, 0, 863, 864, 5, 102, 0, 0, 864, 865, 5, 34, 0, 0, 865, 866, 1, 0,
		0, 0, 866, 867, 6, 104, 5, 0, 867, 868, 1, 0, 0, 0, 868, 869, 6, 104, 6,
		0, 869, 216, 1, 0, 0, 0, 870, 871, 5, 102, 0, 0, 871, 872, 5, 96, 0, 0,
		872, 873, 1, 0, 0, 0, 873, 874, 6, 105, 7, 0, 874, 875, 1, 0, 0, 0, 875,
		876, 6, 105, 8, 0, 876, 218, 1, 0, 0, 0, 877, 882, 3, 287, 140, 0, 878,
		882, 3, 291, 142, 0, 879, 882, 3, 293, 143, 0, 880, 882, 3, 289, 141, 0,
		881, 877, 1, 0, 0, 0, 881, 878, 1, 0, 0, 0, 881, 879, 1, 0, 0, 0, 881,
		880, 1, 0, 0, 0, 882, 220, 1, 0, 0, 0, 883, 884, 5, 39, 0, 0, 884, 885,
		3, 279, 136, 0, 885, 886, 5, 39, 0, 0, 886, 222, 1, 0, 0, 0, 887, 888,
		5, 39, 0, 0, 888, 889, 6, 108, 9, 0, 889, 890, 1, 0, 0, 0, 890, 891, 6,
		108, 0, 0, 891, 224, 1, 0, 0, 0, 892, 898, 8, 5, 0, 0, 893, 894, 5, 92,
		0, 0, 894, 898, 3, 265, 129, 0, 895, 896, 5, 92, 0, 0, 896, 898, 5, 36,
		0, 0, 897, 892, 1, 0, 0, 0, 897, 893, 1, 0, 0, 0, 897, 895, 1, 0, 0, 0,
		898, 226, 1, 0, 0, 0, 899, 900, 5, 36, 0, 0, 900, 901, 5, 123, 0, 0, 901,
		902, 1, 0, 0, 0, 902, 903, 6, 110, 10, 0, 903, 228, 1, 0, 0, 0, 904, 905,
		5, 34, 0, 0, 905, 906, 6, 111, 11, 0, 906, 907, 1, 0, 0, 0, 907, 908, 6,
		111, 0, 0, 908, 230, 1, 0, 0, 0, 909, 915, 8, 6, 0, 0, 910, 911, 5, 92,
		0, 0, 911, 915, 3, 265, 129, 0, 912, 913, 5, 92, 0, 0, 913, 915, 5, 36,
		0, 0, 914, 909, 1, 0, 0, 0, 914, 910, 1, 0, 0, 0, 914, 912, 1, 0, 0, 0,
		915, 232, 1, 0, 0, 0, 916, 917, 5, 36, 0, 0, 917, 918, 5, 123, 0, 0, 918,
		919, 1, 0, 0, 0, 919, 920, 6, 113, 10, 0, 920, 234, 1, 0, 0, 0, 921, 922,
		5, 96, 0, 0, 922, 923, 6, 114, 12, 0, 923, 924, 1, 0, 0, 0, 924, 925, 6,
		114, 0, 0, 925, 236, 1, 0, 0, 0, 926, 934, 8, 7, 0, 0, 927, 928, 5, 92,
		0, 0, 928, 934, 3, 265, 129, 0, 929, 930, 5, 92, 0, 0, 930, 934, 5, 36,
		0, 0, 931, 932, 5, 92, 0, 0, 932, 934, 5, 96, 0, 0, 933, 926, 1, 0, 0,
		0, 933, 927, 1, 0, 0, 0, 933, 929, 1, 0, 0, 0, 933, 931, 1, 0, 0, 0, 934,
		238, 1, 0, 0, 0, 935, 936, 5, 36, 0, 0, 936, 937, 5, 123, 0, 0, 937, 938,
		1, 0, 0, 0, 938, 939, 6, 116, 10, 0, 939, 240, 1, 0, 0, 0, 940, 941, 3,
		253, 123, 0, 941, 942, 6, 117, 13, 0, 942, 950, 1, 0, 0, 0, 943, 944, 5,
		39, 0, 0, 944, 945, 3, 253, 123, 0, 945, 946, 6, 117, 14, 0, 946, 947,
		1, 0, 0, 0, 947, 948, 5, 39, 0, 0, 948, 950, 1, 0, 0, 0, 949, 940, 1, 0,
		0, 0, 949, 943, 1, 0, 0, 0, 950, 242, 1, 0, 0, 0, 951, 953, 5, 13, 0, 0,
		952, 951, 1, 0, 0, 0, 952, 953, 1, 0, 0, 0, 953, 954, 1, 0, 0, 0, 954,
		955, 5, 10, 0, 0, 955, 956, 6, 118, 15, 0, 956, 957, 6, 118, 16, 0, 957,
		244, 1, 0, 0, 0, 958, 959, 5, 13, 0, 0, 959, 960, 5, 10, 0, 0, 960, 961,
		1, 0, 0, 0, 961, 962, 3, 253, 123, 0, 962, 963, 6, 119, 17, 0, 963, 246,
		1, 0, 0, 0, 964, 965, 9, 0, 0, 0, 965, 248, 1, 0, 0, 0, 966, 967, 5, 10,
		0, 0, 967, 968, 3, 253, 123, 0, 968, 969, 6, 121, 18, 0, 969, 250, 1, 0,
		0, 0, 970, 971, 9, 0, 0, 0, 971, 252, 1, 0, 0, 0, 972, 976, 7, 8, 0, 0,
		973, 975, 7, 9, 0, 0, 974, 973, 1, 0, 0, 0, 975, 978, 1, 0, 0, 0, 976,
		974, 1, 0, 0, 0, 976, 977, 1, 0, 0, 0, 977, 254, 1, 0, 0, 0, 978, 976,
		1, 0, 0, 0, 979, 980, 5, 48, 0, 0, 980, 982, 7, 10, 0, 0, 981, 983, 3,
		261, 127, 0, 982, 981, 1, 0, 0, 0, 983, 984, 1, 0, 0, 0, 984, 982, 1, 0,
		0, 0, 984, 985, 1, 0, 0, 0, 985, 256, 1, 0, 0, 0, 986, 988, 5, 48, 0, 0,
		987, 989, 7, 11, 0, 0, 988, 987, 1, 0, 0, 0, 989, 990, 1, 0, 0, 0, 990,
		988, 1, 0, 0, 0, 990, 991, 1, 0, 0, 0, 991, 1000, 1, 0, 0, 0, 992, 993,
		5, 48, 0, 0, 993, 995, 7, 12, 0, 0, 994, 996, 7, 11, 0, 0, 995, 994, 1,
		0, 0, 0, 996, 997, 1, 0, 0, 0, 997, 995, 1, 0, 0, 0, 997, 998, 1, 0, 0,
		0, 998, 1000, 1, 0, 0, 0, 999, 986, 1, 0, 0, 0, 999, 992, 1, 0, 0, 0, 1000,
		258, 1, 0, 0, 0, 1001, 1002, 5, 48, 0, 0, 1002, 1004, 7, 13, 0, 0, 1003,
		1005, 7, 14, 0, 0, 1004, 1003, 1, 0, 0, 0, 1005, 1006, 1, 0, 0, 0, 1006,
		1004, 1, 0, 0, 0, 1006, 1007, 1, 0, 0, 0, 1007, 260, 1, 0, 0, 0, 1008,
		1009, 7, 15, 0, 0, 1009, 262, 1, 0, 0, 0, 1010, 1019, 5, 48, 0, 0, 1011,
		1015, 7, 16, 0, 0, 1012, 1014, 7, 4, 0, 0, 1013, 1012, 1, 0, 0, 0, 1014,
		1017, 1, 0, 0, 0, 1015, 1013, 1, 0, 0, 0, 1015, 1016, 1, 0, 0, 0, 1016,
		1019, 1, 0, 0, 0, 1017, 1015, 1, 0, 0, 0, 1018, 1010, 1, 0, 0, 0, 1018,
		1011, 1, 0, 0, 0, 1019, 264, 1, 0, 0, 0, 1020, 1024, 3, 267, 130, 0, 1021,
		1024, 5, 48, 0, 0, 1022, 1024, 3, 269, 131, 0, 1023, 1020, 1, 0, 0, 0,
		1023, 1021, 1, 0, 0, 0, 1023, 1022, 1, 0, 0, 0, 1024, 266, 1, 0, 0, 0,
		1025, 1028, 3, 271, 132, 0, 1026, 1028, 3, 273, 133, 0, 1027, 1025, 1,
		0, 0, 0, 1027, 1026, 1, 0, 0, 0, 1028, 268, 1, 0, 0, 0, 1029, 1030, 5,
		120, 0, 0, 1030, 1031, 3, 261, 127, 0, 1031, 1032, 3, 261, 127, 0, 1032,
		270, 1, 0, 0, 0, 1033, 1034, 7, 17, 0, 0, 1034, 272, 1, 0, 0, 0, 1035,
		1036, 8, 18, 0, 0, 1036, 274, 1, 0, 0, 0, 1037, 1040, 3, 271, 132, 0, 1038,
		1040, 7, 19, 0, 0, 1039, 1037, 1, 0, 0, 0, 1039, 1038, 1, 0, 0, 0, 1040,
		276, 1, 0, 0, 0, 1041, 1045, 8, 20, 0, 0, 1042, 1043, 5, 92, 0, 0, 1043,
		1045, 3, 265, 129, 0, 1044, 1041, 1, 0, 0, 0, 1044, 1042, 1, 0, 0, 0, 1045,
		278, 1, 0, 0, 0, 1046, 1050, 8, 21, 0, 0, 1047, 1048, 5, 92, 0, 0, 1048,
		1050, 3, 265, 129, 0, 1049, 1046, 1, 0, 0, 0, 1049, 1047, 1, 0, 0, 0, 1050,
		280, 1, 0, 0, 0, 1051, 1052, 8, 22, 0, 0, 1052, 282, 1, 0, 0, 0, 1053,
		1055, 3, 295, 144, 0, 1054, 1053, 1, 0, 0, 0, 1054, 1055, 1, 0, 0, 0, 1055,
		1056, 1, 0, 0, 0, 1056, 1057, 5, 34, 0, 0, 1057, 284, 1, 0, 0, 0, 1058,
		1060, 3, 295, 144, 0, 1059, 1058, 1, 0, 0, 0, 1059, 1060, 1, 0, 0, 0, 1060,
		1061, 1, 0, 0, 0, 1061, 1062, 5, 96, 0, 0, 1062, 286, 1, 0, 0, 0, 1063,
		1065, 3, 295, 144, 0, 1064, 1063, 1, 0, 0, 0, 1064, 1065, 1, 0, 0, 0, 1065,
		1066, 1, 0, 0, 0, 1066, 1070, 5, 34, 0, 0, 1067, 1069, 3, 277, 135, 0,
		1068, 1067, 1, 0, 0, 0, 1069, 1072, 1, 0, 0, 0, 1070, 1068, 1, 0, 0, 0,
		1070, 1071, 1, 0, 0, 0, 1071, 1073, 1, 0, 0, 0, 1072, 1070, 1, 0, 0, 0,
		1073, 1074, 5, 34, 0, 0, 1074, 288, 1, 0, 0, 0, 1075, 1077, 3, 295, 144,
		0, 1076, 1075, 1, 0, 0, 0, 1076, 1077, 1, 0, 0, 0, 1077, 1078, 1, 0, 0,
		0, 1078, 1079, 5, 39, 0, 0, 1079, 1093, 5, 39, 0, 0, 1080, 1082, 3, 295,
		144, 0, 1081, 1080, 1, 0, 0, 0, 1081, 1082, 1, 0, 0, 0, 1082, 1083, 1,
		0, 0, 0, 1083, 1084, 5, 39, 0, 0, 1084, 1086, 3, 279, 136, 0, 1085, 1087,
		3, 279, 136, 0, 1086, 1085, 1, 0, 0, 0, 1087, 1088, 1, 0, 0, 0, 1088, 1086,
		1, 0, 0, 0, 1088, 1089, 1, 0, 0, 0, 1089, 1090, 1, 0, 0, 0, 1090, 1091,
		5, 39, 0, 0, 1091, 1093, 1, 0, 0, 0, 1092, 1076, 1, 0, 0, 0, 1092, 1081,
		1, 0, 0, 0, 1093, 290, 1, 0, 0, 0, 1094, 1096, 3, 295, 144, 0, 1095, 1094,
		1, 0, 0, 0, 1095, 1096, 1, 0, 0, 0, 1096, 1097, 1, 0, 0, 0, 1097, 1101,
		5, 96, 0, 0, 1098, 1100, 3, 281, 137, 0, 1099, 1098, 1, 0, 0, 0, 1100,
		1103, 1, 0, 0, 0, 1101, 1099, 1, 0, 0, 0, 1101, 1102, 1, 0, 0, 0, 1102,
		1104, 1, 0, 0, 0, 1103, 1101, 1, 0, 0, 0, 1104, 1105, 5, 96, 0, 0, 1105,
		292, 1, 0, 0, 0, 1106, 1107, 5, 48, 0, 0, 1107, 1108, 5, 104, 0, 0, 1108,
		1112, 1, 0, 0, 0, 1109, 1110, 3, 261, 127, 0, 1110, 1111, 3, 261, 127,
		0, 1111, 1113, 1, 0, 0, 0, 1112, 1109, 1, 0, 0, 0, 1113, 1114, 1, 0, 0,
		0, 1114, 1112, 1, 0, 0, 0, 1114, 1115, 1, 0, 0, 0, 1115, 294, 1, 0, 0,
		0, 1116, 1117, 7, 23, 0, 0, 1117, 296, 1, 0, 0, 0, 52, 0, 1, 2, 3, 4, 5,
		6, 448, 505, 593, 625, 633, 777, 795, 810, 815, 827, 833, 839, 846, 852,
		854, 881, 897, 914, 933, 949, 952, 976, 984, 990, 997, 999, 1006, 1015,
		1018, 1023, 1027, 1039, 1044, 1049, 1054, 1059, 1064, 1070, 1076, 1081,
		1088, 1092, 1095, 1101, 1114, 19, 4, 0, 0, 6, 0, 0, 5, 4, 0, 1, 103, 0,
		5, 1, 0, 1, 104, 1, 5, 2, 0, 1, 105, 2, 5, 3, 0, 1, 108, 3, 5, 0, 0, 1,
		111, 4, 1, 114, 5, 1, 117, 6, 1, 117, 7, 1, 118, 8, 1, 118, 9, 1, 119,
		10, 1, 121, 11,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// YaklangLexerInit initializes any static state used to implement YaklangLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewYaklangLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func YaklangLexerInit() {
	staticData := &yaklanglexerLexerStaticData
	staticData.once.Do(yaklanglexerLexerInit)
}

// NewYaklangLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewYaklangLexer(input antlr.CharStream) *YaklangLexer {
	YaklangLexerInit()
	l := new(YaklangLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &yaklanglexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "YaklangLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// YaklangLexer tokens.
const (
	YaklangLexerPanic                                       = 1
	YaklangLexerRecover                                     = 2
	YaklangLexerIf                                          = 3
	YaklangLexerElif                                        = 4
	YaklangLexerElse                                        = 5
	YaklangLexerSwitch                                      = 6
	YaklangLexerCase                                        = 7
	YaklangLexerDefault                                     = 8
	YaklangLexerFor                                         = 9
	YaklangLexerContinue                                    = 10
	YaklangLexerBreak                                       = 11
	YaklangLexerReturn                                      = 12
	YaklangLexerInclude                                     = 13
	YaklangLexerTry                                         = 14
	YaklangLexerCatch                                       = 15
	YaklangLexerFinally                                     = 16
	YaklangLexerImportmod                                   = 17
	YaklangLexerAs                                          = 18
	YaklangLexerExport                                      = 19
	YaklangLexerDefer                                       = 20
	YaklangLexerGo                                          = 21
	YaklangLexerRange                                       = 22
	YaklangLexerFunc                                        = 23
	YaklangLexerMap                                         = 24
	YaklangLexerChan                                        = 25
	YaklangLexerClass                                       = 26
	YaklangLexerNew                                         = 27
	YaklangLexerMake                                        = 28
	YaklangLexerTrue                                        = 29
	YaklangLexerFalse                                       = 30
	YaklangLexerIn                                          = 31
	YaklangLexerNotLiteral                                  = 32
	YaklangLexerAssert                                      = 33
	YaklangLexerVar                                         = 34
	YaklangLexerVarTypeName                                 = 35
	YaklangLexerUndefinedLiteral                            = 36
	YaklangLexerFallthrough                                 = 37
	YaklangLexerNilLiteral                                  = 38
	YaklangLexerIdentifier                                  = 39
	YaklangLexerIdentifierWithDollar                        = 40
	YaklangLexerMul                                         = 41
	YaklangLexerDiv                                         = 42
	YaklangLexerMod                                         = 43
	YaklangLexerLtLt                                        = 44
	YaklangLexerLt                                          = 45
	YaklangLexerGtGt                                        = 46
	YaklangLexerGt                                          = 47
	YaklangLexerAmp                                         = 48
	YaklangLexerAmpNot                                      = 49
	YaklangLexerPlus                                        = 50
	YaklangLexerSub                                         = 51
	YaklangLexerXor                                         = 52
	YaklangLexerXand                                        = 53
	YaklangLexerEq                                          = 54
	YaklangLexerLtEq                                        = 55
	YaklangLexerGtEq                                        = 56
	YaklangLexerNeq                                         = 57
	YaklangLexerChanIn                                      = 58
	YaklangLexerLogicAnd                                    = 59
	YaklangLexerLogicOr                                     = 60
	YaklangLexerQuestion                                    = 61
	YaklangLexerColon                                       = 62
	YaklangLexerLBracket                                    = 63
	YaklangLexerRBracket                                    = 64
	YaklangLexerLParen                                      = 65
	YaklangLexerRParen                                      = 66
	YaklangLexerLBrace                                      = 67
	YaklangLexerTemplateCloseBrace                          = 68
	YaklangLexerRBrace                                      = 69
	YaklangLexerComma                                       = 70
	YaklangLexerAssignEq                                    = 71
	YaklangLexerWavy                                        = 72
	YaklangLexerColonAssignEq                               = 73
	YaklangLexerPlusPlus                                    = 74
	YaklangLexerSubSub                                      = 75
	YaklangLexerPlusEq                                      = 76
	YaklangLexerMinusEq                                     = 77
	YaklangLexerMulEq                                       = 78
	YaklangLexerDivEq                                       = 79
	YaklangLexerModEq                                       = 80
	YaklangLexerBitOrEq                                     = 81
	YaklangLexerLtLtEq                                      = 82
	YaklangLexerGtGtEq                                      = 83
	YaklangLexerAmpEq                                       = 84
	YaklangLexerBitAndEq                                    = 85
	YaklangLexerBitAndNotEq                                 = 86
	YaklangLexerSemiColon                                   = 87
	YaklangLexerEllipsis                                    = 88
	YaklangLexerEqGt                                        = 89
	YaklangLexerLtGt                                        = 90
	YaklangLexerNot                                         = 91
	YaklangLexerDot                                         = 92
	YaklangLexerWS                                          = 93
	YaklangLexerCommentStart                                = 94
	YaklangLexerCommentEnd                                  = 95
	YaklangLexerBackTickL                                   = 96
	YaklangLexerCOMMENT                                     = 97
	YaklangLexerStartNowDoc                                 = 98
	YaklangLexerLINE_COMMENT                                = 99
	YaklangLexerLF                                          = 100
	YaklangLexerEOS                                         = 101
	YaklangLexerIntegerLiteral                              = 102
	YaklangLexerFloatLiteral                                = 103
	YaklangLexerTemplateSingleQuoteStringStart              = 104
	YaklangLexerTemplateDoubleQuoteStringStart              = 105
	YaklangLexerTemplateBackTickStringStart                 = 106
	YaklangLexerStringLiteral                               = 107
	YaklangLexerCharacterLiteral                            = 108
	YaklangLexerTemplateSingleQuoteStringCharacterStringEnd = 109
	YaklangLexerTemplateSingleQuoteStringCharacter          = 110
	YaklangLexerTemplateSingleQuoteStringStartExpression    = 111
	YaklangLexerTemplateDoubleQuoteStringCharacterStringEnd = 112
	YaklangLexerTemplateDoubleQuoteStringCharacter          = 113
	YaklangLexerTemplateDoubleQuoteStringStartExpression    = 114
	YaklangLexerTemplateBackTickStringCharacterStringEnd    = 115
	YaklangLexerTemplateBackTickStringCharacter             = 116
	YaklangLexerTemplateBackTickStringStartExpression       = 117
	YaklangLexerHereDocIdentifierName                       = 118
	YaklangLexerHereDocIdentifierBreak                      = 119
	YaklangLexerCRLFEndDoc                                  = 120
	YaklangLexerCRLFHereDocText                             = 121
	YaklangLexerLFEndDoc                                    = 122
	YaklangLexerLFHereDocText                               = 123
)

// YaklangLexer modes.
const (
	YaklangLexerTEMPLATE_SINGLE_QUOTE_MODE = iota + 1
	YaklangLexerTEMPLATE_DOUBLE_QUOTE_MODE
	YaklangLexerTEMPLATE_BACKTICK_MODE
	YaklangLexerHereDocIdentifier
	YaklangLexerCRLFHereDoc
	YaklangLexerLFHereDoc
)

func (l *YaklangLexer) Action(localctx antlr.RuleContext, ruleIndex, actionIndex int) {
	switch ruleIndex {
	case 103:
		l.TemplateSingleQuoteStringStart_Action(localctx, actionIndex)

	case 104:
		l.TemplateDoubleQuoteStringStart_Action(localctx, actionIndex)

	case 105:
		l.TemplateBackTickStringStart_Action(localctx, actionIndex)

	case 108:
		l.TemplateSingleQuoteStringCharacterStringEnd_Action(localctx, actionIndex)

	case 111:
		l.TemplateDoubleQuoteStringCharacterStringEnd_Action(localctx, actionIndex)

	case 114:
		l.TemplateBackTickStringCharacterStringEnd_Action(localctx, actionIndex)

	case 117:
		l.HereDocIdentifierName_Action(localctx, actionIndex)

	case 118:
		l.HereDocIdentifierBreak_Action(localctx, actionIndex)

	case 119:
		l.CRLFEndDoc_Action(localctx, actionIndex)

	case 121:
		l.LFEndDoc_Action(localctx, actionIndex)

	default:
		panic("No registered action for: " + fmt.Sprint(ruleIndex))
	}
}

func (l *YaklangLexer) TemplateSingleQuoteStringStart_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 0:
		this.IncreaseTemplateDepth()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *YaklangLexer) TemplateDoubleQuoteStringStart_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 1:
		this.IncreaseTemplateDepth()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *YaklangLexer) TemplateBackTickStringStart_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 2:
		this.IncreaseTemplateDepth()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *YaklangLexer) TemplateSingleQuoteStringCharacterStringEnd_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 3:
		this.DecreaseTemplateDepth()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *YaklangLexer) TemplateDoubleQuoteStringCharacterStringEnd_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 4:
		this.DecreaseTemplateDepth()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *YaklangLexer) TemplateBackTickStringCharacterStringEnd_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 5:
		this.DecreaseTemplateDepth()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *YaklangLexer) HereDocIdentifierName_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 6:
		this.recordHereDocLabel()

	case 7:
		this.recordHereDocLabel()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *YaklangLexer) HereDocIdentifierBreak_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 8:
		this.recordHereDocLF()

	case 9:
		this.hereDocModeDistribute()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *YaklangLexer) CRLFEndDoc_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 10:
		this.DocEndDistribute()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *YaklangLexer) LFEndDoc_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 11:
		this.DocEndDistribute()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}

func (l *YaklangLexer) Sempred(localctx antlr.RuleContext, ruleIndex, predIndex int) bool {
	switch ruleIndex {
	case 67:
		return l.TemplateCloseBrace_Sempred(localctx, predIndex)

	default:
		panic("No registered predicate for: " + fmt.Sprint(ruleIndex))
	}
}

func (p *YaklangLexer) TemplateCloseBrace_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	this := p
	_ = this

	switch predIndex {
	case 0:
		return this.IsInTemplateString()

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

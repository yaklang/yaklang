// Code generated from java-escape by ANTLR 4.11.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr/v4"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type YaklangLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var yaklanglexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func yaklanglexerLexerInit() {
	staticData := &yaklanglexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE", "TEMPLATE_DOUBLE_QUOTE_MODE", "TEMPLATE_BACKTICK_MODE",
	}
	staticData.literalNames = []string{
		"", "'panic'", "'recover'", "'if'", "'elif'", "'else'", "'switch'",
		"'case'", "'default'", "'for'", "'continue'", "'break'", "'return'",
		"'include'", "'try'", "'catch'", "'finally'", "'importmod'", "'as'",
		"'export'", "'defer'", "'go'", "'range'", "", "'map'", "'chan'", "'class'",
		"'new'", "'make'", "'true'", "'false'", "'in'", "'not'", "'assert'",
		"'var'", "", "'undefined'", "'fallthrough'", "'nil'", "", "", "'*'",
		"'/'", "'%'", "'<<'", "'<'", "'>>'", "'>'", "'&'", "'&^'", "'+'", "'-'",
		"'^'", "'|'", "'=='", "'<='", "'>='", "'!='", "'<-'", "'&&'", "'||'",
		"'?'", "':'", "'['", "']'", "'('", "')'", "'{'", "", "'}'", "','", "'='",
		"'~'", "':='", "'++'", "'--'", "'+='", "'-='", "'*='", "'/='", "'%='",
		"'^='", "'<<='", "'>>='", "'&='", "'|='", "'&^='", "';'", "'...'", "'=>'",
		"'<>'", "'!'", "'.'", "", "'/*'", "'*/'", "'`'", "", "", "'\\n'",
	}
	staticData.symbolicNames = []string{
		"", "Panic", "Recover", "If", "Elif", "Else", "Switch", "Case", "Default",
		"For", "Continue", "Break", "Return", "Include", "Try", "Catch", "Finally",
		"Importmod", "As", "Export", "Defer", "Go", "Range", "Func", "Map",
		"Chan", "Class", "New", "Make", "True", "False", "In", "NotLiteral",
		"Assert", "Var", "VarTypeName", "UndefinedLiteral", "Fallthrough", "NilLiteral",
		"Identifier", "IdentifierWithDollar", "Mul", "Div", "Mod", "LtLt", "Lt",
		"GtGt", "Gt", "Amp", "AmpNot", "Plus", "Sub", "Xor", "Xand", "Eq", "LtEq",
		"GtEq", "Neq", "ChanIn", "LogicAnd", "LogicOr", "Question", "Colon",
		"LBracket", "RBracket", "LParen", "RParen", "LBrace", "TemplateCloseBrace",
		"RBrace", "Comma", "AssignEq", "Wavy", "ColonAssignEq", "PlusPlus",
		"SubSub", "PlusEq", "MinusEq", "MulEq", "DivEq", "ModEq", "BitOrEq",
		"LtLtEq", "GtGtEq", "AmpEq", "BitAndEq", "BitAndNotEq", "SemiColon",
		"Ellipsis", "EqGt", "LtGt", "Not", "Dot", "WS", "CommontStart", "CommontEnd",
		"BackTickL", "COMMENT", "LINE_COMMENT", "LF", "EOS", "IntegerLiteral",
		"FloatLiteral", "TemplateDoubleQuoteStringStart", "TemplateBackTickStringStart",
		"StringLiteral", "CharacterLiteral", "TemplateDoubleQuoteStringCharacterStringEnd",
		"TemplateDoubleQuoteStringCharacter", "TemplateDoubleQuoteStringStartExpression",
		"TemplateBackTickStringCharacterStringEnd", "TemplateBackTickStringCharacter",
		"TemplateBackTickStringStartExpression",
	}
	staticData.ruleNames = []string{
		"Panic", "Recover", "If", "Elif", "Else", "Switch", "Case", "Default",
		"For", "Continue", "Break", "Return", "Include", "Try", "Catch", "Finally",
		"Importmod", "As", "Export", "Defer", "Go", "Range", "Func", "Map",
		"Chan", "Class", "New", "Make", "True", "False", "In", "NotLiteral",
		"Assert", "Var", "VarTypeName", "UndefinedLiteral", "Fallthrough", "NilLiteral",
		"Identifier", "IdentifierWithDollar", "Mul", "Div", "Mod", "LtLt", "Lt",
		"GtGt", "Gt", "Amp", "AmpNot", "Plus", "Sub", "Xor", "Xand", "Eq", "LtEq",
		"GtEq", "Neq", "ChanIn", "LogicAnd", "LogicOr", "Question", "Colon",
		"LBracket", "RBracket", "LParen", "RParen", "LBrace", "TemplateCloseBrace",
		"RBrace", "Comma", "AssignEq", "Wavy", "ColonAssignEq", "PlusPlus",
		"SubSub", "PlusEq", "MinusEq", "MulEq", "DivEq", "ModEq", "BitOrEq",
		"LtLtEq", "GtGtEq", "AmpEq", "BitAndEq", "BitAndNotEq", "SemiColon",
		"Ellipsis", "EqGt", "LtGt", "Not", "Dot", "WS", "CommontStart", "CommontEnd",
		"BackTickL", "COMMENT", "LINE_COMMENT", "LF", "EOS", "IntegerLiteral",
		"FloatLiteral", "TemplateDoubleQuoteStringStart", "TemplateBackTickStringStart",
		"StringLiteral", "CharacterLiteral", "TemplateDoubleQuoteStringCharacterStringEnd",
		"TemplateDoubleQuoteStringCharacter", "TemplateDoubleQuoteStringStartExpression",
		"TemplateBackTickStringCharacterStringEnd", "TemplateBackTickStringCharacter",
		"TemplateBackTickStringStartExpression", "HexIntegerLiteral", "OctalIntegerLiteral",
		"BinaryIntegerLiteral", "HexDigit", "DecimalIntegerLiteral", "EscapeSequence",
		"CharacterEscapeSequence", "HexEscapeSequence", "SingleEscapeCharacter",
		"NonEscapeCharacter", "EscapeCharacter", "DoubleStringCharacter", "SingleStringCharacter",
		"BackTickStringCharacter", "DoubleQuoteTemplateStringLiteral", "BackTickTemplateStringLiteral",
		"DoubleQuoteStringLiteral", "SingleQuoteStringLiteral", "BackTickStringLiteral",
		"HexStringLiteral", "StringLiteralPrefix",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 112, 1013, 6, -1, 6, -1, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7,
		2, 2, 3, 7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7,
		8, 2, 9, 7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13,
		2, 14, 7, 14, 2, 15, 7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2,
		19, 7, 19, 2, 20, 7, 20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24,
		7, 24, 2, 25, 7, 25, 2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7,
		29, 2, 30, 7, 30, 2, 31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34,
		2, 35, 7, 35, 2, 36, 7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2,
		40, 7, 40, 2, 41, 7, 41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45,
		7, 45, 2, 46, 7, 46, 2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7,
		50, 2, 51, 7, 51, 2, 52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55,
		2, 56, 7, 56, 2, 57, 7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2,
		61, 7, 61, 2, 62, 7, 62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66,
		7, 66, 2, 67, 7, 67, 2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 2, 71, 7,
		71, 2, 72, 7, 72, 2, 73, 7, 73, 2, 74, 7, 74, 2, 75, 7, 75, 2, 76, 7, 76,
		2, 77, 7, 77, 2, 78, 7, 78, 2, 79, 7, 79, 2, 80, 7, 80, 2, 81, 7, 81, 2,
		82, 7, 82, 2, 83, 7, 83, 2, 84, 7, 84, 2, 85, 7, 85, 2, 86, 7, 86, 2, 87,
		7, 87, 2, 88, 7, 88, 2, 89, 7, 89, 2, 90, 7, 90, 2, 91, 7, 91, 2, 92, 7,
		92, 2, 93, 7, 93, 2, 94, 7, 94, 2, 95, 7, 95, 2, 96, 7, 96, 2, 97, 7, 97,
		2, 98, 7, 98, 2, 99, 7, 99, 2, 100, 7, 100, 2, 101, 7, 101, 2, 102, 7,
		102, 2, 103, 7, 103, 2, 104, 7, 104, 2, 105, 7, 105, 2, 106, 7, 106, 2,
		107, 7, 107, 2, 108, 7, 108, 2, 109, 7, 109, 2, 110, 7, 110, 2, 111, 7,
		111, 2, 112, 7, 112, 2, 113, 7, 113, 2, 114, 7, 114, 2, 115, 7, 115, 2,
		116, 7, 116, 2, 117, 7, 117, 2, 118, 7, 118, 2, 119, 7, 119, 2, 120, 7,
		120, 2, 121, 7, 121, 2, 122, 7, 122, 2, 123, 7, 123, 2, 124, 7, 124, 2,
		125, 7, 125, 2, 126, 7, 126, 2, 127, 7, 127, 2, 128, 7, 128, 2, 129, 7,
		129, 2, 130, 7, 130, 2, 131, 7, 131, 2, 132, 7, 132, 1, 0, 1, 0, 1, 0,
		1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
		1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4,
		1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6,
		1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8,
		1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1,
		10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11,
		1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1,
		13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15,
		1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1,
		16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18,
		1, 18, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1,
		20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22,
		1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1,
		22, 1, 22, 1, 22, 1, 22, 1, 22, 3, 22, 421, 8, 22, 1, 23, 1, 23, 1, 23,
		1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 25, 1,
		25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27,
		1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1,
		29, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 31, 1, 32, 1, 32, 1, 32,
		1, 32, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1,
		34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34,
		1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1,
		34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34,
		1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1,
		34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34,
		1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1,
		34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34,
		1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 3, 34, 558, 8, 34, 1, 35, 1,
		35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 36, 1, 36,
		1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1,
		37, 1, 37, 1, 37, 1, 37, 1, 38, 1, 38, 5, 38, 588, 8, 38, 10, 38, 12, 38,
		591, 9, 38, 1, 39, 1, 39, 1, 39, 5, 39, 596, 8, 39, 10, 39, 12, 39, 599,
		9, 39, 1, 40, 1, 40, 1, 41, 1, 41, 1, 42, 1, 42, 1, 43, 1, 43, 1, 43, 1,
		44, 1, 44, 1, 45, 1, 45, 1, 45, 1, 46, 1, 46, 1, 47, 1, 47, 1, 48, 1, 48,
		1, 48, 1, 49, 1, 49, 1, 50, 1, 50, 1, 51, 1, 51, 1, 52, 1, 52, 1, 53, 1,
		53, 1, 53, 1, 54, 1, 54, 1, 54, 1, 55, 1, 55, 1, 55, 1, 56, 1, 56, 1, 56,
		1, 57, 1, 57, 1, 57, 1, 58, 1, 58, 1, 58, 1, 59, 1, 59, 1, 59, 1, 60, 1,
		60, 1, 61, 1, 61, 1, 62, 1, 62, 1, 63, 1, 63, 1, 64, 1, 64, 1, 65, 1, 65,
		1, 66, 1, 66, 1, 67, 1, 67, 1, 67, 1, 67, 1, 67, 1, 68, 1, 68, 1, 69, 1,
		69, 1, 70, 1, 70, 1, 71, 1, 71, 1, 72, 1, 72, 1, 72, 1, 73, 1, 73, 1, 73,
		1, 74, 1, 74, 1, 74, 1, 75, 1, 75, 1, 75, 1, 76, 1, 76, 1, 76, 1, 77, 1,
		77, 1, 77, 1, 78, 1, 78, 1, 78, 1, 79, 1, 79, 1, 79, 1, 80, 1, 80, 1, 80,
		1, 81, 1, 81, 1, 81, 1, 81, 1, 82, 1, 82, 1, 82, 1, 82, 1, 83, 1, 83, 1,
		83, 1, 84, 1, 84, 1, 84, 1, 85, 1, 85, 1, 85, 1, 85, 1, 86, 1, 86, 1, 87,
		1, 87, 1, 87, 1, 87, 1, 88, 1, 88, 1, 88, 1, 89, 1, 89, 1, 89, 1, 90, 1,
		90, 1, 91, 1, 91, 1, 92, 4, 92, 740, 8, 92, 11, 92, 12, 92, 741, 1, 92,
		1, 92, 1, 93, 1, 93, 1, 93, 1, 94, 1, 94, 1, 94, 1, 95, 1, 95, 1, 96, 1,
		96, 1, 96, 1, 96, 5, 96, 758, 8, 96, 10, 96, 12, 96, 761, 9, 96, 1, 96,
		1, 96, 1, 96, 1, 97, 1, 97, 1, 97, 3, 97, 769, 8, 97, 1, 97, 5, 97, 772,
		8, 97, 10, 97, 12, 97, 775, 9, 97, 1, 98, 1, 98, 1, 99, 1, 99, 1, 99, 1,
		99, 1, 99, 5, 99, 784, 8, 99, 10, 99, 12, 99, 787, 9, 99, 1, 99, 1, 99,
		1, 99, 3, 99, 792, 8, 99, 1, 100, 1, 100, 1, 100, 1, 100, 3, 100, 798,
		8, 100, 1, 101, 1, 101, 1, 101, 4, 101, 803, 8, 101, 11, 101, 12, 101,
		804, 1, 101, 1, 101, 4, 101, 809, 8, 101, 11, 101, 12, 101, 810, 3, 101,
		813, 8, 101, 1, 102, 1, 102, 1, 102, 1, 102, 1, 102, 1, 102, 1, 102, 1,
		103, 1, 103, 1, 103, 1, 103, 1, 103, 1, 103, 1, 103, 1, 104, 1, 104, 1,
		104, 1, 104, 3, 104, 833, 8, 104, 1, 105, 1, 105, 1, 105, 1, 105, 1, 106,
		1, 106, 1, 106, 1, 106, 1, 106, 1, 107, 1, 107, 1, 107, 1, 107, 1, 107,
		3, 107, 849, 8, 107, 1, 108, 1, 108, 1, 108, 1, 108, 1, 108, 1, 109, 1,
		109, 1, 109, 1, 109, 1, 109, 1, 110, 1, 110, 1, 110, 1, 110, 1, 110, 1,
		110, 1, 110, 3, 110, 868, 8, 110, 1, 111, 1, 111, 1, 111, 1, 111, 1, 111,
		1, 112, 1, 112, 1, 112, 4, 112, 878, 8, 112, 11, 112, 12, 112, 879, 1,
		113, 1, 113, 4, 113, 884, 8, 113, 11, 113, 12, 113, 885, 1, 113, 1, 113,
		1, 113, 4, 113, 891, 8, 113, 11, 113, 12, 113, 892, 3, 113, 895, 8, 113,
		1, 114, 1, 114, 1, 114, 4, 114, 900, 8, 114, 11, 114, 12, 114, 901, 1,
		115, 1, 115, 1, 116, 1, 116, 1, 116, 5, 116, 909, 8, 116, 10, 116, 12,
		116, 912, 9, 116, 3, 116, 914, 8, 116, 1, 117, 1, 117, 1, 117, 3, 117,
		919, 8, 117, 1, 118, 1, 118, 3, 118, 923, 8, 118, 1, 119, 1, 119, 1, 119,
		1, 119, 1, 120, 1, 120, 1, 121, 1, 121, 1, 122, 1, 122, 3, 122, 935, 8,
		122, 1, 123, 1, 123, 1, 123, 3, 123, 940, 8, 123, 1, 124, 1, 124, 1, 124,
		3, 124, 945, 8, 124, 1, 125, 1, 125, 1, 126, 3, 126, 950, 8, 126, 1, 126,
		1, 126, 1, 127, 3, 127, 955, 8, 127, 1, 127, 1, 127, 1, 128, 3, 128, 960,
		8, 128, 1, 128, 1, 128, 5, 128, 964, 8, 128, 10, 128, 12, 128, 967, 9,
		128, 1, 128, 1, 128, 1, 129, 3, 129, 972, 8, 129, 1, 129, 1, 129, 1, 129,
		3, 129, 977, 8, 129, 1, 129, 1, 129, 1, 129, 4, 129, 982, 8, 129, 11, 129,
		12, 129, 983, 1, 129, 1, 129, 3, 129, 988, 8, 129, 1, 130, 3, 130, 991,
		8, 130, 1, 130, 1, 130, 5, 130, 995, 8, 130, 10, 130, 12, 130, 998, 9,
		130, 1, 130, 1, 130, 1, 131, 1, 131, 1, 131, 1, 131, 1, 131, 1, 131, 4,
		131, 1008, 8, 131, 11, 131, 12, 131, 1009, 1, 132, 1, 132, 2, 759, 785,
		0, 133, 3, 1, 5, 2, 7, 3, 9, 4, 11, 5, 13, 6, 15, 7, 17, 8, 19, 9, 21,
		10, 23, 11, 25, 12, 27, 13, 29, 14, 31, 15, 33, 16, 35, 17, 37, 18, 39,
		19, 41, 20, 43, 21, 45, 22, 47, 23, 49, 24, 51, 25, 53, 26, 55, 27, 57,
		28, 59, 29, 61, 30, 63, 31, 65, 32, 67, 33, 69, 34, 71, 35, 73, 36, 75,
		37, 77, 38, 79, 39, 81, 40, 83, 41, 85, 42, 87, 43, 89, 44, 91, 45, 93,
		46, 95, 47, 97, 48, 99, 49, 101, 50, 103, 51, 105, 52, 107, 53, 109, 54,
		111, 55, 113, 56, 115, 57, 117, 58, 119, 59, 121, 60, 123, 61, 125, 62,
		127, 63, 129, 64, 131, 65, 133, 66, 135, 67, 137, 68, 139, 69, 141, 70,
		143, 71, 145, 72, 147, 73, 149, 74, 151, 75, 153, 76, 155, 77, 157, 78,
		159, 79, 161, 80, 163, 81, 165, 82, 167, 83, 169, 84, 171, 85, 173, 86,
		175, 87, 177, 88, 179, 89, 181, 90, 183, 91, 185, 92, 187, 93, 189, 94,
		191, 95, 193, 96, 195, 97, 197, 98, 199, 99, 201, 100, 203, 101, 205, 102,
		207, 103, 209, 104, 211, 105, 213, 106, 215, 107, 217, 108, 219, 109, 221,
		110, 223, 111, 225, 112, 227, 0, 229, 0, 231, 0, 233, 0, 235, 0, 237, 0,
		239, 0, 241, 0, 243, 0, 245, 0, 247, 0, 249, 0, 251, 0, 253, 0, 255, 0,
		257, 0, 259, 0, 261, 0, 263, 0, 265, 0, 267, 0, 3, 0, 1, 2, 21, 3, 0, 65,
		90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 3, 0, 9, 9,
		13, 13, 32, 32, 2, 0, 10, 10, 13, 13, 1, 0, 48, 57, 5, 0, 10, 10, 13, 13,
		34, 34, 36, 36, 92, 92, 4, 0, 34, 34, 36, 36, 92, 92, 96, 96, 2, 0, 88,
		88, 120, 120, 1, 0, 48, 55, 2, 0, 79, 79, 111, 111, 2, 0, 66, 66, 98, 98,
		1, 0, 48, 49, 3, 0, 48, 57, 65, 70, 97, 102, 1, 0, 49, 57, 9, 0, 34, 34,
		39, 39, 92, 92, 98, 98, 102, 102, 110, 110, 114, 114, 116, 116, 118, 118,
		12, 0, 10, 10, 13, 13, 34, 34, 39, 39, 48, 57, 92, 92, 98, 98, 102, 102,
		110, 110, 114, 114, 116, 118, 120, 120, 3, 0, 48, 57, 117, 117, 120, 120,
		4, 0, 10, 10, 13, 13, 34, 34, 92, 92, 4, 0, 10, 10, 13, 13, 39, 39, 92,
		92, 1, 0, 96, 96, 3, 0, 65, 90, 97, 101, 103, 122, 1055, 0, 3, 1, 0, 0,
		0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0,
		0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0,
		0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1,
		0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35,
		1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0,
		43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0,
		0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0,
		0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0,
		0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1,
		0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81,
		1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0,
		89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0,
		0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1, 0,
		0, 0, 0, 105, 1, 0, 0, 0, 0, 107, 1, 0, 0, 0, 0, 109, 1, 0, 0, 0, 0, 111,
		1, 0, 0, 0, 0, 113, 1, 0, 0, 0, 0, 115, 1, 0, 0, 0, 0, 117, 1, 0, 0, 0,
		0, 119, 1, 0, 0, 0, 0, 121, 1, 0, 0, 0, 0, 123, 1, 0, 0, 0, 0, 125, 1,
		0, 0, 0, 0, 127, 1, 0, 0, 0, 0, 129, 1, 0, 0, 0, 0, 131, 1, 0, 0, 0, 0,
		133, 1, 0, 0, 0, 0, 135, 1, 0, 0, 0, 0, 137, 1, 0, 0, 0, 0, 139, 1, 0,
		0, 0, 0, 141, 1, 0, 0, 0, 0, 143, 1, 0, 0, 0, 0, 145, 1, 0, 0, 0, 0, 147,
		1, 0, 0, 0, 0, 149, 1, 0, 0, 0, 0, 151, 1, 0, 0, 0, 0, 153, 1, 0, 0, 0,
		0, 155, 1, 0, 0, 0, 0, 157, 1, 0, 0, 0, 0, 159, 1, 0, 0, 0, 0, 161, 1,
		0, 0, 0, 0, 163, 1, 0, 0, 0, 0, 165, 1, 0, 0, 0, 0, 167, 1, 0, 0, 0, 0,
		169, 1, 0, 0, 0, 0, 171, 1, 0, 0, 0, 0, 173, 1, 0, 0, 0, 0, 175, 1, 0,
		0, 0, 0, 177, 1, 0, 0, 0, 0, 179, 1, 0, 0, 0, 0, 181, 1, 0, 0, 0, 0, 183,
		1, 0, 0, 0, 0, 185, 1, 0, 0, 0, 0, 187, 1, 0, 0, 0, 0, 189, 1, 0, 0, 0,
		0, 191, 1, 0, 0, 0, 0, 193, 1, 0, 0, 0, 0, 195, 1, 0, 0, 0, 0, 197, 1,
		0, 0, 0, 0, 199, 1, 0, 0, 0, 0, 201, 1, 0, 0, 0, 0, 203, 1, 0, 0, 0, 0,
		205, 1, 0, 0, 0, 0, 207, 1, 0, 0, 0, 0, 209, 1, 0, 0, 0, 0, 211, 1, 0,
		0, 0, 0, 213, 1, 0, 0, 0, 1, 215, 1, 0, 0, 0, 1, 217, 1, 0, 0, 0, 1, 219,
		1, 0, 0, 0, 2, 221, 1, 0, 0, 0, 2, 223, 1, 0, 0, 0, 2, 225, 1, 0, 0, 0,
		3, 269, 1, 0, 0, 0, 5, 275, 1, 0, 0, 0, 7, 283, 1, 0, 0, 0, 9, 286, 1,
		0, 0, 0, 11, 291, 1, 0, 0, 0, 13, 296, 1, 0, 0, 0, 15, 303, 1, 0, 0, 0,
		17, 308, 1, 0, 0, 0, 19, 316, 1, 0, 0, 0, 21, 320, 1, 0, 0, 0, 23, 329,
		1, 0, 0, 0, 25, 335, 1, 0, 0, 0, 27, 342, 1, 0, 0, 0, 29, 350, 1, 0, 0,
		0, 31, 354, 1, 0, 0, 0, 33, 360, 1, 0, 0, 0, 35, 368, 1, 0, 0, 0, 37, 378,
		1, 0, 0, 0, 39, 381, 1, 0, 0, 0, 41, 388, 1, 0, 0, 0, 43, 394, 1, 0, 0,
		0, 45, 397, 1, 0, 0, 0, 47, 420, 1, 0, 0, 0, 49, 422, 1, 0, 0, 0, 51, 426,
		1, 0, 0, 0, 53, 431, 1, 0, 0, 0, 55, 437, 1, 0, 0, 0, 57, 441, 1, 0, 0,
		0, 59, 446, 1, 0, 0, 0, 61, 451, 1, 0, 0, 0, 63, 457, 1, 0, 0, 0, 65, 460,
		1, 0, 0, 0, 67, 464, 1, 0, 0, 0, 69, 471, 1, 0, 0, 0, 71, 557, 1, 0, 0,
		0, 73, 559, 1, 0, 0, 0, 75, 569, 1, 0, 0, 0, 77, 581, 1, 0, 0, 0, 79, 585,
		1, 0, 0, 0, 81, 592, 1, 0, 0, 0, 83, 600, 1, 0, 0, 0, 85, 602, 1, 0, 0,
		0, 87, 604, 1, 0, 0, 0, 89, 606, 1, 0, 0, 0, 91, 609, 1, 0, 0, 0, 93, 611,
		1, 0, 0, 0, 95, 614, 1, 0, 0, 0, 97, 616, 1, 0, 0, 0, 99, 618, 1, 0, 0,
		0, 101, 621, 1, 0, 0, 0, 103, 623, 1, 0, 0, 0, 105, 625, 1, 0, 0, 0, 107,
		627, 1, 0, 0, 0, 109, 629, 1, 0, 0, 0, 111, 632, 1, 0, 0, 0, 113, 635,
		1, 0, 0, 0, 115, 638, 1, 0, 0, 0, 117, 641, 1, 0, 0, 0, 119, 644, 1, 0,
		0, 0, 121, 647, 1, 0, 0, 0, 123, 650, 1, 0, 0, 0, 125, 652, 1, 0, 0, 0,
		127, 654, 1, 0, 0, 0, 129, 656, 1, 0, 0, 0, 131, 658, 1, 0, 0, 0, 133,
		660, 1, 0, 0, 0, 135, 662, 1, 0, 0, 0, 137, 664, 1, 0, 0, 0, 139, 669,
		1, 0, 0, 0, 141, 671, 1, 0, 0, 0, 143, 673, 1, 0, 0, 0, 145, 675, 1, 0,
		0, 0, 147, 677, 1, 0, 0, 0, 149, 680, 1, 0, 0, 0, 151, 683, 1, 0, 0, 0,
		153, 686, 1, 0, 0, 0, 155, 689, 1, 0, 0, 0, 157, 692, 1, 0, 0, 0, 159,
		695, 1, 0, 0, 0, 161, 698, 1, 0, 0, 0, 163, 701, 1, 0, 0, 0, 165, 704,
		1, 0, 0, 0, 167, 708, 1, 0, 0, 0, 169, 712, 1, 0, 0, 0, 171, 715, 1, 0,
		0, 0, 173, 718, 1, 0, 0, 0, 175, 722, 1, 0, 0, 0, 177, 724, 1, 0, 0, 0,
		179, 728, 1, 0, 0, 0, 181, 731, 1, 0, 0, 0, 183, 734, 1, 0, 0, 0, 185,
		736, 1, 0, 0, 0, 187, 739, 1, 0, 0, 0, 189, 745, 1, 0, 0, 0, 191, 748,
		1, 0, 0, 0, 193, 751, 1, 0, 0, 0, 195, 753, 1, 0, 0, 0, 197, 768, 1, 0,
		0, 0, 199, 776, 1, 0, 0, 0, 201, 791, 1, 0, 0, 0, 203, 797, 1, 0, 0, 0,
		205, 812, 1, 0, 0, 0, 207, 814, 1, 0, 0, 0, 209, 821, 1, 0, 0, 0, 211,
		832, 1, 0, 0, 0, 213, 834, 1, 0, 0, 0, 215, 838, 1, 0, 0, 0, 217, 848,
		1, 0, 0, 0, 219, 850, 1, 0, 0, 0, 221, 855, 1, 0, 0, 0, 223, 867, 1, 0,
		0, 0, 225, 869, 1, 0, 0, 0, 227, 874, 1, 0, 0, 0, 229, 894, 1, 0, 0, 0,
		231, 896, 1, 0, 0, 0, 233, 903, 1, 0, 0, 0, 235, 913, 1, 0, 0, 0, 237,
		918, 1, 0, 0, 0, 239, 922, 1, 0, 0, 0, 241, 924, 1, 0, 0, 0, 243, 928,
		1, 0, 0, 0, 245, 930, 1, 0, 0, 0, 247, 934, 1, 0, 0, 0, 249, 939, 1, 0,
		0, 0, 251, 944, 1, 0, 0, 0, 253, 946, 1, 0, 0, 0, 255, 949, 1, 0, 0, 0,
		257, 954, 1, 0, 0, 0, 259, 959, 1, 0, 0, 0, 261, 987, 1, 0, 0, 0, 263,
		990, 1, 0, 0, 0, 265, 1001, 1, 0, 0, 0, 267, 1011, 1, 0, 0, 0, 269, 270,
		5, 112, 0, 0, 270, 271, 5, 97, 0, 0, 271, 272, 5, 110, 0, 0, 272, 273,
		5, 105, 0, 0, 273, 274, 5, 99, 0, 0, 274, 4, 1, 0, 0, 0, 275, 276, 5, 114,
		0, 0, 276, 277, 5, 101, 0, 0, 277, 278, 5, 99, 0, 0, 278, 279, 5, 111,
		0, 0, 279, 280, 5, 118, 0, 0, 280, 281, 5, 101, 0, 0, 281, 282, 5, 114,
		0, 0, 282, 6, 1, 0, 0, 0, 283, 284, 5, 105, 0, 0, 284, 285, 5, 102, 0,
		0, 285, 8, 1, 0, 0, 0, 286, 287, 5, 101, 0, 0, 287, 288, 5, 108, 0, 0,
		288, 289, 5, 105, 0, 0, 289, 290, 5, 102, 0, 0, 290, 10, 1, 0, 0, 0, 291,
		292, 5, 101, 0, 0, 292, 293, 5, 108, 0, 0, 293, 294, 5, 115, 0, 0, 294,
		295, 5, 101, 0, 0, 295, 12, 1, 0, 0, 0, 296, 297, 5, 115, 0, 0, 297, 298,
		5, 119, 0, 0, 298, 299, 5, 105, 0, 0, 299, 300, 5, 116, 0, 0, 300, 301,
		5, 99, 0, 0, 301, 302, 5, 104, 0, 0, 302, 14, 1, 0, 0, 0, 303, 304, 5,
		99, 0, 0, 304, 305, 5, 97, 0, 0, 305, 306, 5, 115, 0, 0, 306, 307, 5, 101,
		0, 0, 307, 16, 1, 0, 0, 0, 308, 309, 5, 100, 0, 0, 309, 310, 5, 101, 0,
		0, 310, 311, 5, 102, 0, 0, 311, 312, 5, 97, 0, 0, 312, 313, 5, 117, 0,
		0, 313, 314, 5, 108, 0, 0, 314, 315, 5, 116, 0, 0, 315, 18, 1, 0, 0, 0,
		316, 317, 5, 102, 0, 0, 317, 318, 5, 111, 0, 0, 318, 319, 5, 114, 0, 0,
		319, 20, 1, 0, 0, 0, 320, 321, 5, 99, 0, 0, 321, 322, 5, 111, 0, 0, 322,
		323, 5, 110, 0, 0, 323, 324, 5, 116, 0, 0, 324, 325, 5, 105, 0, 0, 325,
		326, 5, 110, 0, 0, 326, 327, 5, 117, 0, 0, 327, 328, 5, 101, 0, 0, 328,
		22, 1, 0, 0, 0, 329, 330, 5, 98, 0, 0, 330, 331, 5, 114, 0, 0, 331, 332,
		5, 101, 0, 0, 332, 333, 5, 97, 0, 0, 333, 334, 5, 107, 0, 0, 334, 24, 1,
		0, 0, 0, 335, 336, 5, 114, 0, 0, 336, 337, 5, 101, 0, 0, 337, 338, 5, 116,
		0, 0, 338, 339, 5, 117, 0, 0, 339, 340, 5, 114, 0, 0, 340, 341, 5, 110,
		0, 0, 341, 26, 1, 0, 0, 0, 342, 343, 5, 105, 0, 0, 343, 344, 5, 110, 0,
		0, 344, 345, 5, 99, 0, 0, 345, 346, 5, 108, 0, 0, 346, 347, 5, 117, 0,
		0, 347, 348, 5, 100, 0, 0, 348, 349, 5, 101, 0, 0, 349, 28, 1, 0, 0, 0,
		350, 351, 5, 116, 0, 0, 351, 352, 5, 114, 0, 0, 352, 353, 5, 121, 0, 0,
		353, 30, 1, 0, 0, 0, 354, 355, 5, 99, 0, 0, 355, 356, 5, 97, 0, 0, 356,
		357, 5, 116, 0, 0, 357, 358, 5, 99, 0, 0, 358, 359, 5, 104, 0, 0, 359,
		32, 1, 0, 0, 0, 360, 361, 5, 102, 0, 0, 361, 362, 5, 105, 0, 0, 362, 363,
		5, 110, 0, 0, 363, 364, 5, 97, 0, 0, 364, 365, 5, 108, 0, 0, 365, 366,
		5, 108, 0, 0, 366, 367, 5, 121, 0, 0, 367, 34, 1, 0, 0, 0, 368, 369, 5,
		105, 0, 0, 369, 370, 5, 109, 0, 0, 370, 371, 5, 112, 0, 0, 371, 372, 5,
		111, 0, 0, 372, 373, 5, 114, 0, 0, 373, 374, 5, 116, 0, 0, 374, 375, 5,
		109, 0, 0, 375, 376, 5, 111, 0, 0, 376, 377, 5, 100, 0, 0, 377, 36, 1,
		0, 0, 0, 378, 379, 5, 97, 0, 0, 379, 380, 5, 115, 0, 0, 380, 38, 1, 0,
		0, 0, 381, 382, 5, 101, 0, 0, 382, 383, 5, 120, 0, 0, 383, 384, 5, 112,
		0, 0, 384, 385, 5, 111, 0, 0, 385, 386, 5, 114, 0, 0, 386, 387, 5, 116,
		0, 0, 387, 40, 1, 0, 0, 0, 388, 389, 5, 100, 0, 0, 389, 390, 5, 101, 0,
		0, 390, 391, 5, 102, 0, 0, 391, 392, 5, 101, 0, 0, 392, 393, 5, 114, 0,
		0, 393, 42, 1, 0, 0, 0, 394, 395, 5, 103, 0, 0, 395, 396, 5, 111, 0, 0,
		396, 44, 1, 0, 0, 0, 397, 398, 5, 114, 0, 0, 398, 399, 5, 97, 0, 0, 399,
		400, 5, 110, 0, 0, 400, 401, 5, 103, 0, 0, 401, 402, 5, 101, 0, 0, 402,
		46, 1, 0, 0, 0, 403, 404, 5, 102, 0, 0, 404, 405, 5, 117, 0, 0, 405, 406,
		5, 110, 0, 0, 406, 421, 5, 99, 0, 0, 407, 408, 5, 102, 0, 0, 408, 421,
		5, 110, 0, 0, 409, 410, 5, 100, 0, 0, 410, 411, 5, 101, 0, 0, 411, 421,
		5, 102, 0, 0, 412, 413, 5, 102, 0, 0, 413, 414, 5, 117, 0, 0, 414, 415,
		5, 110, 0, 0, 415, 416, 5, 99, 0, 0, 416, 417, 5, 116, 0, 0, 417, 418,
		5, 105, 0, 0, 418, 419, 5, 111, 0, 0, 419, 421, 5, 110, 0, 0, 420, 403,
		1, 0, 0, 0, 420, 407, 1, 0, 0, 0, 420, 409, 1, 0, 0, 0, 420, 412, 1, 0,
		0, 0, 421, 48, 1, 0, 0, 0, 422, 423, 5, 109, 0, 0, 423, 424, 5, 97, 0,
		0, 424, 425, 5, 112, 0, 0, 425, 50, 1, 0, 0, 0, 426, 427, 5, 99, 0, 0,
		427, 428, 5, 104, 0, 0, 428, 429, 5, 97, 0, 0, 429, 430, 5, 110, 0, 0,
		430, 52, 1, 0, 0, 0, 431, 432, 5, 99, 0, 0, 432, 433, 5, 108, 0, 0, 433,
		434, 5, 97, 0, 0, 434, 435, 5, 115, 0, 0, 435, 436, 5, 115, 0, 0, 436,
		54, 1, 0, 0, 0, 437, 438, 5, 110, 0, 0, 438, 439, 5, 101, 0, 0, 439, 440,
		5, 119, 0, 0, 440, 56, 1, 0, 0, 0, 441, 442, 5, 109, 0, 0, 442, 443, 5,
		97, 0, 0, 443, 444, 5, 107, 0, 0, 444, 445, 5, 101, 0, 0, 445, 58, 1, 0,
		0, 0, 446, 447, 5, 116, 0, 0, 447, 448, 5, 114, 0, 0, 448, 449, 5, 117,
		0, 0, 449, 450, 5, 101, 0, 0, 450, 60, 1, 0, 0, 0, 451, 452, 5, 102, 0,
		0, 452, 453, 5, 97, 0, 0, 453, 454, 5, 108, 0, 0, 454, 455, 5, 115, 0,
		0, 455, 456, 5, 101, 0, 0, 456, 62, 1, 0, 0, 0, 457, 458, 5, 105, 0, 0,
		458, 459, 5, 110, 0, 0, 459, 64, 1, 0, 0, 0, 460, 461, 5, 110, 0, 0, 461,
		462, 5, 111, 0, 0, 462, 463, 5, 116, 0, 0, 463, 66, 1, 0, 0, 0, 464, 465,
		5, 97, 0, 0, 465, 466, 5, 115, 0, 0, 466, 467, 5, 115, 0, 0, 467, 468,
		5, 101, 0, 0, 468, 469, 5, 114, 0, 0, 469, 470, 5, 116, 0, 0, 470, 68,
		1, 0, 0, 0, 471, 472, 5, 118, 0, 0, 472, 473, 5, 97, 0, 0, 473, 474, 5,
		114, 0, 0, 474, 70, 1, 0, 0, 0, 475, 476, 5, 117, 0, 0, 476, 477, 5, 105,
		0, 0, 477, 478, 5, 110, 0, 0, 478, 558, 5, 116, 0, 0, 479, 480, 5, 117,
		0, 0, 480, 481, 5, 105, 0, 0, 481, 482, 5, 110, 0, 0, 482, 483, 5, 116,
		0, 0, 483, 558, 5, 56, 0, 0, 484, 485, 5, 98, 0, 0, 485, 486, 5, 121, 0,
		0, 486, 487, 5, 116, 0, 0, 487, 558, 5, 101, 0, 0, 488, 489, 5, 117, 0,
		0, 489, 490, 5, 105, 0, 0, 490, 491, 5, 110, 0, 0, 491, 492, 5, 116, 0,
		0, 492, 493, 5, 49, 0, 0, 493, 558, 5, 54, 0, 0, 494, 495, 5, 117, 0, 0,
		495, 496, 5, 105, 0, 0, 496, 497, 5, 110, 0, 0, 497, 498, 5, 116, 0, 0,
		498, 499, 5, 51, 0, 0, 499, 558, 5, 50, 0, 0, 500, 501, 5, 117, 0, 0, 501,
		502, 5, 105, 0, 0, 502, 503, 5, 110, 0, 0, 503, 504, 5, 116, 0, 0, 504,
		505, 5, 54, 0, 0, 505, 558, 5, 52, 0, 0, 506, 507, 5, 105, 0, 0, 507, 508,
		5, 110, 0, 0, 508, 558, 5, 116, 0, 0, 509, 510, 5, 105, 0, 0, 510, 511,
		5, 110, 0, 0, 511, 512, 5, 116, 0, 0, 512, 558, 5, 56, 0, 0, 513, 514,
		5, 105, 0, 0, 514, 515, 5, 110, 0, 0, 515, 516, 5, 116, 0, 0, 516, 517,
		5, 49, 0, 0, 517, 558, 5, 54, 0, 0, 518, 519, 5, 105, 0, 0, 519, 520, 5,
		110, 0, 0, 520, 521, 5, 116, 0, 0, 521, 522, 5, 51, 0, 0, 522, 558, 5,
		50, 0, 0, 523, 524, 5, 105, 0, 0, 524, 525, 5, 110, 0, 0, 525, 526, 5,
		116, 0, 0, 526, 527, 5, 54, 0, 0, 527, 558, 5, 52, 0, 0, 528, 529, 5, 98,
		0, 0, 529, 530, 5, 111, 0, 0, 530, 531, 5, 111, 0, 0, 531, 558, 5, 108,
		0, 0, 532, 533, 5, 102, 0, 0, 533, 534, 5, 108, 0, 0, 534, 535, 5, 111,
		0, 0, 535, 536, 5, 97, 0, 0, 536, 558, 5, 116, 0, 0, 537, 538, 5, 102,
		0, 0, 538, 539, 5, 108, 0, 0, 539, 540, 5, 111, 0, 0, 540, 541, 5, 97,
		0, 0, 541, 542, 5, 116, 0, 0, 542, 543, 5, 54, 0, 0, 543, 558, 5, 52, 0,
		0, 544, 545, 5, 100, 0, 0, 545, 546, 5, 111, 0, 0, 546, 547, 5, 117, 0,
		0, 547, 548, 5, 98, 0, 0, 548, 549, 5, 108, 0, 0, 549, 558, 5, 101, 0,
		0, 550, 551, 5, 115, 0, 0, 551, 552, 5, 116, 0, 0, 552, 553, 5, 114, 0,
		0, 553, 554, 5, 105, 0, 0, 554, 555, 5, 110, 0, 0, 555, 558, 5, 103, 0,
		0, 556, 558, 3, 69, 33, 0, 557, 475, 1, 0, 0, 0, 557, 479, 1, 0, 0, 0,
		557, 484, 1, 0, 0, 0, 557, 488, 1, 0, 0, 0, 557, 494, 1, 0, 0, 0, 557,
		500, 1, 0, 0, 0, 557, 506, 1, 0, 0, 0, 557, 509, 1, 0, 0, 0, 557, 513,
		1, 0, 0, 0, 557, 518, 1, 0, 0, 0, 557, 523, 1, 0, 0, 0, 557, 528, 1, 0,
		0, 0, 557, 532, 1, 0, 0, 0, 557, 537, 1, 0, 0, 0, 557, 544, 1, 0, 0, 0,
		557, 550, 1, 0, 0, 0, 557, 556, 1, 0, 0, 0, 558, 72, 1, 0, 0, 0, 559, 560,
		5, 117, 0, 0, 560, 561, 5, 110, 0, 0, 561, 562, 5, 100, 0, 0, 562, 563,
		5, 101, 0, 0, 563, 564, 5, 102, 0, 0, 564, 565, 5, 105, 0, 0, 565, 566,
		5, 110, 0, 0, 566, 567, 5, 101, 0, 0, 567, 568, 5, 100, 0, 0, 568, 74,
		1, 0, 0, 0, 569, 570, 5, 102, 0, 0, 570, 571, 5, 97, 0, 0, 571, 572, 5,
		108, 0, 0, 572, 573, 5, 108, 0, 0, 573, 574, 5, 116, 0, 0, 574, 575, 5,
		104, 0, 0, 575, 576, 5, 114, 0, 0, 576, 577, 5, 111, 0, 0, 577, 578, 5,
		117, 0, 0, 578, 579, 5, 103, 0, 0, 579, 580, 5, 104, 0, 0, 580, 76, 1,
		0, 0, 0, 581, 582, 5, 110, 0, 0, 582, 583, 5, 105, 0, 0, 583, 584, 5, 108,
		0, 0, 584, 78, 1, 0, 0, 0, 585, 589, 7, 0, 0, 0, 586, 588, 7, 1, 0, 0,
		587, 586, 1, 0, 0, 0, 588, 591, 1, 0, 0, 0, 589, 587, 1, 0, 0, 0, 589,
		590, 1, 0, 0, 0, 590, 80, 1, 0, 0, 0, 591, 589, 1, 0, 0, 0, 592, 593, 5,
		36, 0, 0, 593, 597, 7, 0, 0, 0, 594, 596, 7, 1, 0, 0, 595, 594, 1, 0, 0,
		0, 596, 599, 1, 0, 0, 0, 597, 595, 1, 0, 0, 0, 597, 598, 1, 0, 0, 0, 598,
		82, 1, 0, 0, 0, 599, 597, 1, 0, 0, 0, 600, 601, 5, 42, 0, 0, 601, 84, 1,
		0, 0, 0, 602, 603, 5, 47, 0, 0, 603, 86, 1, 0, 0, 0, 604, 605, 5, 37, 0,
		0, 605, 88, 1, 0, 0, 0, 606, 607, 5, 60, 0, 0, 607, 608, 5, 60, 0, 0, 608,
		90, 1, 0, 0, 0, 609, 610, 5, 60, 0, 0, 610, 92, 1, 0, 0, 0, 611, 612, 5,
		62, 0, 0, 612, 613, 5, 62, 0, 0, 613, 94, 1, 0, 0, 0, 614, 615, 5, 62,
		0, 0, 615, 96, 1, 0, 0, 0, 616, 617, 5, 38, 0, 0, 617, 98, 1, 0, 0, 0,
		618, 619, 5, 38, 0, 0, 619, 620, 5, 94, 0, 0, 620, 100, 1, 0, 0, 0, 621,
		622, 5, 43, 0, 0, 622, 102, 1, 0, 0, 0, 623, 624, 5, 45, 0, 0, 624, 104,
		1, 0, 0, 0, 625, 626, 5, 94, 0, 0, 626, 106, 1, 0, 0, 0, 627, 628, 5, 124,
		0, 0, 628, 108, 1, 0, 0, 0, 629, 630, 5, 61, 0, 0, 630, 631, 5, 61, 0,
		0, 631, 110, 1, 0, 0, 0, 632, 633, 5, 60, 0, 0, 633, 634, 5, 61, 0, 0,
		634, 112, 1, 0, 0, 0, 635, 636, 5, 62, 0, 0, 636, 637, 5, 61, 0, 0, 637,
		114, 1, 0, 0, 0, 638, 639, 5, 33, 0, 0, 639, 640, 5, 61, 0, 0, 640, 116,
		1, 0, 0, 0, 641, 642, 5, 60, 0, 0, 642, 643, 5, 45, 0, 0, 643, 118, 1,
		0, 0, 0, 644, 645, 5, 38, 0, 0, 645, 646, 5, 38, 0, 0, 646, 120, 1, 0,
		0, 0, 647, 648, 5, 124, 0, 0, 648, 649, 5, 124, 0, 0, 649, 122, 1, 0, 0,
		0, 650, 651, 5, 63, 0, 0, 651, 124, 1, 0, 0, 0, 652, 653, 5, 58, 0, 0,
		653, 126, 1, 0, 0, 0, 654, 655, 5, 91, 0, 0, 655, 128, 1, 0, 0, 0, 656,
		657, 5, 93, 0, 0, 657, 130, 1, 0, 0, 0, 658, 659, 5, 40, 0, 0, 659, 132,
		1, 0, 0, 0, 660, 661, 5, 41, 0, 0, 661, 134, 1, 0, 0, 0, 662, 663, 5, 123,
		0, 0, 663, 136, 1, 0, 0, 0, 664, 665, 5, 125, 0, 0, 665, 666, 4, 67, 0,
		0, 666, 667, 1, 0, 0, 0, 667, 668, 6, 67, 0, 0, 668, 138, 1, 0, 0, 0, 669,
		670, 5, 125, 0, 0, 670, 140, 1, 0, 0, 0, 671, 672, 5, 44, 0, 0, 672, 142,
		1, 0, 0, 0, 673, 674, 5, 61, 0, 0, 674, 144, 1, 0, 0, 0, 675, 676, 5, 126,
		0, 0, 676, 146, 1, 0, 0, 0, 677, 678, 5, 58, 0, 0, 678, 679, 5, 61, 0,
		0, 679, 148, 1, 0, 0, 0, 680, 681, 5, 43, 0, 0, 681, 682, 5, 43, 0, 0,
		682, 150, 1, 0, 0, 0, 683, 684, 5, 45, 0, 0, 684, 685, 5, 45, 0, 0, 685,
		152, 1, 0, 0, 0, 686, 687, 5, 43, 0, 0, 687, 688, 5, 61, 0, 0, 688, 154,
		1, 0, 0, 0, 689, 690, 5, 45, 0, 0, 690, 691, 5, 61, 0, 0, 691, 156, 1,
		0, 0, 0, 692, 693, 5, 42, 0, 0, 693, 694, 5, 61, 0, 0, 694, 158, 1, 0,
		0, 0, 695, 696, 5, 47, 0, 0, 696, 697, 5, 61, 0, 0, 697, 160, 1, 0, 0,
		0, 698, 699, 5, 37, 0, 0, 699, 700, 5, 61, 0, 0, 700, 162, 1, 0, 0, 0,
		701, 702, 5, 94, 0, 0, 702, 703, 5, 61, 0, 0, 703, 164, 1, 0, 0, 0, 704,
		705, 5, 60, 0, 0, 705, 706, 5, 60, 0, 0, 706, 707, 5, 61, 0, 0, 707, 166,
		1, 0, 0, 0, 708, 709, 5, 62, 0, 0, 709, 710, 5, 62, 0, 0, 710, 711, 5,
		61, 0, 0, 711, 168, 1, 0, 0, 0, 712, 713, 5, 38, 0, 0, 713, 714, 5, 61,
		0, 0, 714, 170, 1, 0, 0, 0, 715, 716, 5, 124, 0, 0, 716, 717, 5, 61, 0,
		0, 717, 172, 1, 0, 0, 0, 718, 719, 5, 38, 0, 0, 719, 720, 5, 94, 0, 0,
		720, 721, 5, 61, 0, 0, 721, 174, 1, 0, 0, 0, 722, 723, 5, 59, 0, 0, 723,
		176, 1, 0, 0, 0, 724, 725, 5, 46, 0, 0, 725, 726, 5, 46, 0, 0, 726, 727,
		5, 46, 0, 0, 727, 178, 1, 0, 0, 0, 728, 729, 5, 61, 0, 0, 729, 730, 5,
		62, 0, 0, 730, 180, 1, 0, 0, 0, 731, 732, 5, 60, 0, 0, 732, 733, 5, 62,
		0, 0, 733, 182, 1, 0, 0, 0, 734, 735, 5, 33, 0, 0, 735, 184, 1, 0, 0, 0,
		736, 737, 5, 46, 0, 0, 737, 186, 1, 0, 0, 0, 738, 740, 7, 2, 0, 0, 739,
		738, 1, 0, 0, 0, 740, 741, 1, 0, 0, 0, 741, 739, 1, 0, 0, 0, 741, 742,
		1, 0, 0, 0, 742, 743, 1, 0, 0, 0, 743, 744, 6, 92, 1, 0, 744, 188, 1, 0,
		0, 0, 745, 746, 5, 47, 0, 0, 746, 747, 5, 42, 0, 0, 747, 190, 1, 0, 0,
		0, 748, 749, 5, 42, 0, 0, 749, 750, 5, 47, 0, 0, 750, 192, 1, 0, 0, 0,
		751, 752, 5, 96, 0, 0, 752, 194, 1, 0, 0, 0, 753, 754, 5, 47, 0, 0, 754,
		755, 5, 42, 0, 0, 755, 759, 1, 0, 0, 0, 756, 758, 9, 0, 0, 0, 757, 756,
		1, 0, 0, 0, 758, 761, 1, 0, 0, 0, 759, 760, 1, 0, 0, 0, 759, 757, 1, 0,
		0, 0, 760, 762, 1, 0, 0, 0, 761, 759, 1, 0, 0, 0, 762, 763, 5, 42, 0, 0,
		763, 764, 5, 47, 0, 0, 764, 196, 1, 0, 0, 0, 765, 766, 5, 47, 0, 0, 766,
		769, 5, 47, 0, 0, 767, 769, 5, 35, 0, 0, 768, 765, 1, 0, 0, 0, 768, 767,
		1, 0, 0, 0, 769, 773, 1, 0, 0, 0, 770, 772, 8, 3, 0, 0, 771, 770, 1, 0,
		0, 0, 772, 775, 1, 0, 0, 0, 773, 771, 1, 0, 0, 0, 773, 774, 1, 0, 0, 0,
		774, 198, 1, 0, 0, 0, 775, 773, 1, 0, 0, 0, 776, 777, 5, 10, 0, 0, 777,
		200, 1, 0, 0, 0, 778, 792, 5, 59, 0, 0, 779, 780, 5, 47, 0, 0, 780, 781,
		5, 42, 0, 0, 781, 785, 1, 0, 0, 0, 782, 784, 9, 0, 0, 0, 783, 782, 1, 0,
		0, 0, 784, 787, 1, 0, 0, 0, 785, 786, 1, 0, 0, 0, 785, 783, 1, 0, 0, 0,
		786, 788, 1, 0, 0, 0, 787, 785, 1, 0, 0, 0, 788, 789, 5, 42, 0, 0, 789,
		792, 5, 47, 0, 0, 790, 792, 5, 0, 0, 1, 791, 778, 1, 0, 0, 0, 791, 779,
		1, 0, 0, 0, 791, 790, 1, 0, 0, 0, 792, 202, 1, 0, 0, 0, 793, 798, 3, 235,
		116, 0, 794, 798, 3, 229, 113, 0, 795, 798, 3, 227, 112, 0, 796, 798, 3,
		231, 114, 0, 797, 793, 1, 0, 0, 0, 797, 794, 1, 0, 0, 0, 797, 795, 1, 0,
		0, 0, 797, 796, 1, 0, 0, 0, 798, 204, 1, 0, 0, 0, 799, 800, 3, 235, 116,
		0, 800, 802, 5, 46, 0, 0, 801, 803, 7, 4, 0, 0, 802, 801, 1, 0, 0, 0, 803,
		804, 1, 0, 0, 0, 804, 802, 1, 0, 0, 0, 804, 805, 1, 0, 0, 0, 805, 813,
		1, 0, 0, 0, 806, 808, 5, 46, 0, 0, 807, 809, 7, 4, 0, 0, 808, 807, 1, 0,
		0, 0, 809, 810, 1, 0, 0, 0, 810, 808, 1, 0, 0, 0, 810, 811, 1, 0, 0, 0,
		811, 813, 1, 0, 0, 0, 812, 799, 1, 0, 0, 0, 812, 806, 1, 0, 0, 0, 813,
		206, 1, 0, 0, 0, 814, 815, 5, 102, 0, 0, 815, 816, 5, 34, 0, 0, 816, 817,
		1, 0, 0, 0, 817, 818, 6, 102, 2, 0, 818, 819, 1, 0, 0, 0, 819, 820, 6,
		102, 3, 0, 820, 208, 1, 0, 0, 0, 821, 822, 5, 102, 0, 0, 822, 823, 5, 96,
		0, 0, 823, 824, 1, 0, 0, 0, 824, 825, 6, 103, 4, 0, 825, 826, 1, 0, 0,
		0, 826, 827, 6, 103, 5, 0, 827, 210, 1, 0, 0, 0, 828, 833, 3, 259, 128,
		0, 829, 833, 3, 263, 130, 0, 830, 833, 3, 265, 131, 0, 831, 833, 3, 261,
		129, 0, 832, 828, 1, 0, 0, 0, 832, 829, 1, 0, 0, 0, 832, 830, 1, 0, 0,
		0, 832, 831, 1, 0, 0, 0, 833, 212, 1, 0, 0, 0, 834, 835, 5, 39, 0, 0, 835,
		836, 3, 251, 124, 0, 836, 837, 5, 39, 0, 0, 837, 214, 1, 0, 0, 0, 838,
		839, 5, 34, 0, 0, 839, 840, 6, 106, 6, 0, 840, 841, 1, 0, 0, 0, 841, 842,
		6, 106, 0, 0, 842, 216, 1, 0, 0, 0, 843, 849, 8, 5, 0, 0, 844, 845, 5,
		92, 0, 0, 845, 849, 3, 237, 117, 0, 846, 847, 5, 92, 0, 0, 847, 849, 5,
		36, 0, 0, 848, 843, 1, 0, 0, 0, 848, 844, 1, 0, 0, 0, 848, 846, 1, 0, 0,
		0, 849, 218, 1, 0, 0, 0, 850, 851, 5, 36, 0, 0, 851, 852, 5, 123, 0, 0,
		852, 853, 1, 0, 0, 0, 853, 854, 6, 108, 7, 0, 854, 220, 1, 0, 0, 0, 855,
		856, 5, 96, 0, 0, 856, 857, 6, 109, 8, 0, 857, 858, 1, 0, 0, 0, 858, 859,
		6, 109, 0, 0, 859, 222, 1, 0, 0, 0, 860, 868, 8, 6, 0, 0, 861, 862, 5,
		92, 0, 0, 862, 868, 3, 237, 117, 0, 863, 864, 5, 92, 0, 0, 864, 868, 5,
		36, 0, 0, 865, 866, 5, 92, 0, 0, 866, 868, 5, 96, 0, 0, 867, 860, 1, 0,
		0, 0, 867, 861, 1, 0, 0, 0, 867, 863, 1, 0, 0, 0, 867, 865, 1, 0, 0, 0,
		868, 224, 1, 0, 0, 0, 869, 870, 5, 36, 0, 0, 870, 871, 5, 123, 0, 0, 871,
		872, 1, 0, 0, 0, 872, 873, 6, 111, 7, 0, 873, 226, 1, 0, 0, 0, 874, 875,
		5, 48, 0, 0, 875, 877, 7, 7, 0, 0, 876, 878, 3, 233, 115, 0, 877, 876,
		1, 0, 0, 0, 878, 879, 1, 0, 0, 0, 879, 877, 1, 0, 0, 0, 879, 880, 1, 0,
		0, 0, 880, 228, 1, 0, 0, 0, 881, 883, 5, 48, 0, 0, 882, 884, 7, 8, 0, 0,
		883, 882, 1, 0, 0, 0, 884, 885, 1, 0, 0, 0, 885, 883, 1, 0, 0, 0, 885,
		886, 1, 0, 0, 0, 886, 895, 1, 0, 0, 0, 887, 888, 5, 48, 0, 0, 888, 890,
		7, 9, 0, 0, 889, 891, 7, 8, 0, 0, 890, 889, 1, 0, 0, 0, 891, 892, 1, 0,
		0, 0, 892, 890, 1, 0, 0, 0, 892, 893, 1, 0, 0, 0, 893, 895, 1, 0, 0, 0,
		894, 881, 1, 0, 0, 0, 894, 887, 1, 0, 0, 0, 895, 230, 1, 0, 0, 0, 896,
		897, 5, 48, 0, 0, 897, 899, 7, 10, 0, 0, 898, 900, 7, 11, 0, 0, 899, 898,
		1, 0, 0, 0, 900, 901, 1, 0, 0, 0, 901, 899, 1, 0, 0, 0, 901, 902, 1, 0,
		0, 0, 902, 232, 1, 0, 0, 0, 903, 904, 7, 12, 0, 0, 904, 234, 1, 0, 0, 0,
		905, 914, 5, 48, 0, 0, 906, 910, 7, 13, 0, 0, 907, 909, 7, 4, 0, 0, 908,
		907, 1, 0, 0, 0, 909, 912, 1, 0, 0, 0, 910, 908, 1, 0, 0, 0, 910, 911,
		1, 0, 0, 0, 911, 914, 1, 0, 0, 0, 912, 910, 1, 0, 0, 0, 913, 905, 1, 0,
		0, 0, 913, 906, 1, 0, 0, 0, 914, 236, 1, 0, 0, 0, 915, 919, 3, 239, 118,
		0, 916, 919, 5, 48, 0, 0, 917, 919, 3, 241, 119, 0, 918, 915, 1, 0, 0,
		0, 918, 916, 1, 0, 0, 0, 918, 917, 1, 0, 0, 0, 919, 238, 1, 0, 0, 0, 920,
		923, 3, 243, 120, 0, 921, 923, 3, 245, 121, 0, 922, 920, 1, 0, 0, 0, 922,
		921, 1, 0, 0, 0, 923, 240, 1, 0, 0, 0, 924, 925, 5, 120, 0, 0, 925, 926,
		3, 233, 115, 0, 926, 927, 3, 233, 115, 0, 927, 242, 1, 0, 0, 0, 928, 929,
		7, 14, 0, 0, 929, 244, 1, 0, 0, 0, 930, 931, 8, 15, 0, 0, 931, 246, 1,
		0, 0, 0, 932, 935, 3, 243, 120, 0, 933, 935, 7, 16, 0, 0, 934, 932, 1,
		0, 0, 0, 934, 933, 1, 0, 0, 0, 935, 248, 1, 0, 0, 0, 936, 940, 8, 17, 0,
		0, 937, 938, 5, 92, 0, 0, 938, 940, 3, 237, 117, 0, 939, 936, 1, 0, 0,
		0, 939, 937, 1, 0, 0, 0, 940, 250, 1, 0, 0, 0, 941, 945, 8, 18, 0, 0, 942,
		943, 5, 92, 0, 0, 943, 945, 3, 237, 117, 0, 944, 941, 1, 0, 0, 0, 944,
		942, 1, 0, 0, 0, 945, 252, 1, 0, 0, 0, 946, 947, 8, 19, 0, 0, 947, 254,
		1, 0, 0, 0, 948, 950, 3, 267, 132, 0, 949, 948, 1, 0, 0, 0, 949, 950, 1,
		0, 0, 0, 950, 951, 1, 0, 0, 0, 951, 952, 5, 34, 0, 0, 952, 256, 1, 0, 0,
		0, 953, 955, 3, 267, 132, 0, 954, 953, 1, 0, 0, 0, 954, 955, 1, 0, 0, 0,
		955, 956, 1, 0, 0, 0, 956, 957, 5, 96, 0, 0, 957, 258, 1, 0, 0, 0, 958,
		960, 3, 267, 132, 0, 959, 958, 1, 0, 0, 0, 959, 960, 1, 0, 0, 0, 960, 961,
		1, 0, 0, 0, 961, 965, 5, 34, 0, 0, 962, 964, 3, 249, 123, 0, 963, 962,
		1, 0, 0, 0, 964, 967, 1, 0, 0, 0, 965, 963, 1, 0, 0, 0, 965, 966, 1, 0,
		0, 0, 966, 968, 1, 0, 0, 0, 967, 965, 1, 0, 0, 0, 968, 969, 5, 34, 0, 0,
		969, 260, 1, 0, 0, 0, 970, 972, 3, 267, 132, 0, 971, 970, 1, 0, 0, 0, 971,
		972, 1, 0, 0, 0, 972, 973, 1, 0, 0, 0, 973, 974, 5, 39, 0, 0, 974, 988,
		5, 39, 0, 0, 975, 977, 3, 267, 132, 0, 976, 975, 1, 0, 0, 0, 976, 977,
		1, 0, 0, 0, 977, 978, 1, 0, 0, 0, 978, 979, 5, 39, 0, 0, 979, 981, 3, 251,
		124, 0, 980, 982, 3, 251, 124, 0, 981, 980, 1, 0, 0, 0, 982, 983, 1, 0,
		0, 0, 983, 981, 1, 0, 0, 0, 983, 984, 1, 0, 0, 0, 984, 985, 1, 0, 0, 0,
		985, 986, 5, 39, 0, 0, 986, 988, 1, 0, 0, 0, 987, 971, 1, 0, 0, 0, 987,
		976, 1, 0, 0, 0, 988, 262, 1, 0, 0, 0, 989, 991, 3, 267, 132, 0, 990, 989,
		1, 0, 0, 0, 990, 991, 1, 0, 0, 0, 991, 992, 1, 0, 0, 0, 992, 996, 5, 96,
		0, 0, 993, 995, 3, 253, 125, 0, 994, 993, 1, 0, 0, 0, 995, 998, 1, 0, 0,
		0, 996, 994, 1, 0, 0, 0, 996, 997, 1, 0, 0, 0, 997, 999, 1, 0, 0, 0, 998,
		996, 1, 0, 0, 0, 999, 1000, 5, 96, 0, 0, 1000, 264, 1, 0, 0, 0, 1001, 1002,
		5, 48, 0, 0, 1002, 1003, 5, 104, 0, 0, 1003, 1007, 1, 0, 0, 0, 1004, 1005,
		3, 233, 115, 0, 1005, 1006, 3, 233, 115, 0, 1006, 1008, 1, 0, 0, 0, 1007,
		1004, 1, 0, 0, 0, 1008, 1009, 1, 0, 0, 0, 1009, 1007, 1, 0, 0, 0, 1009,
		1010, 1, 0, 0, 0, 1010, 266, 1, 0, 0, 0, 1011, 1012, 7, 20, 0, 0, 1012,
		268, 1, 0, 0, 0, 43, 0, 1, 2, 420, 557, 589, 597, 741, 759, 768, 773, 785,
		791, 797, 804, 810, 812, 832, 848, 867, 879, 885, 892, 894, 901, 910, 913,
		918, 922, 934, 939, 944, 949, 954, 959, 965, 971, 976, 983, 987, 990, 996,
		1009, 9, 4, 0, 0, 6, 0, 0, 1, 102, 0, 5, 1, 0, 1, 103, 1, 5, 2, 0, 1, 106,
		2, 5, 0, 0, 1, 109, 3,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// YaklangLexerInit initializes any static state used to implement YaklangLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewYaklangLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func YaklangLexerInit() {
	staticData := &yaklanglexerLexerStaticData
	staticData.once.Do(yaklanglexerLexerInit)
}

// NewYaklangLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewYaklangLexer(input antlr.CharStream) *YaklangLexer {
	YaklangLexerInit()
	l := new(YaklangLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &yaklanglexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "YaklangLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// YaklangLexer tokens.
const (
	YaklangLexerPanic                                       = 1
	YaklangLexerRecover                                     = 2
	YaklangLexerIf                                          = 3
	YaklangLexerElif                                        = 4
	YaklangLexerElse                                        = 5
	YaklangLexerSwitch                                      = 6
	YaklangLexerCase                                        = 7
	YaklangLexerDefault                                     = 8
	YaklangLexerFor                                         = 9
	YaklangLexerContinue                                    = 10
	YaklangLexerBreak                                       = 11
	YaklangLexerReturn                                      = 12
	YaklangLexerInclude                                     = 13
	YaklangLexerTry                                         = 14
	YaklangLexerCatch                                       = 15
	YaklangLexerFinally                                     = 16
	YaklangLexerImportmod                                   = 17
	YaklangLexerAs                                          = 18
	YaklangLexerExport                                      = 19
	YaklangLexerDefer                                       = 20
	YaklangLexerGo                                          = 21
	YaklangLexerRange                                       = 22
	YaklangLexerFunc                                        = 23
	YaklangLexerMap                                         = 24
	YaklangLexerChan                                        = 25
	YaklangLexerClass                                       = 26
	YaklangLexerNew                                         = 27
	YaklangLexerMake                                        = 28
	YaklangLexerTrue                                        = 29
	YaklangLexerFalse                                       = 30
	YaklangLexerIn                                          = 31
	YaklangLexerNotLiteral                                  = 32
	YaklangLexerAssert                                      = 33
	YaklangLexerVar                                         = 34
	YaklangLexerVarTypeName                                 = 35
	YaklangLexerUndefinedLiteral                            = 36
	YaklangLexerFallthrough                                 = 37
	YaklangLexerNilLiteral                                  = 38
	YaklangLexerIdentifier                                  = 39
	YaklangLexerIdentifierWithDollar                        = 40
	YaklangLexerMul                                         = 41
	YaklangLexerDiv                                         = 42
	YaklangLexerMod                                         = 43
	YaklangLexerLtLt                                        = 44
	YaklangLexerLt                                          = 45
	YaklangLexerGtGt                                        = 46
	YaklangLexerGt                                          = 47
	YaklangLexerAmp                                         = 48
	YaklangLexerAmpNot                                      = 49
	YaklangLexerPlus                                        = 50
	YaklangLexerSub                                         = 51
	YaklangLexerXor                                         = 52
	YaklangLexerXand                                        = 53
	YaklangLexerEq                                          = 54
	YaklangLexerLtEq                                        = 55
	YaklangLexerGtEq                                        = 56
	YaklangLexerNeq                                         = 57
	YaklangLexerChanIn                                      = 58
	YaklangLexerLogicAnd                                    = 59
	YaklangLexerLogicOr                                     = 60
	YaklangLexerQuestion                                    = 61
	YaklangLexerColon                                       = 62
	YaklangLexerLBracket                                    = 63
	YaklangLexerRBracket                                    = 64
	YaklangLexerLParen                                      = 65
	YaklangLexerRParen                                      = 66
	YaklangLexerLBrace                                      = 67
	YaklangLexerTemplateCloseBrace                          = 68
	YaklangLexerRBrace                                      = 69
	YaklangLexerComma                                       = 70
	YaklangLexerAssignEq                                    = 71
	YaklangLexerWavy                                        = 72
	YaklangLexerColonAssignEq                               = 73
	YaklangLexerPlusPlus                                    = 74
	YaklangLexerSubSub                                      = 75
	YaklangLexerPlusEq                                      = 76
	YaklangLexerMinusEq                                     = 77
	YaklangLexerMulEq                                       = 78
	YaklangLexerDivEq                                       = 79
	YaklangLexerModEq                                       = 80
	YaklangLexerBitOrEq                                     = 81
	YaklangLexerLtLtEq                                      = 82
	YaklangLexerGtGtEq                                      = 83
	YaklangLexerAmpEq                                       = 84
	YaklangLexerBitAndEq                                    = 85
	YaklangLexerBitAndNotEq                                 = 86
	YaklangLexerSemiColon                                   = 87
	YaklangLexerEllipsis                                    = 88
	YaklangLexerEqGt                                        = 89
	YaklangLexerLtGt                                        = 90
	YaklangLexerNot                                         = 91
	YaklangLexerDot                                         = 92
	YaklangLexerWS                                          = 93
	YaklangLexerCommontStart                                = 94
	YaklangLexerCommontEnd                                  = 95
	YaklangLexerBackTickL                                   = 96
	YaklangLexerCOMMENT                                     = 97
	YaklangLexerLINE_COMMENT                                = 98
	YaklangLexerLF                                          = 99
	YaklangLexerEOS                                         = 100
	YaklangLexerIntegerLiteral                              = 101
	YaklangLexerFloatLiteral                                = 102
	YaklangLexerTemplateDoubleQuoteStringStart              = 103
	YaklangLexerTemplateBackTickStringStart                 = 104
	YaklangLexerStringLiteral                               = 105
	YaklangLexerCharacterLiteral                            = 106
	YaklangLexerTemplateDoubleQuoteStringCharacterStringEnd = 107
	YaklangLexerTemplateDoubleQuoteStringCharacter          = 108
	YaklangLexerTemplateDoubleQuoteStringStartExpression    = 109
	YaklangLexerTemplateBackTickStringCharacterStringEnd    = 110
	YaklangLexerTemplateBackTickStringCharacter             = 111
	YaklangLexerTemplateBackTickStringStartExpression       = 112
)

// YaklangLexer modes.
const (
	YaklangLexerTEMPLATE_DOUBLE_QUOTE_MODE = iota + 1
	YaklangLexerTEMPLATE_BACKTICK_MODE
)

func (l *YaklangLexer) Action(localctx antlr.RuleContext, ruleIndex, actionIndex int) {
	switch ruleIndex {
	case 102:
		l.TemplateDoubleQuoteStringStart_Action(localctx, actionIndex)

	case 103:
		l.TemplateBackTickStringStart_Action(localctx, actionIndex)

	case 106:
		l.TemplateDoubleQuoteStringCharacterStringEnd_Action(localctx, actionIndex)

	case 109:
		l.TemplateBackTickStringCharacterStringEnd_Action(localctx, actionIndex)

	default:
		panic("No registered action for: " + fmt.Sprint(ruleIndex))
	}
}

func (l *YaklangLexer) TemplateDoubleQuoteStringStart_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 0:
		this.IncreaseTemplateDepth()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *YaklangLexer) TemplateBackTickStringStart_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 1:
		this.IncreaseTemplateDepth()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *YaklangLexer) TemplateDoubleQuoteStringCharacterStringEnd_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 2:
		this.DecreaseTemplateDepth()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *YaklangLexer) TemplateBackTickStringCharacterStringEnd_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 3:
		this.DecreaseTemplateDepth()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}

func (l *YaklangLexer) Sempred(localctx antlr.RuleContext, ruleIndex, predIndex int) bool {
	switch ruleIndex {
	case 67:
		return l.TemplateCloseBrace_Sempred(localctx, predIndex)

	default:
		panic("No registered predicate for: " + fmt.Sprint(ruleIndex))
	}
}

func (p *YaklangLexer) TemplateCloseBrace_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	this := p
	_ = this

	switch predIndex {
	case 0:
		return this.IsInTemplateString()

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

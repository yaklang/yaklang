// Code generated from java-escape by ANTLR 4.11.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr/v4"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type YaklangLexer struct {
	YaklangLexerBase
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var yaklanglexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func yaklanglexerLexerInit() {
	staticData := &yaklanglexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE", "TEMPLATE_SINGLE_QUOTE_MODE", "TEMPLATE_DOUBLE_QUOTE_MODE",
		"TEMPLATE_BACKTICK_MODE", "HereDocIdentifier", "HereDoc",
	}
	staticData.literalNames = []string{
		"", "'panic'", "'recover'", "'if'", "'elif'", "'else'", "'switch'",
		"'case'", "'default'", "'for'", "'continue'", "'break'", "'return'",
		"'include'", "'try'", "'catch'", "'finally'", "'importmod'", "'as'",
		"'export'", "'defer'", "'go'", "'range'", "", "'map'", "'chan'", "'class'",
		"'new'", "'make'", "'true'", "'false'", "'in'", "'not'", "'assert'",
		"", "", "'undefined'", "'fallthrough'", "'nil'", "", "", "'*'", "'/'",
		"'%'", "'<<'", "'<'", "'>>'", "'>'", "'&'", "'&^'", "'+'", "'-'", "'^'",
		"'|'", "'=='", "'<='", "'>='", "'!='", "'<-'", "'&&'", "'||'", "'?'",
		"':'", "'['", "']'", "'('", "')'", "'{'", "", "'}'", "','", "'='", "'~'",
		"':='", "'++'", "'--'", "'+='", "'-='", "'*='", "'/='", "'%='", "'^='",
		"'<<='", "'>>='", "'&='", "'|='", "'&^='", "';'", "'...'", "'=>'", "'<>'",
		"'!'", "'.'", "", "'/*'", "'*/'", "'`'", "", "'<<<'", "", "'\\n'",
	}
	staticData.symbolicNames = []string{
		"", "Panic", "Recover", "If", "Elif", "Else", "Switch", "Case", "Default",
		"For", "Continue", "Break", "Return", "Include", "Try", "Catch", "Finally",
		"Importmod", "As", "Export", "Defer", "Go", "Range", "Func", "Map",
		"Chan", "Class", "New", "Make", "True", "False", "In", "NotLiteral",
		"Assert", "Var", "VarTypeName", "UndefinedLiteral", "Fallthrough", "NilLiteral",
		"Identifier", "IdentifierWithDollar", "Mul", "Div", "Mod", "LtLt", "Lt",
		"GtGt", "Gt", "Amp", "AmpNot", "Plus", "Sub", "Xor", "Xand", "Eq", "LtEq",
		"GtEq", "Neq", "ChanIn", "LogicAnd", "LogicOr", "Question", "Colon",
		"LBracket", "RBracket", "LParen", "RParen", "LBrace", "TemplateCloseBrace",
		"RBrace", "Comma", "AssignEq", "Wavy", "ColonAssignEq", "PlusPlus",
		"SubSub", "PlusEq", "MinusEq", "MulEq", "DivEq", "ModEq", "BitOrEq",
		"LtLtEq", "GtGtEq", "AmpEq", "BitAndEq", "BitAndNotEq", "SemiColon",
		"Ellipsis", "EqGt", "LtGt", "Not", "Dot", "WS", "CommentStart", "CommentEnd",
		"BackTickL", "COMMENT", "StartNowDoc", "LINE_COMMENT", "LF", "EOS",
		"IntegerLiteral", "FloatLiteral", "TemplateSingleQuoteStringStart",
		"TemplateDoubleQuoteStringStart", "TemplateBackTickStringStart", "StringLiteral",
		"CharacterLiteral", "TemplateSingleQuoteStringCharacterStringEnd", "TemplateSingleQuoteStringCharacter",
		"TemplateSingleQuoteStringStartExpression", "TemplateDoubleQuoteStringCharacterStringEnd",
		"TemplateDoubleQuoteStringCharacter", "TemplateDoubleQuoteStringStartExpression",
		"TemplateBackTickStringCharacterStringEnd", "TemplateBackTickStringCharacter",
		"TemplateBackTickStringStartExpression", "HereDocIdentifierName", "HereDocIdentifierBreak",
		"EndDoc", "HereDocText",
	}
	staticData.ruleNames = []string{
		"Panic", "Recover", "If", "Elif", "Else", "Switch", "Case", "Default",
		"For", "Continue", "Break", "Return", "Include", "Try", "Catch", "Finally",
		"Importmod", "As", "Export", "Defer", "Go", "Range", "Func", "Map",
		"Chan", "Class", "New", "Make", "True", "False", "In", "NotLiteral",
		"Assert", "Var", "VarTypeName", "UndefinedLiteral", "Fallthrough", "NilLiteral",
		"Identifier", "IdentifierWithDollar", "Mul", "Div", "Mod", "LtLt", "Lt",
		"GtGt", "Gt", "Amp", "AmpNot", "Plus", "Sub", "Xor", "Xand", "Eq", "LtEq",
		"GtEq", "Neq", "ChanIn", "LogicAnd", "LogicOr", "Question", "Colon",
		"LBracket", "RBracket", "LParen", "RParen", "LBrace", "TemplateCloseBrace",
		"RBrace", "Comma", "AssignEq", "Wavy", "ColonAssignEq", "PlusPlus",
		"SubSub", "PlusEq", "MinusEq", "MulEq", "DivEq", "ModEq", "BitOrEq",
		"LtLtEq", "GtGtEq", "AmpEq", "BitAndEq", "BitAndNotEq", "SemiColon",
		"Ellipsis", "EqGt", "LtGt", "Not", "Dot", "WS", "CommentStart", "CommentEnd",
		"BackTickL", "COMMENT", "StartNowDoc", "LINE_COMMENT", "LF", "EOS",
		"IntegerLiteral", "FloatLiteral", "TemplateSingleQuoteStringStart",
		"TemplateDoubleQuoteStringStart", "TemplateBackTickStringStart", "StringLiteral",
		"CharacterLiteral", "TemplateSingleQuoteStringCharacterStringEnd", "TemplateSingleQuoteStringCharacter",
		"TemplateSingleQuoteStringStartExpression", "TemplateDoubleQuoteStringCharacterStringEnd",
		"TemplateDoubleQuoteStringCharacter", "TemplateDoubleQuoteStringStartExpression",
		"TemplateBackTickStringCharacterStringEnd", "TemplateBackTickStringCharacter",
		"TemplateBackTickStringStartExpression", "HereDocIdentifierName", "HereDocIdentifierBreak",
		"EndDoc", "HereDocText", "NameString", "HexIntegerLiteral", "OctalIntegerLiteral",
		"BinaryIntegerLiteral", "HexDigit", "DecimalIntegerLiteral", "EscapeSequence",
		"CharacterEscapeSequence", "HexEscapeSequence", "SingleEscapeCharacter",
		"NonEscapeCharacter", "EscapeCharacter", "DoubleStringCharacter", "SingleStringCharacter",
		"BackTickStringCharacter", "DoubleQuoteTemplateStringLiteral", "BackTickTemplateStringLiteral",
		"DoubleQuoteStringLiteral", "SingleQuoteStringLiteral", "BackTickStringLiteral",
		"HexStringLiteral", "StringLiteralPrefix",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 121, 1110, 6, -1, 6, -1, 6, -1, 6, -1, 6, -1, 6, -1, 2, 0, 7, 0,
		2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6,
		2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12,
		7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15, 7, 15, 2, 16, 7, 16, 2, 17, 7,
		17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7, 20, 2, 21, 7, 21, 2, 22, 7, 22,
		2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25, 2, 26, 7, 26, 2, 27, 7, 27, 2,
		28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2, 31, 7, 31, 2, 32, 7, 32, 2, 33,
		7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36, 7, 36, 2, 37, 7, 37, 2, 38, 7,
		38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7, 41, 2, 42, 7, 42, 2, 43, 7, 43,
		2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46, 2, 47, 7, 47, 2, 48, 7, 48, 2,
		49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2, 52, 7, 52, 2, 53, 7, 53, 2, 54,
		7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57, 7, 57, 2, 58, 7, 58, 2, 59, 7,
		59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7, 62, 2, 63, 7, 63, 2, 64, 7, 64,
		2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67, 2, 68, 7, 68, 2, 69, 7, 69, 2,
		70, 7, 70, 2, 71, 7, 71, 2, 72, 7, 72, 2, 73, 7, 73, 2, 74, 7, 74, 2, 75,
		7, 75, 2, 76, 7, 76, 2, 77, 7, 77, 2, 78, 7, 78, 2, 79, 7, 79, 2, 80, 7,
		80, 2, 81, 7, 81, 2, 82, 7, 82, 2, 83, 7, 83, 2, 84, 7, 84, 2, 85, 7, 85,
		2, 86, 7, 86, 2, 87, 7, 87, 2, 88, 7, 88, 2, 89, 7, 89, 2, 90, 7, 90, 2,
		91, 7, 91, 2, 92, 7, 92, 2, 93, 7, 93, 2, 94, 7, 94, 2, 95, 7, 95, 2, 96,
		7, 96, 2, 97, 7, 97, 2, 98, 7, 98, 2, 99, 7, 99, 2, 100, 7, 100, 2, 101,
		7, 101, 2, 102, 7, 102, 2, 103, 7, 103, 2, 104, 7, 104, 2, 105, 7, 105,
		2, 106, 7, 106, 2, 107, 7, 107, 2, 108, 7, 108, 2, 109, 7, 109, 2, 110,
		7, 110, 2, 111, 7, 111, 2, 112, 7, 112, 2, 113, 7, 113, 2, 114, 7, 114,
		2, 115, 7, 115, 2, 116, 7, 116, 2, 117, 7, 117, 2, 118, 7, 118, 2, 119,
		7, 119, 2, 120, 7, 120, 2, 121, 7, 121, 2, 122, 7, 122, 2, 123, 7, 123,
		2, 124, 7, 124, 2, 125, 7, 125, 2, 126, 7, 126, 2, 127, 7, 127, 2, 128,
		7, 128, 2, 129, 7, 129, 2, 130, 7, 130, 2, 131, 7, 131, 2, 132, 7, 132,
		2, 133, 7, 133, 2, 134, 7, 134, 2, 135, 7, 135, 2, 136, 7, 136, 2, 137,
		7, 137, 2, 138, 7, 138, 2, 139, 7, 139, 2, 140, 7, 140, 2, 141, 7, 141,
		2, 142, 7, 142, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1,
		3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1,
		5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1,
		7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1,
		9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11,
		1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1,
		12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14,
		1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1,
		16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17,
		1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 19, 1,
		19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21,
		1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1,
		22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 3, 22,
		444, 8, 22, 1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1,
		24, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26,
		1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1,
		29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31,
		1, 31, 1, 31, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 33, 1,
		33, 1, 33, 1, 33, 1, 33, 1, 33, 3, 33, 501, 8, 33, 1, 34, 1, 34, 1, 34,
		1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1,
		34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34,
		1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1,
		34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34,
		1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1,
		34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34,
		1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1,
		34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 3, 34,
		589, 8, 34, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1,
		35, 1, 35, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36,
		1, 36, 1, 36, 1, 36, 1, 37, 1, 37, 1, 37, 1, 37, 1, 38, 1, 38, 5, 38, 619,
		8, 38, 10, 38, 12, 38, 622, 9, 38, 1, 39, 1, 39, 1, 39, 5, 39, 627, 8,
		39, 10, 39, 12, 39, 630, 9, 39, 1, 40, 1, 40, 1, 41, 1, 41, 1, 42, 1, 42,
		1, 43, 1, 43, 1, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 45, 1, 46, 1, 46, 1,
		47, 1, 47, 1, 48, 1, 48, 1, 48, 1, 49, 1, 49, 1, 50, 1, 50, 1, 51, 1, 51,
		1, 52, 1, 52, 1, 53, 1, 53, 1, 53, 1, 54, 1, 54, 1, 54, 1, 55, 1, 55, 1,
		55, 1, 56, 1, 56, 1, 56, 1, 57, 1, 57, 1, 57, 1, 58, 1, 58, 1, 58, 1, 59,
		1, 59, 1, 59, 1, 60, 1, 60, 1, 61, 1, 61, 1, 62, 1, 62, 1, 63, 1, 63, 1,
		64, 1, 64, 1, 65, 1, 65, 1, 66, 1, 66, 1, 67, 1, 67, 1, 67, 1, 67, 1, 67,
		1, 68, 1, 68, 1, 69, 1, 69, 1, 70, 1, 70, 1, 71, 1, 71, 1, 72, 1, 72, 1,
		72, 1, 73, 1, 73, 1, 73, 1, 74, 1, 74, 1, 74, 1, 75, 1, 75, 1, 75, 1, 76,
		1, 76, 1, 76, 1, 77, 1, 77, 1, 77, 1, 78, 1, 78, 1, 78, 1, 79, 1, 79, 1,
		79, 1, 80, 1, 80, 1, 80, 1, 81, 1, 81, 1, 81, 1, 81, 1, 82, 1, 82, 1, 82,
		1, 82, 1, 83, 1, 83, 1, 83, 1, 84, 1, 84, 1, 84, 1, 85, 1, 85, 1, 85, 1,
		85, 1, 86, 1, 86, 1, 87, 1, 87, 1, 87, 1, 87, 1, 88, 1, 88, 1, 88, 1, 89,
		1, 89, 1, 89, 1, 90, 1, 90, 1, 91, 1, 91, 1, 92, 4, 92, 771, 8, 92, 11,
		92, 12, 92, 772, 1, 92, 1, 92, 1, 93, 1, 93, 1, 93, 1, 94, 1, 94, 1, 94,
		1, 95, 1, 95, 1, 96, 1, 96, 1, 96, 1, 96, 5, 96, 789, 8, 96, 10, 96, 12,
		96, 792, 9, 96, 1, 96, 1, 96, 1, 96, 1, 97, 1, 97, 1, 97, 1, 97, 1, 97,
		1, 97, 1, 98, 1, 98, 1, 98, 3, 98, 806, 8, 98, 1, 98, 5, 98, 809, 8, 98,
		10, 98, 12, 98, 812, 9, 98, 1, 99, 1, 99, 1, 100, 1, 100, 1, 100, 1, 100,
		1, 100, 5, 100, 821, 8, 100, 10, 100, 12, 100, 824, 9, 100, 1, 100, 1,
		100, 1, 100, 3, 100, 829, 8, 100, 1, 101, 1, 101, 1, 101, 1, 101, 3, 101,
		835, 8, 101, 1, 102, 1, 102, 1, 102, 4, 102, 840, 8, 102, 11, 102, 12,
		102, 841, 1, 102, 1, 102, 4, 102, 846, 8, 102, 11, 102, 12, 102, 847, 3,
		102, 850, 8, 102, 1, 103, 1, 103, 1, 103, 1, 103, 1, 103, 1, 103, 1, 103,
		1, 104, 1, 104, 1, 104, 1, 104, 1, 104, 1, 104, 1, 104, 1, 105, 1, 105,
		1, 105, 1, 105, 1, 105, 1, 105, 1, 105, 1, 106, 1, 106, 1, 106, 1, 106,
		3, 106, 877, 8, 106, 1, 107, 1, 107, 1, 107, 1, 107, 1, 108, 1, 108, 1,
		108, 1, 108, 1, 108, 1, 109, 1, 109, 1, 109, 1, 109, 1, 109, 3, 109, 893,
		8, 109, 1, 110, 1, 110, 1, 110, 1, 110, 1, 110, 1, 111, 1, 111, 1, 111,
		1, 111, 1, 111, 1, 112, 1, 112, 1, 112, 1, 112, 1, 112, 3, 112, 910, 8,
		112, 1, 113, 1, 113, 1, 113, 1, 113, 1, 113, 1, 114, 1, 114, 1, 114, 1,
		114, 1, 114, 1, 115, 1, 115, 1, 115, 1, 115, 1, 115, 1, 115, 1, 115, 3,
		115, 929, 8, 115, 1, 116, 1, 116, 1, 116, 1, 116, 1, 116, 1, 117, 1, 117,
		1, 117, 1, 117, 1, 117, 1, 117, 1, 117, 1, 117, 1, 117, 3, 117, 945, 8,
		117, 1, 118, 3, 118, 948, 8, 118, 1, 118, 1, 118, 1, 118, 1, 118, 1, 118,
		1, 118, 1, 119, 3, 119, 957, 8, 119, 1, 119, 1, 119, 1, 119, 1, 119, 1,
		120, 1, 120, 1, 121, 1, 121, 5, 121, 967, 8, 121, 10, 121, 12, 121, 970,
		9, 121, 1, 122, 1, 122, 1, 122, 4, 122, 975, 8, 122, 11, 122, 12, 122,
		976, 1, 123, 1, 123, 4, 123, 981, 8, 123, 11, 123, 12, 123, 982, 1, 123,
		1, 123, 1, 123, 4, 123, 988, 8, 123, 11, 123, 12, 123, 989, 3, 123, 992,
		8, 123, 1, 124, 1, 124, 1, 124, 4, 124, 997, 8, 124, 11, 124, 12, 124,
		998, 1, 125, 1, 125, 1, 126, 1, 126, 1, 126, 5, 126, 1006, 8, 126, 10,
		126, 12, 126, 1009, 9, 126, 3, 126, 1011, 8, 126, 1, 127, 1, 127, 1, 127,
		3, 127, 1016, 8, 127, 1, 128, 1, 128, 3, 128, 1020, 8, 128, 1, 129, 1,
		129, 1, 129, 1, 129, 1, 130, 1, 130, 1, 131, 1, 131, 1, 132, 1, 132, 3,
		132, 1032, 8, 132, 1, 133, 1, 133, 1, 133, 3, 133, 1037, 8, 133, 1, 134,
		1, 134, 1, 134, 3, 134, 1042, 8, 134, 1, 135, 1, 135, 1, 136, 3, 136, 1047,
		8, 136, 1, 136, 1, 136, 1, 137, 3, 137, 1052, 8, 137, 1, 137, 1, 137, 1,
		138, 3, 138, 1057, 8, 138, 1, 138, 1, 138, 5, 138, 1061, 8, 138, 10, 138,
		12, 138, 1064, 9, 138, 1, 138, 1, 138, 1, 139, 3, 139, 1069, 8, 139, 1,
		139, 1, 139, 1, 139, 3, 139, 1074, 8, 139, 1, 139, 1, 139, 1, 139, 4, 139,
		1079, 8, 139, 11, 139, 12, 139, 1080, 1, 139, 1, 139, 3, 139, 1085, 8,
		139, 1, 140, 3, 140, 1088, 8, 140, 1, 140, 1, 140, 5, 140, 1092, 8, 140,
		10, 140, 12, 140, 1095, 9, 140, 1, 140, 1, 140, 1, 141, 1, 141, 1, 141,
		1, 141, 1, 141, 1, 141, 4, 141, 1105, 8, 141, 11, 141, 12, 141, 1106, 1,
		142, 1, 142, 2, 790, 822, 0, 143, 6, 1, 8, 2, 10, 3, 12, 4, 14, 5, 16,
		6, 18, 7, 20, 8, 22, 9, 24, 10, 26, 11, 28, 12, 30, 13, 32, 14, 34, 15,
		36, 16, 38, 17, 40, 18, 42, 19, 44, 20, 46, 21, 48, 22, 50, 23, 52, 24,
		54, 25, 56, 26, 58, 27, 60, 28, 62, 29, 64, 30, 66, 31, 68, 32, 70, 33,
		72, 34, 74, 35, 76, 36, 78, 37, 80, 38, 82, 39, 84, 40, 86, 41, 88, 42,
		90, 43, 92, 44, 94, 45, 96, 46, 98, 47, 100, 48, 102, 49, 104, 50, 106,
		51, 108, 52, 110, 53, 112, 54, 114, 55, 116, 56, 118, 57, 120, 58, 122,
		59, 124, 60, 126, 61, 128, 62, 130, 63, 132, 64, 134, 65, 136, 66, 138,
		67, 140, 68, 142, 69, 144, 70, 146, 71, 148, 72, 150, 73, 152, 74, 154,
		75, 156, 76, 158, 77, 160, 78, 162, 79, 164, 80, 166, 81, 168, 82, 170,
		83, 172, 84, 174, 85, 176, 86, 178, 87, 180, 88, 182, 89, 184, 90, 186,
		91, 188, 92, 190, 93, 192, 94, 194, 95, 196, 96, 198, 97, 200, 98, 202,
		99, 204, 100, 206, 101, 208, 102, 210, 103, 212, 104, 214, 105, 216, 106,
		218, 107, 220, 108, 222, 109, 224, 110, 226, 111, 228, 112, 230, 113, 232,
		114, 234, 115, 236, 116, 238, 117, 240, 118, 242, 119, 244, 120, 246, 121,
		248, 0, 250, 0, 252, 0, 254, 0, 256, 0, 258, 0, 260, 0, 262, 0, 264, 0,
		266, 0, 268, 0, 270, 0, 272, 0, 274, 0, 276, 0, 278, 0, 280, 0, 282, 0,
		284, 0, 286, 0, 288, 0, 290, 0, 6, 0, 1, 2, 3, 4, 5, 24, 3, 0, 65, 90,
		95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 3, 0, 9, 9, 13,
		13, 32, 32, 2, 0, 10, 10, 13, 13, 1, 0, 48, 57, 5, 0, 10, 10, 13, 13, 36,
		36, 39, 39, 92, 92, 5, 0, 10, 10, 13, 13, 34, 34, 36, 36, 92, 92, 3, 0,
		36, 36, 92, 92, 96, 96, 4, 0, 65, 90, 95, 95, 97, 122, 128, 65534, 5, 0,
		48, 57, 65, 90, 95, 95, 97, 122, 128, 65534, 2, 0, 88, 88, 120, 120, 1,
		0, 48, 55, 2, 0, 79, 79, 111, 111, 2, 0, 66, 66, 98, 98, 1, 0, 48, 49,
		3, 0, 48, 57, 65, 70, 97, 102, 1, 0, 49, 57, 9, 0, 34, 34, 39, 39, 92,
		92, 98, 98, 102, 102, 110, 110, 114, 114, 116, 116, 118, 118, 12, 0, 10,
		10, 13, 13, 34, 34, 39, 39, 48, 57, 92, 92, 98, 98, 102, 102, 110, 110,
		114, 114, 116, 118, 120, 120, 3, 0, 48, 57, 117, 117, 120, 120, 4, 0, 10,
		10, 13, 13, 34, 34, 92, 92, 4, 0, 10, 10, 13, 13, 39, 39, 92, 92, 1, 0,
		96, 96, 3, 0, 65, 90, 97, 101, 103, 122, 1156, 0, 6, 1, 0, 0, 0, 0, 8,
		1, 0, 0, 0, 0, 10, 1, 0, 0, 0, 0, 12, 1, 0, 0, 0, 0, 14, 1, 0, 0, 0, 0,
		16, 1, 0, 0, 0, 0, 18, 1, 0, 0, 0, 0, 20, 1, 0, 0, 0, 0, 22, 1, 0, 0, 0,
		0, 24, 1, 0, 0, 0, 0, 26, 1, 0, 0, 0, 0, 28, 1, 0, 0, 0, 0, 30, 1, 0, 0,
		0, 0, 32, 1, 0, 0, 0, 0, 34, 1, 0, 0, 0, 0, 36, 1, 0, 0, 0, 0, 38, 1, 0,
		0, 0, 0, 40, 1, 0, 0, 0, 0, 42, 1, 0, 0, 0, 0, 44, 1, 0, 0, 0, 0, 46, 1,
		0, 0, 0, 0, 48, 1, 0, 0, 0, 0, 50, 1, 0, 0, 0, 0, 52, 1, 0, 0, 0, 0, 54,
		1, 0, 0, 0, 0, 56, 1, 0, 0, 0, 0, 58, 1, 0, 0, 0, 0, 60, 1, 0, 0, 0, 0,
		62, 1, 0, 0, 0, 0, 64, 1, 0, 0, 0, 0, 66, 1, 0, 0, 0, 0, 68, 1, 0, 0, 0,
		0, 70, 1, 0, 0, 0, 0, 72, 1, 0, 0, 0, 0, 74, 1, 0, 0, 0, 0, 76, 1, 0, 0,
		0, 0, 78, 1, 0, 0, 0, 0, 80, 1, 0, 0, 0, 0, 82, 1, 0, 0, 0, 0, 84, 1, 0,
		0, 0, 0, 86, 1, 0, 0, 0, 0, 88, 1, 0, 0, 0, 0, 90, 1, 0, 0, 0, 0, 92, 1,
		0, 0, 0, 0, 94, 1, 0, 0, 0, 0, 96, 1, 0, 0, 0, 0, 98, 1, 0, 0, 0, 0, 100,
		1, 0, 0, 0, 0, 102, 1, 0, 0, 0, 0, 104, 1, 0, 0, 0, 0, 106, 1, 0, 0, 0,
		0, 108, 1, 0, 0, 0, 0, 110, 1, 0, 0, 0, 0, 112, 1, 0, 0, 0, 0, 114, 1,
		0, 0, 0, 0, 116, 1, 0, 0, 0, 0, 118, 1, 0, 0, 0, 0, 120, 1, 0, 0, 0, 0,
		122, 1, 0, 0, 0, 0, 124, 1, 0, 0, 0, 0, 126, 1, 0, 0, 0, 0, 128, 1, 0,
		0, 0, 0, 130, 1, 0, 0, 0, 0, 132, 1, 0, 0, 0, 0, 134, 1, 0, 0, 0, 0, 136,
		1, 0, 0, 0, 0, 138, 1, 0, 0, 0, 0, 140, 1, 0, 0, 0, 0, 142, 1, 0, 0, 0,
		0, 144, 1, 0, 0, 0, 0, 146, 1, 0, 0, 0, 0, 148, 1, 0, 0, 0, 0, 150, 1,
		0, 0, 0, 0, 152, 1, 0, 0, 0, 0, 154, 1, 0, 0, 0, 0, 156, 1, 0, 0, 0, 0,
		158, 1, 0, 0, 0, 0, 160, 1, 0, 0, 0, 0, 162, 1, 0, 0, 0, 0, 164, 1, 0,
		0, 0, 0, 166, 1, 0, 0, 0, 0, 168, 1, 0, 0, 0, 0, 170, 1, 0, 0, 0, 0, 172,
		1, 0, 0, 0, 0, 174, 1, 0, 0, 0, 0, 176, 1, 0, 0, 0, 0, 178, 1, 0, 0, 0,
		0, 180, 1, 0, 0, 0, 0, 182, 1, 0, 0, 0, 0, 184, 1, 0, 0, 0, 0, 186, 1,
		0, 0, 0, 0, 188, 1, 0, 0, 0, 0, 190, 1, 0, 0, 0, 0, 192, 1, 0, 0, 0, 0,
		194, 1, 0, 0, 0, 0, 196, 1, 0, 0, 0, 0, 198, 1, 0, 0, 0, 0, 200, 1, 0,
		0, 0, 0, 202, 1, 0, 0, 0, 0, 204, 1, 0, 0, 0, 0, 206, 1, 0, 0, 0, 0, 208,
		1, 0, 0, 0, 0, 210, 1, 0, 0, 0, 0, 212, 1, 0, 0, 0, 0, 214, 1, 0, 0, 0,
		0, 216, 1, 0, 0, 0, 0, 218, 1, 0, 0, 0, 0, 220, 1, 0, 0, 0, 1, 222, 1,
		0, 0, 0, 1, 224, 1, 0, 0, 0, 1, 226, 1, 0, 0, 0, 2, 228, 1, 0, 0, 0, 2,
		230, 1, 0, 0, 0, 2, 232, 1, 0, 0, 0, 3, 234, 1, 0, 0, 0, 3, 236, 1, 0,
		0, 0, 3, 238, 1, 0, 0, 0, 4, 240, 1, 0, 0, 0, 4, 242, 1, 0, 0, 0, 5, 244,
		1, 0, 0, 0, 5, 246, 1, 0, 0, 0, 6, 292, 1, 0, 0, 0, 8, 298, 1, 0, 0, 0,
		10, 306, 1, 0, 0, 0, 12, 309, 1, 0, 0, 0, 14, 314, 1, 0, 0, 0, 16, 319,
		1, 0, 0, 0, 18, 326, 1, 0, 0, 0, 20, 331, 1, 0, 0, 0, 22, 339, 1, 0, 0,
		0, 24, 343, 1, 0, 0, 0, 26, 352, 1, 0, 0, 0, 28, 358, 1, 0, 0, 0, 30, 365,
		1, 0, 0, 0, 32, 373, 1, 0, 0, 0, 34, 377, 1, 0, 0, 0, 36, 383, 1, 0, 0,
		0, 38, 391, 1, 0, 0, 0, 40, 401, 1, 0, 0, 0, 42, 404, 1, 0, 0, 0, 44, 411,
		1, 0, 0, 0, 46, 417, 1, 0, 0, 0, 48, 420, 1, 0, 0, 0, 50, 443, 1, 0, 0,
		0, 52, 445, 1, 0, 0, 0, 54, 449, 1, 0, 0, 0, 56, 454, 1, 0, 0, 0, 58, 460,
		1, 0, 0, 0, 60, 464, 1, 0, 0, 0, 62, 469, 1, 0, 0, 0, 64, 474, 1, 0, 0,
		0, 66, 480, 1, 0, 0, 0, 68, 483, 1, 0, 0, 0, 70, 487, 1, 0, 0, 0, 72, 500,
		1, 0, 0, 0, 74, 588, 1, 0, 0, 0, 76, 590, 1, 0, 0, 0, 78, 600, 1, 0, 0,
		0, 80, 612, 1, 0, 0, 0, 82, 616, 1, 0, 0, 0, 84, 623, 1, 0, 0, 0, 86, 631,
		1, 0, 0, 0, 88, 633, 1, 0, 0, 0, 90, 635, 1, 0, 0, 0, 92, 637, 1, 0, 0,
		0, 94, 640, 1, 0, 0, 0, 96, 642, 1, 0, 0, 0, 98, 645, 1, 0, 0, 0, 100,
		647, 1, 0, 0, 0, 102, 649, 1, 0, 0, 0, 104, 652, 1, 0, 0, 0, 106, 654,
		1, 0, 0, 0, 108, 656, 1, 0, 0, 0, 110, 658, 1, 0, 0, 0, 112, 660, 1, 0,
		0, 0, 114, 663, 1, 0, 0, 0, 116, 666, 1, 0, 0, 0, 118, 669, 1, 0, 0, 0,
		120, 672, 1, 0, 0, 0, 122, 675, 1, 0, 0, 0, 124, 678, 1, 0, 0, 0, 126,
		681, 1, 0, 0, 0, 128, 683, 1, 0, 0, 0, 130, 685, 1, 0, 0, 0, 132, 687,
		1, 0, 0, 0, 134, 689, 1, 0, 0, 0, 136, 691, 1, 0, 0, 0, 138, 693, 1, 0,
		0, 0, 140, 695, 1, 0, 0, 0, 142, 700, 1, 0, 0, 0, 144, 702, 1, 0, 0, 0,
		146, 704, 1, 0, 0, 0, 148, 706, 1, 0, 0, 0, 150, 708, 1, 0, 0, 0, 152,
		711, 1, 0, 0, 0, 154, 714, 1, 0, 0, 0, 156, 717, 1, 0, 0, 0, 158, 720,
		1, 0, 0, 0, 160, 723, 1, 0, 0, 0, 162, 726, 1, 0, 0, 0, 164, 729, 1, 0,
		0, 0, 166, 732, 1, 0, 0, 0, 168, 735, 1, 0, 0, 0, 170, 739, 1, 0, 0, 0,
		172, 743, 1, 0, 0, 0, 174, 746, 1, 0, 0, 0, 176, 749, 1, 0, 0, 0, 178,
		753, 1, 0, 0, 0, 180, 755, 1, 0, 0, 0, 182, 759, 1, 0, 0, 0, 184, 762,
		1, 0, 0, 0, 186, 765, 1, 0, 0, 0, 188, 767, 1, 0, 0, 0, 190, 770, 1, 0,
		0, 0, 192, 776, 1, 0, 0, 0, 194, 779, 1, 0, 0, 0, 196, 782, 1, 0, 0, 0,
		198, 784, 1, 0, 0, 0, 200, 796, 1, 0, 0, 0, 202, 805, 1, 0, 0, 0, 204,
		813, 1, 0, 0, 0, 206, 828, 1, 0, 0, 0, 208, 834, 1, 0, 0, 0, 210, 849,
		1, 0, 0, 0, 212, 851, 1, 0, 0, 0, 214, 858, 1, 0, 0, 0, 216, 865, 1, 0,
		0, 0, 218, 876, 1, 0, 0, 0, 220, 878, 1, 0, 0, 0, 222, 882, 1, 0, 0, 0,
		224, 892, 1, 0, 0, 0, 226, 894, 1, 0, 0, 0, 228, 899, 1, 0, 0, 0, 230,
		909, 1, 0, 0, 0, 232, 911, 1, 0, 0, 0, 234, 916, 1, 0, 0, 0, 236, 928,
		1, 0, 0, 0, 238, 930, 1, 0, 0, 0, 240, 944, 1, 0, 0, 0, 242, 947, 1, 0,
		0, 0, 244, 956, 1, 0, 0, 0, 246, 962, 1, 0, 0, 0, 248, 964, 1, 0, 0, 0,
		250, 971, 1, 0, 0, 0, 252, 991, 1, 0, 0, 0, 254, 993, 1, 0, 0, 0, 256,
		1000, 1, 0, 0, 0, 258, 1010, 1, 0, 0, 0, 260, 1015, 1, 0, 0, 0, 262, 1019,
		1, 0, 0, 0, 264, 1021, 1, 0, 0, 0, 266, 1025, 1, 0, 0, 0, 268, 1027, 1,
		0, 0, 0, 270, 1031, 1, 0, 0, 0, 272, 1036, 1, 0, 0, 0, 274, 1041, 1, 0,
		0, 0, 276, 1043, 1, 0, 0, 0, 278, 1046, 1, 0, 0, 0, 280, 1051, 1, 0, 0,
		0, 282, 1056, 1, 0, 0, 0, 284, 1084, 1, 0, 0, 0, 286, 1087, 1, 0, 0, 0,
		288, 1098, 1, 0, 0, 0, 290, 1108, 1, 0, 0, 0, 292, 293, 5, 112, 0, 0, 293,
		294, 5, 97, 0, 0, 294, 295, 5, 110, 0, 0, 295, 296, 5, 105, 0, 0, 296,
		297, 5, 99, 0, 0, 297, 7, 1, 0, 0, 0, 298, 299, 5, 114, 0, 0, 299, 300,
		5, 101, 0, 0, 300, 301, 5, 99, 0, 0, 301, 302, 5, 111, 0, 0, 302, 303,
		5, 118, 0, 0, 303, 304, 5, 101, 0, 0, 304, 305, 5, 114, 0, 0, 305, 9, 1,
		0, 0, 0, 306, 307, 5, 105, 0, 0, 307, 308, 5, 102, 0, 0, 308, 11, 1, 0,
		0, 0, 309, 310, 5, 101, 0, 0, 310, 311, 5, 108, 0, 0, 311, 312, 5, 105,
		0, 0, 312, 313, 5, 102, 0, 0, 313, 13, 1, 0, 0, 0, 314, 315, 5, 101, 0,
		0, 315, 316, 5, 108, 0, 0, 316, 317, 5, 115, 0, 0, 317, 318, 5, 101, 0,
		0, 318, 15, 1, 0, 0, 0, 319, 320, 5, 115, 0, 0, 320, 321, 5, 119, 0, 0,
		321, 322, 5, 105, 0, 0, 322, 323, 5, 116, 0, 0, 323, 324, 5, 99, 0, 0,
		324, 325, 5, 104, 0, 0, 325, 17, 1, 0, 0, 0, 326, 327, 5, 99, 0, 0, 327,
		328, 5, 97, 0, 0, 328, 329, 5, 115, 0, 0, 329, 330, 5, 101, 0, 0, 330,
		19, 1, 0, 0, 0, 331, 332, 5, 100, 0, 0, 332, 333, 5, 101, 0, 0, 333, 334,
		5, 102, 0, 0, 334, 335, 5, 97, 0, 0, 335, 336, 5, 117, 0, 0, 336, 337,
		5, 108, 0, 0, 337, 338, 5, 116, 0, 0, 338, 21, 1, 0, 0, 0, 339, 340, 5,
		102, 0, 0, 340, 341, 5, 111, 0, 0, 341, 342, 5, 114, 0, 0, 342, 23, 1,
		0, 0, 0, 343, 344, 5, 99, 0, 0, 344, 345, 5, 111, 0, 0, 345, 346, 5, 110,
		0, 0, 346, 347, 5, 116, 0, 0, 347, 348, 5, 105, 0, 0, 348, 349, 5, 110,
		0, 0, 349, 350, 5, 117, 0, 0, 350, 351, 5, 101, 0, 0, 351, 25, 1, 0, 0,
		0, 352, 353, 5, 98, 0, 0, 353, 354, 5, 114, 0, 0, 354, 355, 5, 101, 0,
		0, 355, 356, 5, 97, 0, 0, 356, 357, 5, 107, 0, 0, 357, 27, 1, 0, 0, 0,
		358, 359, 5, 114, 0, 0, 359, 360, 5, 101, 0, 0, 360, 361, 5, 116, 0, 0,
		361, 362, 5, 117, 0, 0, 362, 363, 5, 114, 0, 0, 363, 364, 5, 110, 0, 0,
		364, 29, 1, 0, 0, 0, 365, 366, 5, 105, 0, 0, 366, 367, 5, 110, 0, 0, 367,
		368, 5, 99, 0, 0, 368, 369, 5, 108, 0, 0, 369, 370, 5, 117, 0, 0, 370,
		371, 5, 100, 0, 0, 371, 372, 5, 101, 0, 0, 372, 31, 1, 0, 0, 0, 373, 374,
		5, 116, 0, 0, 374, 375, 5, 114, 0, 0, 375, 376, 5, 121, 0, 0, 376, 33,
		1, 0, 0, 0, 377, 378, 5, 99, 0, 0, 378, 379, 5, 97, 0, 0, 379, 380, 5,
		116, 0, 0, 380, 381, 5, 99, 0, 0, 381, 382, 5, 104, 0, 0, 382, 35, 1, 0,
		0, 0, 383, 384, 5, 102, 0, 0, 384, 385, 5, 105, 0, 0, 385, 386, 5, 110,
		0, 0, 386, 387, 5, 97, 0, 0, 387, 388, 5, 108, 0, 0, 388, 389, 5, 108,
		0, 0, 389, 390, 5, 121, 0, 0, 390, 37, 1, 0, 0, 0, 391, 392, 5, 105, 0,
		0, 392, 393, 5, 109, 0, 0, 393, 394, 5, 112, 0, 0, 394, 395, 5, 111, 0,
		0, 395, 396, 5, 114, 0, 0, 396, 397, 5, 116, 0, 0, 397, 398, 5, 109, 0,
		0, 398, 399, 5, 111, 0, 0, 399, 400, 5, 100, 0, 0, 400, 39, 1, 0, 0, 0,
		401, 402, 5, 97, 0, 0, 402, 403, 5, 115, 0, 0, 403, 41, 1, 0, 0, 0, 404,
		405, 5, 101, 0, 0, 405, 406, 5, 120, 0, 0, 406, 407, 5, 112, 0, 0, 407,
		408, 5, 111, 0, 0, 408, 409, 5, 114, 0, 0, 409, 410, 5, 116, 0, 0, 410,
		43, 1, 0, 0, 0, 411, 412, 5, 100, 0, 0, 412, 413, 5, 101, 0, 0, 413, 414,
		5, 102, 0, 0, 414, 415, 5, 101, 0, 0, 415, 416, 5, 114, 0, 0, 416, 45,
		1, 0, 0, 0, 417, 418, 5, 103, 0, 0, 418, 419, 5, 111, 0, 0, 419, 47, 1,
		0, 0, 0, 420, 421, 5, 114, 0, 0, 421, 422, 5, 97, 0, 0, 422, 423, 5, 110,
		0, 0, 423, 424, 5, 103, 0, 0, 424, 425, 5, 101, 0, 0, 425, 49, 1, 0, 0,
		0, 426, 427, 5, 102, 0, 0, 427, 428, 5, 117, 0, 0, 428, 429, 5, 110, 0,
		0, 429, 444, 5, 99, 0, 0, 430, 431, 5, 102, 0, 0, 431, 444, 5, 110, 0,
		0, 432, 433, 5, 100, 0, 0, 433, 434, 5, 101, 0, 0, 434, 444, 5, 102, 0,
		0, 435, 436, 5, 102, 0, 0, 436, 437, 5, 117, 0, 0, 437, 438, 5, 110, 0,
		0, 438, 439, 5, 99, 0, 0, 439, 440, 5, 116, 0, 0, 440, 441, 5, 105, 0,
		0, 441, 442, 5, 111, 0, 0, 442, 444, 5, 110, 0, 0, 443, 426, 1, 0, 0, 0,
		443, 430, 1, 0, 0, 0, 443, 432, 1, 0, 0, 0, 443, 435, 1, 0, 0, 0, 444,
		51, 1, 0, 0, 0, 445, 446, 5, 109, 0, 0, 446, 447, 5, 97, 0, 0, 447, 448,
		5, 112, 0, 0, 448, 53, 1, 0, 0, 0, 449, 450, 5, 99, 0, 0, 450, 451, 5,
		104, 0, 0, 451, 452, 5, 97, 0, 0, 452, 453, 5, 110, 0, 0, 453, 55, 1, 0,
		0, 0, 454, 455, 5, 99, 0, 0, 455, 456, 5, 108, 0, 0, 456, 457, 5, 97, 0,
		0, 457, 458, 5, 115, 0, 0, 458, 459, 5, 115, 0, 0, 459, 57, 1, 0, 0, 0,
		460, 461, 5, 110, 0, 0, 461, 462, 5, 101, 0, 0, 462, 463, 5, 119, 0, 0,
		463, 59, 1, 0, 0, 0, 464, 465, 5, 109, 0, 0, 465, 466, 5, 97, 0, 0, 466,
		467, 5, 107, 0, 0, 467, 468, 5, 101, 0, 0, 468, 61, 1, 0, 0, 0, 469, 470,
		5, 116, 0, 0, 470, 471, 5, 114, 0, 0, 471, 472, 5, 117, 0, 0, 472, 473,
		5, 101, 0, 0, 473, 63, 1, 0, 0, 0, 474, 475, 5, 102, 0, 0, 475, 476, 5,
		97, 0, 0, 476, 477, 5, 108, 0, 0, 477, 478, 5, 115, 0, 0, 478, 479, 5,
		101, 0, 0, 479, 65, 1, 0, 0, 0, 480, 481, 5, 105, 0, 0, 481, 482, 5, 110,
		0, 0, 482, 67, 1, 0, 0, 0, 483, 484, 5, 110, 0, 0, 484, 485, 5, 111, 0,
		0, 485, 486, 5, 116, 0, 0, 486, 69, 1, 0, 0, 0, 487, 488, 5, 97, 0, 0,
		488, 489, 5, 115, 0, 0, 489, 490, 5, 115, 0, 0, 490, 491, 5, 101, 0, 0,
		491, 492, 5, 114, 0, 0, 492, 493, 5, 116, 0, 0, 493, 71, 1, 0, 0, 0, 494,
		495, 5, 118, 0, 0, 495, 496, 5, 97, 0, 0, 496, 501, 5, 114, 0, 0, 497,
		498, 5, 97, 0, 0, 498, 499, 5, 110, 0, 0, 499, 501, 5, 121, 0, 0, 500,
		494, 1, 0, 0, 0, 500, 497, 1, 0, 0, 0, 501, 73, 1, 0, 0, 0, 502, 503, 5,
		117, 0, 0, 503, 504, 5, 105, 0, 0, 504, 505, 5, 110, 0, 0, 505, 589, 5,
		116, 0, 0, 506, 507, 5, 117, 0, 0, 507, 508, 5, 105, 0, 0, 508, 509, 5,
		110, 0, 0, 509, 510, 5, 116, 0, 0, 510, 589, 5, 56, 0, 0, 511, 512, 5,
		98, 0, 0, 512, 513, 5, 121, 0, 0, 513, 514, 5, 116, 0, 0, 514, 589, 5,
		101, 0, 0, 515, 516, 5, 117, 0, 0, 516, 517, 5, 105, 0, 0, 517, 518, 5,
		110, 0, 0, 518, 519, 5, 116, 0, 0, 519, 520, 5, 49, 0, 0, 520, 589, 5,
		54, 0, 0, 521, 522, 5, 117, 0, 0, 522, 523, 5, 105, 0, 0, 523, 524, 5,
		110, 0, 0, 524, 525, 5, 116, 0, 0, 525, 526, 5, 51, 0, 0, 526, 589, 5,
		50, 0, 0, 527, 528, 5, 117, 0, 0, 528, 529, 5, 105, 0, 0, 529, 530, 5,
		110, 0, 0, 530, 531, 5, 116, 0, 0, 531, 532, 5, 54, 0, 0, 532, 589, 5,
		52, 0, 0, 533, 534, 5, 105, 0, 0, 534, 535, 5, 110, 0, 0, 535, 589, 5,
		116, 0, 0, 536, 537, 5, 105, 0, 0, 537, 538, 5, 110, 0, 0, 538, 539, 5,
		116, 0, 0, 539, 589, 5, 56, 0, 0, 540, 541, 5, 105, 0, 0, 541, 542, 5,
		110, 0, 0, 542, 543, 5, 116, 0, 0, 543, 544, 5, 49, 0, 0, 544, 589, 5,
		54, 0, 0, 545, 546, 5, 105, 0, 0, 546, 547, 5, 110, 0, 0, 547, 548, 5,
		116, 0, 0, 548, 549, 5, 51, 0, 0, 549, 589, 5, 50, 0, 0, 550, 551, 5, 105,
		0, 0, 551, 552, 5, 110, 0, 0, 552, 553, 5, 116, 0, 0, 553, 554, 5, 54,
		0, 0, 554, 589, 5, 52, 0, 0, 555, 556, 5, 98, 0, 0, 556, 557, 5, 111, 0,
		0, 557, 558, 5, 111, 0, 0, 558, 589, 5, 108, 0, 0, 559, 560, 5, 102, 0,
		0, 560, 561, 5, 108, 0, 0, 561, 562, 5, 111, 0, 0, 562, 563, 5, 97, 0,
		0, 563, 589, 5, 116, 0, 0, 564, 565, 5, 102, 0, 0, 565, 566, 5, 108, 0,
		0, 566, 567, 5, 111, 0, 0, 567, 568, 5, 97, 0, 0, 568, 569, 5, 116, 0,
		0, 569, 570, 5, 54, 0, 0, 570, 589, 5, 52, 0, 0, 571, 572, 5, 100, 0, 0,
		572, 573, 5, 111, 0, 0, 573, 574, 5, 117, 0, 0, 574, 575, 5, 98, 0, 0,
		575, 576, 5, 108, 0, 0, 576, 589, 5, 101, 0, 0, 577, 578, 5, 115, 0, 0,
		578, 579, 5, 116, 0, 0, 579, 580, 5, 114, 0, 0, 580, 581, 5, 105, 0, 0,
		581, 582, 5, 110, 0, 0, 582, 589, 5, 103, 0, 0, 583, 584, 5, 111, 0, 0,
		584, 585, 5, 109, 0, 0, 585, 586, 5, 97, 0, 0, 586, 589, 5, 112, 0, 0,
		587, 589, 3, 72, 33, 0, 588, 502, 1, 0, 0, 0, 588, 506, 1, 0, 0, 0, 588,
		511, 1, 0, 0, 0, 588, 515, 1, 0, 0, 0, 588, 521, 1, 0, 0, 0, 588, 527,
		1, 0, 0, 0, 588, 533, 1, 0, 0, 0, 588, 536, 1, 0, 0, 0, 588, 540, 1, 0,
		0, 0, 588, 545, 1, 0, 0, 0, 588, 550, 1, 0, 0, 0, 588, 555, 1, 0, 0, 0,
		588, 559, 1, 0, 0, 0, 588, 564, 1, 0, 0, 0, 588, 571, 1, 0, 0, 0, 588,
		577, 1, 0, 0, 0, 588, 583, 1, 0, 0, 0, 588, 587, 1, 0, 0, 0, 589, 75, 1,
		0, 0, 0, 590, 591, 5, 117, 0, 0, 591, 592, 5, 110, 0, 0, 592, 593, 5, 100,
		0, 0, 593, 594, 5, 101, 0, 0, 594, 595, 5, 102, 0, 0, 595, 596, 5, 105,
		0, 0, 596, 597, 5, 110, 0, 0, 597, 598, 5, 101, 0, 0, 598, 599, 5, 100,
		0, 0, 599, 77, 1, 0, 0, 0, 600, 601, 5, 102, 0, 0, 601, 602, 5, 97, 0,
		0, 602, 603, 5, 108, 0, 0, 603, 604, 5, 108, 0, 0, 604, 605, 5, 116, 0,
		0, 605, 606, 5, 104, 0, 0, 606, 607, 5, 114, 0, 0, 607, 608, 5, 111, 0,
		0, 608, 609, 5, 117, 0, 0, 609, 610, 5, 103, 0, 0, 610, 611, 5, 104, 0,
		0, 611, 79, 1, 0, 0, 0, 612, 613, 5, 110, 0, 0, 613, 614, 5, 105, 0, 0,
		614, 615, 5, 108, 0, 0, 615, 81, 1, 0, 0, 0, 616, 620, 7, 0, 0, 0, 617,
		619, 7, 1, 0, 0, 618, 617, 1, 0, 0, 0, 619, 622, 1, 0, 0, 0, 620, 618,
		1, 0, 0, 0, 620, 621, 1, 0, 0, 0, 621, 83, 1, 0, 0, 0, 622, 620, 1, 0,
		0, 0, 623, 624, 5, 36, 0, 0, 624, 628, 7, 0, 0, 0, 625, 627, 7, 1, 0, 0,
		626, 625, 1, 0, 0, 0, 627, 630, 1, 0, 0, 0, 628, 626, 1, 0, 0, 0, 628,
		629, 1, 0, 0, 0, 629, 85, 1, 0, 0, 0, 630, 628, 1, 0, 0, 0, 631, 632, 5,
		42, 0, 0, 632, 87, 1, 0, 0, 0, 633, 634, 5, 47, 0, 0, 634, 89, 1, 0, 0,
		0, 635, 636, 5, 37, 0, 0, 636, 91, 1, 0, 0, 0, 637, 638, 5, 60, 0, 0, 638,
		639, 5, 60, 0, 0, 639, 93, 1, 0, 0, 0, 640, 641, 5, 60, 0, 0, 641, 95,
		1, 0, 0, 0, 642, 643, 5, 62, 0, 0, 643, 644, 5, 62, 0, 0, 644, 97, 1, 0,
		0, 0, 645, 646, 5, 62, 0, 0, 646, 99, 1, 0, 0, 0, 647, 648, 5, 38, 0, 0,
		648, 101, 1, 0, 0, 0, 649, 650, 5, 38, 0, 0, 650, 651, 5, 94, 0, 0, 651,
		103, 1, 0, 0, 0, 652, 653, 5, 43, 0, 0, 653, 105, 1, 0, 0, 0, 654, 655,
		5, 45, 0, 0, 655, 107, 1, 0, 0, 0, 656, 657, 5, 94, 0, 0, 657, 109, 1,
		0, 0, 0, 658, 659, 5, 124, 0, 0, 659, 111, 1, 0, 0, 0, 660, 661, 5, 61,
		0, 0, 661, 662, 5, 61, 0, 0, 662, 113, 1, 0, 0, 0, 663, 664, 5, 60, 0,
		0, 664, 665, 5, 61, 0, 0, 665, 115, 1, 0, 0, 0, 666, 667, 5, 62, 0, 0,
		667, 668, 5, 61, 0, 0, 668, 117, 1, 0, 0, 0, 669, 670, 5, 33, 0, 0, 670,
		671, 5, 61, 0, 0, 671, 119, 1, 0, 0, 0, 672, 673, 5, 60, 0, 0, 673, 674,
		5, 45, 0, 0, 674, 121, 1, 0, 0, 0, 675, 676, 5, 38, 0, 0, 676, 677, 5,
		38, 0, 0, 677, 123, 1, 0, 0, 0, 678, 679, 5, 124, 0, 0, 679, 680, 5, 124,
		0, 0, 680, 125, 1, 0, 0, 0, 681, 682, 5, 63, 0, 0, 682, 127, 1, 0, 0, 0,
		683, 684, 5, 58, 0, 0, 684, 129, 1, 0, 0, 0, 685, 686, 5, 91, 0, 0, 686,
		131, 1, 0, 0, 0, 687, 688, 5, 93, 0, 0, 688, 133, 1, 0, 0, 0, 689, 690,
		5, 40, 0, 0, 690, 135, 1, 0, 0, 0, 691, 692, 5, 41, 0, 0, 692, 137, 1,
		0, 0, 0, 693, 694, 5, 123, 0, 0, 694, 139, 1, 0, 0, 0, 695, 696, 5, 125,
		0, 0, 696, 697, 4, 67, 0, 0, 697, 698, 1, 0, 0, 0, 698, 699, 6, 67, 0,
		0, 699, 141, 1, 0, 0, 0, 700, 701, 5, 125, 0, 0, 701, 143, 1, 0, 0, 0,
		702, 703, 5, 44, 0, 0, 703, 145, 1, 0, 0, 0, 704, 705, 5, 61, 0, 0, 705,
		147, 1, 0, 0, 0, 706, 707, 5, 126, 0, 0, 707, 149, 1, 0, 0, 0, 708, 709,
		5, 58, 0, 0, 709, 710, 5, 61, 0, 0, 710, 151, 1, 0, 0, 0, 711, 712, 5,
		43, 0, 0, 712, 713, 5, 43, 0, 0, 713, 153, 1, 0, 0, 0, 714, 715, 5, 45,
		0, 0, 715, 716, 5, 45, 0, 0, 716, 155, 1, 0, 0, 0, 717, 718, 5, 43, 0,
		0, 718, 719, 5, 61, 0, 0, 719, 157, 1, 0, 0, 0, 720, 721, 5, 45, 0, 0,
		721, 722, 5, 61, 0, 0, 722, 159, 1, 0, 0, 0, 723, 724, 5, 42, 0, 0, 724,
		725, 5, 61, 0, 0, 725, 161, 1, 0, 0, 0, 726, 727, 5, 47, 0, 0, 727, 728,
		5, 61, 0, 0, 728, 163, 1, 0, 0, 0, 729, 730, 5, 37, 0, 0, 730, 731, 5,
		61, 0, 0, 731, 165, 1, 0, 0, 0, 732, 733, 5, 94, 0, 0, 733, 734, 5, 61,
		0, 0, 734, 167, 1, 0, 0, 0, 735, 736, 5, 60, 0, 0, 736, 737, 5, 60, 0,
		0, 737, 738, 5, 61, 0, 0, 738, 169, 1, 0, 0, 0, 739, 740, 5, 62, 0, 0,
		740, 741, 5, 62, 0, 0, 741, 742, 5, 61, 0, 0, 742, 171, 1, 0, 0, 0, 743,
		744, 5, 38, 0, 0, 744, 745, 5, 61, 0, 0, 745, 173, 1, 0, 0, 0, 746, 747,
		5, 124, 0, 0, 747, 748, 5, 61, 0, 0, 748, 175, 1, 0, 0, 0, 749, 750, 5,
		38, 0, 0, 750, 751, 5, 94, 0, 0, 751, 752, 5, 61, 0, 0, 752, 177, 1, 0,
		0, 0, 753, 754, 5, 59, 0, 0, 754, 179, 1, 0, 0, 0, 755, 756, 5, 46, 0,
		0, 756, 757, 5, 46, 0, 0, 757, 758, 5, 46, 0, 0, 758, 181, 1, 0, 0, 0,
		759, 760, 5, 61, 0, 0, 760, 761, 5, 62, 0, 0, 761, 183, 1, 0, 0, 0, 762,
		763, 5, 60, 0, 0, 763, 764, 5, 62, 0, 0, 764, 185, 1, 0, 0, 0, 765, 766,
		5, 33, 0, 0, 766, 187, 1, 0, 0, 0, 767, 768, 5, 46, 0, 0, 768, 189, 1,
		0, 0, 0, 769, 771, 7, 2, 0, 0, 770, 769, 1, 0, 0, 0, 771, 772, 1, 0, 0,
		0, 772, 770, 1, 0, 0, 0, 772, 773, 1, 0, 0, 0, 773, 774, 1, 0, 0, 0, 774,
		775, 6, 92, 1, 0, 775, 191, 1, 0, 0, 0, 776, 777, 5, 47, 0, 0, 777, 778,
		5, 42, 0, 0, 778, 193, 1, 0, 0, 0, 779, 780, 5, 42, 0, 0, 780, 781, 5,
		47, 0, 0, 781, 195, 1, 0, 0, 0, 782, 783, 5, 96, 0, 0, 783, 197, 1, 0,
		0, 0, 784, 785, 5, 47, 0, 0, 785, 786, 5, 42, 0, 0, 786, 790, 1, 0, 0,
		0, 787, 789, 9, 0, 0, 0, 788, 787, 1, 0, 0, 0, 789, 792, 1, 0, 0, 0, 790,
		791, 1, 0, 0, 0, 790, 788, 1, 0, 0, 0, 791, 793, 1, 0, 0, 0, 792, 790,
		1, 0, 0, 0, 793, 794, 5, 42, 0, 0, 794, 795, 5, 47, 0, 0, 795, 199, 1,
		0, 0, 0, 796, 797, 5, 60, 0, 0, 797, 798, 5, 60, 0, 0, 798, 799, 5, 60,
		0, 0, 799, 800, 1, 0, 0, 0, 800, 801, 6, 97, 2, 0, 801, 201, 1, 0, 0, 0,
		802, 803, 5, 47, 0, 0, 803, 806, 5, 47, 0, 0, 804, 806, 5, 35, 0, 0, 805,
		802, 1, 0, 0, 0, 805, 804, 1, 0, 0, 0, 806, 810, 1, 0, 0, 0, 807, 809,
		8, 3, 0, 0, 808, 807, 1, 0, 0, 0, 809, 812, 1, 0, 0, 0, 810, 808, 1, 0,
		0, 0, 810, 811, 1, 0, 0, 0, 811, 203, 1, 0, 0, 0, 812, 810, 1, 0, 0, 0,
		813, 814, 5, 10, 0, 0, 814, 205, 1, 0, 0, 0, 815, 829, 5, 59, 0, 0, 816,
		817, 5, 47, 0, 0, 817, 818, 5, 42, 0, 0, 818, 822, 1, 0, 0, 0, 819, 821,
		9, 0, 0, 0, 820, 819, 1, 0, 0, 0, 821, 824, 1, 0, 0, 0, 822, 823, 1, 0,
		0, 0, 822, 820, 1, 0, 0, 0, 823, 825, 1, 0, 0, 0, 824, 822, 1, 0, 0, 0,
		825, 826, 5, 42, 0, 0, 826, 829, 5, 47, 0, 0, 827, 829, 5, 0, 0, 1, 828,
		815, 1, 0, 0, 0, 828, 816, 1, 0, 0, 0, 828, 827, 1, 0, 0, 0, 829, 207,
		1, 0, 0, 0, 830, 835, 3, 258, 126, 0, 831, 835, 3, 252, 123, 0, 832, 835,
		3, 250, 122, 0, 833, 835, 3, 254, 124, 0, 834, 830, 1, 0, 0, 0, 834, 831,
		1, 0, 0, 0, 834, 832, 1, 0, 0, 0, 834, 833, 1, 0, 0, 0, 835, 209, 1, 0,
		0, 0, 836, 837, 3, 258, 126, 0, 837, 839, 5, 46, 0, 0, 838, 840, 7, 4,
		0, 0, 839, 838, 1, 0, 0, 0, 840, 841, 1, 0, 0, 0, 841, 839, 1, 0, 0, 0,
		841, 842, 1, 0, 0, 0, 842, 850, 1, 0, 0, 0, 843, 845, 5, 46, 0, 0, 844,
		846, 7, 4, 0, 0, 845, 844, 1, 0, 0, 0, 846, 847, 1, 0, 0, 0, 847, 845,
		1, 0, 0, 0, 847, 848, 1, 0, 0, 0, 848, 850, 1, 0, 0, 0, 849, 836, 1, 0,
		0, 0, 849, 843, 1, 0, 0, 0, 850, 211, 1, 0, 0, 0, 851, 852, 5, 102, 0,
		0, 852, 853, 5, 39, 0, 0, 853, 854, 1, 0, 0, 0, 854, 855, 6, 103, 3, 0,
		855, 856, 1, 0, 0, 0, 856, 857, 6, 103, 4, 0, 857, 213, 1, 0, 0, 0, 858,
		859, 5, 102, 0, 0, 859, 860, 5, 34, 0, 0, 860, 861, 1, 0, 0, 0, 861, 862,
		6, 104, 5, 0, 862, 863, 1, 0, 0, 0, 863, 864, 6, 104, 6, 0, 864, 215, 1,
		0, 0, 0, 865, 866, 5, 102, 0, 0, 866, 867, 5, 96, 0, 0, 867, 868, 1, 0,
		0, 0, 868, 869, 6, 105, 7, 0, 869, 870, 1, 0, 0, 0, 870, 871, 6, 105, 8,
		0, 871, 217, 1, 0, 0, 0, 872, 877, 3, 282, 138, 0, 873, 877, 3, 286, 140,
		0, 874, 877, 3, 288, 141, 0, 875, 877, 3, 284, 139, 0, 876, 872, 1, 0,
		0, 0, 876, 873, 1, 0, 0, 0, 876, 874, 1, 0, 0, 0, 876, 875, 1, 0, 0, 0,
		877, 219, 1, 0, 0, 0, 878, 879, 5, 39, 0, 0, 879, 880, 3, 274, 134, 0,
		880, 881, 5, 39, 0, 0, 881, 221, 1, 0, 0, 0, 882, 883, 5, 39, 0, 0, 883,
		884, 6, 108, 9, 0, 884, 885, 1, 0, 0, 0, 885, 886, 6, 108, 0, 0, 886, 223,
		1, 0, 0, 0, 887, 893, 8, 5, 0, 0, 888, 889, 5, 92, 0, 0, 889, 893, 3, 260,
		127, 0, 890, 891, 5, 92, 0, 0, 891, 893, 5, 36, 0, 0, 892, 887, 1, 0, 0,
		0, 892, 888, 1, 0, 0, 0, 892, 890, 1, 0, 0, 0, 893, 225, 1, 0, 0, 0, 894,
		895, 5, 36, 0, 0, 895, 896, 5, 123, 0, 0, 896, 897, 1, 0, 0, 0, 897, 898,
		6, 110, 10, 0, 898, 227, 1, 0, 0, 0, 899, 900, 5, 34, 0, 0, 900, 901, 6,
		111, 11, 0, 901, 902, 1, 0, 0, 0, 902, 903, 6, 111, 0, 0, 903, 229, 1,
		0, 0, 0, 904, 910, 8, 6, 0, 0, 905, 906, 5, 92, 0, 0, 906, 910, 3, 260,
		127, 0, 907, 908, 5, 92, 0, 0, 908, 910, 5, 36, 0, 0, 909, 904, 1, 0, 0,
		0, 909, 905, 1, 0, 0, 0, 909, 907, 1, 0, 0, 0, 910, 231, 1, 0, 0, 0, 911,
		912, 5, 36, 0, 0, 912, 913, 5, 123, 0, 0, 913, 914, 1, 0, 0, 0, 914, 915,
		6, 113, 10, 0, 915, 233, 1, 0, 0, 0, 916, 917, 5, 96, 0, 0, 917, 918, 6,
		114, 12, 0, 918, 919, 1, 0, 0, 0, 919, 920, 6, 114, 0, 0, 920, 235, 1,
		0, 0, 0, 921, 929, 8, 7, 0, 0, 922, 923, 5, 92, 0, 0, 923, 929, 3, 260,
		127, 0, 924, 925, 5, 92, 0, 0, 925, 929, 5, 36, 0, 0, 926, 927, 5, 92,
		0, 0, 927, 929, 5, 96, 0, 0, 928, 921, 1, 0, 0, 0, 928, 922, 1, 0, 0, 0,
		928, 924, 1, 0, 0, 0, 928, 926, 1, 0, 0, 0, 929, 237, 1, 0, 0, 0, 930,
		931, 5, 36, 0, 0, 931, 932, 5, 123, 0, 0, 932, 933, 1, 0, 0, 0, 933, 934,
		6, 116, 10, 0, 934, 239, 1, 0, 0, 0, 935, 936, 3, 248, 121, 0, 936, 937,
		6, 117, 13, 0, 937, 945, 1, 0, 0, 0, 938, 939, 5, 39, 0, 0, 939, 940, 3,
		248, 121, 0, 940, 941, 6, 117, 14, 0, 941, 942, 1, 0, 0, 0, 942, 943, 5,
		39, 0, 0, 943, 945, 1, 0, 0, 0, 944, 935, 1, 0, 0, 0, 944, 938, 1, 0, 0,
		0, 945, 241, 1, 0, 0, 0, 946, 948, 5, 13, 0, 0, 947, 946, 1, 0, 0, 0, 947,
		948, 1, 0, 0, 0, 948, 949, 1, 0, 0, 0, 949, 950, 5, 10, 0, 0, 950, 951,
		6, 118, 15, 0, 951, 952, 1, 0, 0, 0, 952, 953, 6, 118, 0, 0, 953, 954,
		6, 118, 16, 0, 954, 243, 1, 0, 0, 0, 955, 957, 5, 13, 0, 0, 956, 955, 1,
		0, 0, 0, 956, 957, 1, 0, 0, 0, 957, 958, 1, 0, 0, 0, 958, 959, 5, 10, 0,
		0, 959, 960, 6, 119, 17, 0, 960, 961, 3, 248, 121, 0, 961, 245, 1, 0, 0,
		0, 962, 963, 9, 0, 0, 0, 963, 247, 1, 0, 0, 0, 964, 968, 7, 8, 0, 0, 965,
		967, 7, 9, 0, 0, 966, 965, 1, 0, 0, 0, 967, 970, 1, 0, 0, 0, 968, 966,
		1, 0, 0, 0, 968, 969, 1, 0, 0, 0, 969, 249, 1, 0, 0, 0, 970, 968, 1, 0,
		0, 0, 971, 972, 5, 48, 0, 0, 972, 974, 7, 10, 0, 0, 973, 975, 3, 256, 125,
		0, 974, 973, 1, 0, 0, 0, 975, 976, 1, 0, 0, 0, 976, 974, 1, 0, 0, 0, 976,
		977, 1, 0, 0, 0, 977, 251, 1, 0, 0, 0, 978, 980, 5, 48, 0, 0, 979, 981,
		7, 11, 0, 0, 980, 979, 1, 0, 0, 0, 981, 982, 1, 0, 0, 0, 982, 980, 1, 0,
		0, 0, 982, 983, 1, 0, 0, 0, 983, 992, 1, 0, 0, 0, 984, 985, 5, 48, 0, 0,
		985, 987, 7, 12, 0, 0, 986, 988, 7, 11, 0, 0, 987, 986, 1, 0, 0, 0, 988,
		989, 1, 0, 0, 0, 989, 987, 1, 0, 0, 0, 989, 990, 1, 0, 0, 0, 990, 992,
		1, 0, 0, 0, 991, 978, 1, 0, 0, 0, 991, 984, 1, 0, 0, 0, 992, 253, 1, 0,
		0, 0, 993, 994, 5, 48, 0, 0, 994, 996, 7, 13, 0, 0, 995, 997, 7, 14, 0,
		0, 996, 995, 1, 0, 0, 0, 997, 998, 1, 0, 0, 0, 998, 996, 1, 0, 0, 0, 998,
		999, 1, 0, 0, 0, 999, 255, 1, 0, 0, 0, 1000, 1001, 7, 15, 0, 0, 1001, 257,
		1, 0, 0, 0, 1002, 1011, 5, 48, 0, 0, 1003, 1007, 7, 16, 0, 0, 1004, 1006,
		7, 4, 0, 0, 1005, 1004, 1, 0, 0, 0, 1006, 1009, 1, 0, 0, 0, 1007, 1005,
		1, 0, 0, 0, 1007, 1008, 1, 0, 0, 0, 1008, 1011, 1, 0, 0, 0, 1009, 1007,
		1, 0, 0, 0, 1010, 1002, 1, 0, 0, 0, 1010, 1003, 1, 0, 0, 0, 1011, 259,
		1, 0, 0, 0, 1012, 1016, 3, 262, 128, 0, 1013, 1016, 5, 48, 0, 0, 1014,
		1016, 3, 264, 129, 0, 1015, 1012, 1, 0, 0, 0, 1015, 1013, 1, 0, 0, 0, 1015,
		1014, 1, 0, 0, 0, 1016, 261, 1, 0, 0, 0, 1017, 1020, 3, 266, 130, 0, 1018,
		1020, 3, 268, 131, 0, 1019, 1017, 1, 0, 0, 0, 1019, 1018, 1, 0, 0, 0, 1020,
		263, 1, 0, 0, 0, 1021, 1022, 5, 120, 0, 0, 1022, 1023, 3, 256, 125, 0,
		1023, 1024, 3, 256, 125, 0, 1024, 265, 1, 0, 0, 0, 1025, 1026, 7, 17, 0,
		0, 1026, 267, 1, 0, 0, 0, 1027, 1028, 8, 18, 0, 0, 1028, 269, 1, 0, 0,
		0, 1029, 1032, 3, 266, 130, 0, 1030, 1032, 7, 19, 0, 0, 1031, 1029, 1,
		0, 0, 0, 1031, 1030, 1, 0, 0, 0, 1032, 271, 1, 0, 0, 0, 1033, 1037, 8,
		20, 0, 0, 1034, 1035, 5, 92, 0, 0, 1035, 1037, 3, 260, 127, 0, 1036, 1033,
		1, 0, 0, 0, 1036, 1034, 1, 0, 0, 0, 1037, 273, 1, 0, 0, 0, 1038, 1042,
		8, 21, 0, 0, 1039, 1040, 5, 92, 0, 0, 1040, 1042, 3, 260, 127, 0, 1041,
		1038, 1, 0, 0, 0, 1041, 1039, 1, 0, 0, 0, 1042, 275, 1, 0, 0, 0, 1043,
		1044, 8, 22, 0, 0, 1044, 277, 1, 0, 0, 0, 1045, 1047, 3, 290, 142, 0, 1046,
		1045, 1, 0, 0, 0, 1046, 1047, 1, 0, 0, 0, 1047, 1048, 1, 0, 0, 0, 1048,
		1049, 5, 34, 0, 0, 1049, 279, 1, 0, 0, 0, 1050, 1052, 3, 290, 142, 0, 1051,
		1050, 1, 0, 0, 0, 1051, 1052, 1, 0, 0, 0, 1052, 1053, 1, 0, 0, 0, 1053,
		1054, 5, 96, 0, 0, 1054, 281, 1, 0, 0, 0, 1055, 1057, 3, 290, 142, 0, 1056,
		1055, 1, 0, 0, 0, 1056, 1057, 1, 0, 0, 0, 1057, 1058, 1, 0, 0, 0, 1058,
		1062, 5, 34, 0, 0, 1059, 1061, 3, 272, 133, 0, 1060, 1059, 1, 0, 0, 0,
		1061, 1064, 1, 0, 0, 0, 1062, 1060, 1, 0, 0, 0, 1062, 1063, 1, 0, 0, 0,
		1063, 1065, 1, 0, 0, 0, 1064, 1062, 1, 0, 0, 0, 1065, 1066, 5, 34, 0, 0,
		1066, 283, 1, 0, 0, 0, 1067, 1069, 3, 290, 142, 0, 1068, 1067, 1, 0, 0,
		0, 1068, 1069, 1, 0, 0, 0, 1069, 1070, 1, 0, 0, 0, 1070, 1071, 5, 39, 0,
		0, 1071, 1085, 5, 39, 0, 0, 1072, 1074, 3, 290, 142, 0, 1073, 1072, 1,
		0, 0, 0, 1073, 1074, 1, 0, 0, 0, 1074, 1075, 1, 0, 0, 0, 1075, 1076, 5,
		39, 0, 0, 1076, 1078, 3, 274, 134, 0, 1077, 1079, 3, 274, 134, 0, 1078,
		1077, 1, 0, 0, 0, 1079, 1080, 1, 0, 0, 0, 1080, 1078, 1, 0, 0, 0, 1080,
		1081, 1, 0, 0, 0, 1081, 1082, 1, 0, 0, 0, 1082, 1083, 5, 39, 0, 0, 1083,
		1085, 1, 0, 0, 0, 1084, 1068, 1, 0, 0, 0, 1084, 1073, 1, 0, 0, 0, 1085,
		285, 1, 0, 0, 0, 1086, 1088, 3, 290, 142, 0, 1087, 1086, 1, 0, 0, 0, 1087,
		1088, 1, 0, 0, 0, 1088, 1089, 1, 0, 0, 0, 1089, 1093, 5, 96, 0, 0, 1090,
		1092, 3, 276, 135, 0, 1091, 1090, 1, 0, 0, 0, 1092, 1095, 1, 0, 0, 0, 1093,
		1091, 1, 0, 0, 0, 1093, 1094, 1, 0, 0, 0, 1094, 1096, 1, 0, 0, 0, 1095,
		1093, 1, 0, 0, 0, 1096, 1097, 5, 96, 0, 0, 1097, 287, 1, 0, 0, 0, 1098,
		1099, 5, 48, 0, 0, 1099, 1100, 5, 104, 0, 0, 1100, 1104, 1, 0, 0, 0, 1101,
		1102, 3, 256, 125, 0, 1102, 1103, 3, 256, 125, 0, 1103, 1105, 1, 0, 0,
		0, 1104, 1101, 1, 0, 0, 0, 1105, 1106, 1, 0, 0, 0, 1106, 1104, 1, 0, 0,
		0, 1106, 1107, 1, 0, 0, 0, 1107, 289, 1, 0, 0, 0, 1108, 1109, 7, 23, 0,
		0, 1109, 291, 1, 0, 0, 0, 52, 0, 1, 2, 3, 4, 5, 443, 500, 588, 620, 628,
		772, 790, 805, 810, 822, 828, 834, 841, 847, 849, 876, 892, 909, 928, 944,
		947, 956, 968, 976, 982, 989, 991, 998, 1007, 1010, 1015, 1019, 1031, 1036,
		1041, 1046, 1051, 1056, 1062, 1068, 1073, 1080, 1084, 1087, 1093, 1106,
		18, 4, 0, 0, 6, 0, 0, 5, 4, 0, 1, 103, 0, 5, 1, 0, 1, 104, 1, 5, 2, 0,
		1, 105, 2, 5, 3, 0, 1, 108, 3, 5, 0, 0, 1, 111, 4, 1, 114, 5, 1, 117, 6,
		1, 117, 7, 1, 118, 8, 5, 5, 0, 1, 119, 9,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// YaklangLexerInit initializes any static state used to implement YaklangLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewYaklangLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func YaklangLexerInit() {
	staticData := &yaklanglexerLexerStaticData
	staticData.once.Do(yaklanglexerLexerInit)
}

// NewYaklangLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewYaklangLexer(input antlr.CharStream) *YaklangLexer {
	YaklangLexerInit()
	l := new(YaklangLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &yaklanglexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "YaklangLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// YaklangLexer tokens.
const (
	YaklangLexerPanic                                       = 1
	YaklangLexerRecover                                     = 2
	YaklangLexerIf                                          = 3
	YaklangLexerElif                                        = 4
	YaklangLexerElse                                        = 5
	YaklangLexerSwitch                                      = 6
	YaklangLexerCase                                        = 7
	YaklangLexerDefault                                     = 8
	YaklangLexerFor                                         = 9
	YaklangLexerContinue                                    = 10
	YaklangLexerBreak                                       = 11
	YaklangLexerReturn                                      = 12
	YaklangLexerInclude                                     = 13
	YaklangLexerTry                                         = 14
	YaklangLexerCatch                                       = 15
	YaklangLexerFinally                                     = 16
	YaklangLexerImportmod                                   = 17
	YaklangLexerAs                                          = 18
	YaklangLexerExport                                      = 19
	YaklangLexerDefer                                       = 20
	YaklangLexerGo                                          = 21
	YaklangLexerRange                                       = 22
	YaklangLexerFunc                                        = 23
	YaklangLexerMap                                         = 24
	YaklangLexerChan                                        = 25
	YaklangLexerClass                                       = 26
	YaklangLexerNew                                         = 27
	YaklangLexerMake                                        = 28
	YaklangLexerTrue                                        = 29
	YaklangLexerFalse                                       = 30
	YaklangLexerIn                                          = 31
	YaklangLexerNotLiteral                                  = 32
	YaklangLexerAssert                                      = 33
	YaklangLexerVar                                         = 34
	YaklangLexerVarTypeName                                 = 35
	YaklangLexerUndefinedLiteral                            = 36
	YaklangLexerFallthrough                                 = 37
	YaklangLexerNilLiteral                                  = 38
	YaklangLexerIdentifier                                  = 39
	YaklangLexerIdentifierWithDollar                        = 40
	YaklangLexerMul                                         = 41
	YaklangLexerDiv                                         = 42
	YaklangLexerMod                                         = 43
	YaklangLexerLtLt                                        = 44
	YaklangLexerLt                                          = 45
	YaklangLexerGtGt                                        = 46
	YaklangLexerGt                                          = 47
	YaklangLexerAmp                                         = 48
	YaklangLexerAmpNot                                      = 49
	YaklangLexerPlus                                        = 50
	YaklangLexerSub                                         = 51
	YaklangLexerXor                                         = 52
	YaklangLexerXand                                        = 53
	YaklangLexerEq                                          = 54
	YaklangLexerLtEq                                        = 55
	YaklangLexerGtEq                                        = 56
	YaklangLexerNeq                                         = 57
	YaklangLexerChanIn                                      = 58
	YaklangLexerLogicAnd                                    = 59
	YaklangLexerLogicOr                                     = 60
	YaklangLexerQuestion                                    = 61
	YaklangLexerColon                                       = 62
	YaklangLexerLBracket                                    = 63
	YaklangLexerRBracket                                    = 64
	YaklangLexerLParen                                      = 65
	YaklangLexerRParen                                      = 66
	YaklangLexerLBrace                                      = 67
	YaklangLexerTemplateCloseBrace                          = 68
	YaklangLexerRBrace                                      = 69
	YaklangLexerComma                                       = 70
	YaklangLexerAssignEq                                    = 71
	YaklangLexerWavy                                        = 72
	YaklangLexerColonAssignEq                               = 73
	YaklangLexerPlusPlus                                    = 74
	YaklangLexerSubSub                                      = 75
	YaklangLexerPlusEq                                      = 76
	YaklangLexerMinusEq                                     = 77
	YaklangLexerMulEq                                       = 78
	YaklangLexerDivEq                                       = 79
	YaklangLexerModEq                                       = 80
	YaklangLexerBitOrEq                                     = 81
	YaklangLexerLtLtEq                                      = 82
	YaklangLexerGtGtEq                                      = 83
	YaklangLexerAmpEq                                       = 84
	YaklangLexerBitAndEq                                    = 85
	YaklangLexerBitAndNotEq                                 = 86
	YaklangLexerSemiColon                                   = 87
	YaklangLexerEllipsis                                    = 88
	YaklangLexerEqGt                                        = 89
	YaklangLexerLtGt                                        = 90
	YaklangLexerNot                                         = 91
	YaklangLexerDot                                         = 92
	YaklangLexerWS                                          = 93
	YaklangLexerCommentStart                                = 94
	YaklangLexerCommentEnd                                  = 95
	YaklangLexerBackTickL                                   = 96
	YaklangLexerCOMMENT                                     = 97
	YaklangLexerStartNowDoc                                 = 98
	YaklangLexerLINE_COMMENT                                = 99
	YaklangLexerLF                                          = 100
	YaklangLexerEOS                                         = 101
	YaklangLexerIntegerLiteral                              = 102
	YaklangLexerFloatLiteral                                = 103
	YaklangLexerTemplateSingleQuoteStringStart              = 104
	YaklangLexerTemplateDoubleQuoteStringStart              = 105
	YaklangLexerTemplateBackTickStringStart                 = 106
	YaklangLexerStringLiteral                               = 107
	YaklangLexerCharacterLiteral                            = 108
	YaklangLexerTemplateSingleQuoteStringCharacterStringEnd = 109
	YaklangLexerTemplateSingleQuoteStringCharacter          = 110
	YaklangLexerTemplateSingleQuoteStringStartExpression    = 111
	YaklangLexerTemplateDoubleQuoteStringCharacterStringEnd = 112
	YaklangLexerTemplateDoubleQuoteStringCharacter          = 113
	YaklangLexerTemplateDoubleQuoteStringStartExpression    = 114
	YaklangLexerTemplateBackTickStringCharacterStringEnd    = 115
	YaklangLexerTemplateBackTickStringCharacter             = 116
	YaklangLexerTemplateBackTickStringStartExpression       = 117
	YaklangLexerHereDocIdentifierName                       = 118
	YaklangLexerHereDocIdentifierBreak                      = 119
	YaklangLexerEndDoc                                      = 120
	YaklangLexerHereDocText                                 = 121
)

// YaklangLexer modes.
const (
	YaklangLexerTEMPLATE_SINGLE_QUOTE_MODE = iota + 1
	YaklangLexerTEMPLATE_DOUBLE_QUOTE_MODE
	YaklangLexerTEMPLATE_BACKTICK_MODE
	YaklangLexerHereDocIdentifier
	YaklangLexerHereDoc
)

func (l *YaklangLexer) Action(localctx antlr.RuleContext, ruleIndex, actionIndex int) {
	switch ruleIndex {
	case 103:
		l.TemplateSingleQuoteStringStart_Action(localctx, actionIndex)

	case 104:
		l.TemplateDoubleQuoteStringStart_Action(localctx, actionIndex)

	case 105:
		l.TemplateBackTickStringStart_Action(localctx, actionIndex)

	case 108:
		l.TemplateSingleQuoteStringCharacterStringEnd_Action(localctx, actionIndex)

	case 111:
		l.TemplateDoubleQuoteStringCharacterStringEnd_Action(localctx, actionIndex)

	case 114:
		l.TemplateBackTickStringCharacterStringEnd_Action(localctx, actionIndex)

	case 117:
		l.HereDocIdentifierName_Action(localctx, actionIndex)

	case 118:
		l.HereDocIdentifierBreak_Action(localctx, actionIndex)

	case 119:
		l.EndDoc_Action(localctx, actionIndex)

	default:
		panic("No registered action for: " + fmt.Sprint(ruleIndex))
	}
}

func (l *YaklangLexer) TemplateSingleQuoteStringStart_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 0:
		this.IncreaseTemplateDepth()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *YaklangLexer) TemplateDoubleQuoteStringStart_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 1:
		this.IncreaseTemplateDepth()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *YaklangLexer) TemplateBackTickStringStart_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 2:
		this.IncreaseTemplateDepth()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *YaklangLexer) TemplateSingleQuoteStringCharacterStringEnd_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 3:
		this.DecreaseTemplateDepth()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *YaklangLexer) TemplateDoubleQuoteStringCharacterStringEnd_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 4:
		this.DecreaseTemplateDepth()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *YaklangLexer) TemplateBackTickStringCharacterStringEnd_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 5:
		this.DecreaseTemplateDepth()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *YaklangLexer) HereDocIdentifierName_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 6:
		this.recordHereDocLabel()

	case 7:
		this.recordHereDocLabel()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *YaklangLexer) HereDocIdentifierBreak_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 8:
		this.recordHereDocCRLF()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *YaklangLexer) EndDoc_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 9:
		this.DocEndDistribute()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}

func (l *YaklangLexer) Sempred(localctx antlr.RuleContext, ruleIndex, predIndex int) bool {
	switch ruleIndex {
	case 67:
		return l.TemplateCloseBrace_Sempred(localctx, predIndex)

	default:
		panic("No registered predicate for: " + fmt.Sprint(ruleIndex))
	}
}

func (p *YaklangLexer) TemplateCloseBrace_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	this := p
	_ = this

	switch predIndex {
	case 0:
		return this.IsInTemplateString()

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

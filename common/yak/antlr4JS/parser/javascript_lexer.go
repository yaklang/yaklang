// Code generated from ./JavaScriptLexer.g4 by ANTLR 4.13.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type JavaScriptLexer struct {
	JavaScriptLexerBase
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var JavaScriptLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func javascriptlexerLexerInit() {
	staticData := &JavaScriptLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "ERROR",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE", "TEMPLATE",
	}
	staticData.LiteralNames = []string{
		"", "", "", "", "", "'['", "']'", "'('", "')'", "'{'", "", "'}'", "';'",
		"','", "'='", "'?'", "':'", "'...'", "'.'", "'++'", "'--'", "'+'", "'-'",
		"'~'", "'!'", "'*'", "'/'", "'%'", "'**'", "'??'", "'#'", "'>>'", "'<<'",
		"'>>>'", "'<'", "'>'", "'<='", "'>='", "'=='", "'!='", "'==='", "'!=='",
		"'&'", "'^'", "'|'", "'&&'", "'||'", "'*='", "'/='", "'%='", "'+='",
		"'-='", "'<<='", "'>>='", "'>>>='", "'&='", "'^='", "'|='", "'**='",
		"'=>'", "'null'", "", "", "", "", "", "", "", "", "", "", "'break'",
		"'do'", "'instanceof'", "'typeof'", "'case'", "'else'", "'new'", "'var'",
		"'catch'", "'finally'", "'return'", "'void'", "'continue'", "'for'",
		"'switch'", "'while'", "'debugger'", "'function'", "'this'", "'with'",
		"'default'", "'if'", "'throw'", "'delete'", "'in'", "'try'", "'as'",
		"'from'", "'get'", "'set'", "'class'", "'enum'", "'extends'", "'super'",
		"'const'", "'export'", "'import'", "'async'", "'await'", "'yield'",
		"'implements'", "", "", "'private'", "'public'", "'interface'", "'package'",
		"'protected'", "'static'", "", "", "", "", "", "", "", "", "'${'",
	}
	staticData.SymbolicNames = []string{
		"", "HashBangLine", "MultiLineComment", "SingleLineComment", "RegularExpressionLiteral",
		"OpenBracket", "CloseBracket", "OpenParen", "CloseParen", "OpenBrace",
		"TemplateCloseBrace", "CloseBrace", "SemiColon", "Comma", "Assign",
		"QuestionMark", "Colon", "Ellipsis", "Dot", "PlusPlus", "MinusMinus",
		"Plus", "Minus", "BitNot", "Not", "Multiply", "Divide", "Modulus", "Power",
		"NullCoalesce", "Hashtag", "RightShiftArithmetic", "LeftShiftArithmetic",
		"RightShiftLogical", "LessThan", "MoreThan", "LessThanEquals", "GreaterThanEquals",
		"Equals_", "NotEquals", "IdentityEquals", "IdentityNotEquals", "BitAnd",
		"BitXOr", "BitOr", "And", "Or", "MultiplyAssign", "DivideAssign", "ModulusAssign",
		"PlusAssign", "MinusAssign", "LeftShiftArithmeticAssign", "RightShiftArithmeticAssign",
		"RightShiftLogicalAssign", "BitAndAssign", "BitXorAssign", "BitOrAssign",
		"PowerAssign", "ARROW", "NullLiteral", "BooleanLiteral", "DecimalLiteral",
		"HexIntegerLiteral", "OctalIntegerLiteral", "OctalIntegerLiteral2",
		"BinaryIntegerLiteral", "BigHexIntegerLiteral", "BigOctalIntegerLiteral",
		"BigBinaryIntegerLiteral", "BigDecimalIntegerLiteral", "Break", "Do",
		"Instanceof", "Typeof", "Case", "Else", "New", "Var", "Catch", "Finally",
		"Return", "Void", "Continue", "For", "Switch", "While", "Debugger",
		"Function_", "This", "With", "Default", "If", "Throw", "Delete", "In",
		"Try", "As", "From", "Get", "Set", "Class", "Enum", "Extends", "Super",
		"Const", "Export", "Import", "Async", "Await", "Yield", "Implements",
		"StrictLet", "NonStrictLet", "Private", "Public", "Interface", "Package",
		"Protected", "Static", "Identifier", "StringLiteral", "BackTick", "WhiteSpaces",
		"LineTerminator", "HtmlComment", "CDataComment", "UnexpectedCharacter",
		"TemplateStringStartExpression", "TemplateStringAtom",
	}
	staticData.RuleNames = []string{
		"HashBangLine", "MultiLineComment", "SingleLineComment", "RegularExpressionLiteral",
		"OpenBracket", "CloseBracket", "OpenParen", "CloseParen", "OpenBrace",
		"TemplateCloseBrace", "CloseBrace", "SemiColon", "Comma", "Assign",
		"QuestionMark", "Colon", "Ellipsis", "Dot", "PlusPlus", "MinusMinus",
		"Plus", "Minus", "BitNot", "Not", "Multiply", "Divide", "Modulus", "Power",
		"NullCoalesce", "Hashtag", "RightShiftArithmetic", "LeftShiftArithmetic",
		"RightShiftLogical", "LessThan", "MoreThan", "LessThanEquals", "GreaterThanEquals",
		"Equals_", "NotEquals", "IdentityEquals", "IdentityNotEquals", "BitAnd",
		"BitXOr", "BitOr", "And", "Or", "MultiplyAssign", "DivideAssign", "ModulusAssign",
		"PlusAssign", "MinusAssign", "LeftShiftArithmeticAssign", "RightShiftArithmeticAssign",
		"RightShiftLogicalAssign", "BitAndAssign", "BitXorAssign", "BitOrAssign",
		"PowerAssign", "ARROW", "NullLiteral", "BooleanLiteral", "DecimalLiteral",
		"HexIntegerLiteral", "OctalIntegerLiteral", "OctalIntegerLiteral2",
		"BinaryIntegerLiteral", "BigHexIntegerLiteral", "BigOctalIntegerLiteral",
		"BigBinaryIntegerLiteral", "BigDecimalIntegerLiteral", "Break", "Do",
		"Instanceof", "Typeof", "Case", "Else", "New", "Var", "Catch", "Finally",
		"Return", "Void", "Continue", "For", "Switch", "While", "Debugger",
		"Function_", "This", "With", "Default", "If", "Throw", "Delete", "In",
		"Try", "As", "From", "Get", "Set", "Class", "Enum", "Extends", "Super",
		"Const", "Export", "Import", "Async", "Await", "Yield", "Implements",
		"StrictLet", "NonStrictLet", "Private", "Public", "Interface", "Package",
		"Protected", "Static", "Identifier", "StringLiteral", "BackTick", "WhiteSpaces",
		"LineTerminator", "HtmlComment", "CDataComment", "UnexpectedCharacter",
		"BackTickInside", "TemplateStringStartExpression", "TemplateStringAtom",
		"DoubleStringCharacter", "SingleStringCharacter", "EscapeSequence",
		"CharacterEscapeSequence", "HexEscapeSequence", "UnicodeEscapeSequence",
		"ExtendedUnicodeEscapeSequence", "SingleEscapeCharacter", "NonEscapeCharacter",
		"EscapeCharacter", "LineContinuation", "HexDigit", "DecimalIntegerLiteral",
		"ExponentPart", "IdentifierPart", "IdentifierStart", "RegularExpressionFirstChar",
		"RegularExpressionChar", "RegularExpressionClassChar", "RegularExpressionBackslashSequence",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 129, 1169, 6, -1, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3,
		7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9,
		7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7,
		14, 2, 15, 7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19,
		2, 20, 7, 20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2,
		25, 7, 25, 2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30,
		7, 30, 2, 31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7,
		35, 2, 36, 7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40,
		2, 41, 7, 41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2,
		46, 7, 46, 2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51,
		7, 51, 2, 52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7,
		56, 2, 57, 7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61,
		2, 62, 7, 62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2,
		67, 7, 67, 2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 2, 71, 7, 71, 2, 72,
		7, 72, 2, 73, 7, 73, 2, 74, 7, 74, 2, 75, 7, 75, 2, 76, 7, 76, 2, 77, 7,
		77, 2, 78, 7, 78, 2, 79, 7, 79, 2, 80, 7, 80, 2, 81, 7, 81, 2, 82, 7, 82,
		2, 83, 7, 83, 2, 84, 7, 84, 2, 85, 7, 85, 2, 86, 7, 86, 2, 87, 7, 87, 2,
		88, 7, 88, 2, 89, 7, 89, 2, 90, 7, 90, 2, 91, 7, 91, 2, 92, 7, 92, 2, 93,
		7, 93, 2, 94, 7, 94, 2, 95, 7, 95, 2, 96, 7, 96, 2, 97, 7, 97, 2, 98, 7,
		98, 2, 99, 7, 99, 2, 100, 7, 100, 2, 101, 7, 101, 2, 102, 7, 102, 2, 103,
		7, 103, 2, 104, 7, 104, 2, 105, 7, 105, 2, 106, 7, 106, 2, 107, 7, 107,
		2, 108, 7, 108, 2, 109, 7, 109, 2, 110, 7, 110, 2, 111, 7, 111, 2, 112,
		7, 112, 2, 113, 7, 113, 2, 114, 7, 114, 2, 115, 7, 115, 2, 116, 7, 116,
		2, 117, 7, 117, 2, 118, 7, 118, 2, 119, 7, 119, 2, 120, 7, 120, 2, 121,
		7, 121, 2, 122, 7, 122, 2, 123, 7, 123, 2, 124, 7, 124, 2, 125, 7, 125,
		2, 126, 7, 126, 2, 127, 7, 127, 2, 128, 7, 128, 2, 129, 7, 129, 2, 130,
		7, 130, 2, 131, 7, 131, 2, 132, 7, 132, 2, 133, 7, 133, 2, 134, 7, 134,
		2, 135, 7, 135, 2, 136, 7, 136, 2, 137, 7, 137, 2, 138, 7, 138, 2, 139,
		7, 139, 2, 140, 7, 140, 2, 141, 7, 141, 2, 142, 7, 142, 2, 143, 7, 143,
		2, 144, 7, 144, 2, 145, 7, 145, 2, 146, 7, 146, 2, 147, 7, 147, 2, 148,
		7, 148, 2, 149, 7, 149, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 5, 0, 308, 8, 0,
		10, 0, 12, 0, 311, 9, 0, 1, 1, 1, 1, 1, 1, 1, 1, 5, 1, 317, 8, 1, 10, 1,
		12, 1, 320, 9, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
		5, 2, 331, 8, 2, 10, 2, 12, 2, 334, 9, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3,
		5, 3, 341, 8, 3, 10, 3, 12, 3, 344, 9, 3, 1, 3, 1, 3, 1, 3, 5, 3, 349,
		8, 3, 10, 3, 12, 3, 352, 9, 3, 1, 4, 1, 4, 1, 5, 1, 5, 1, 6, 1, 6, 1, 7,
		1, 7, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1,
		10, 1, 11, 1, 11, 1, 12, 1, 12, 1, 13, 1, 13, 1, 14, 1, 14, 1, 15, 1, 15,
		1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 19, 1,
		19, 1, 19, 1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 1, 22, 1, 23, 1, 23, 1, 24,
		1, 24, 1, 25, 1, 25, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 28, 1, 28, 1,
		28, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 32, 1, 32,
		1, 32, 1, 32, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 36, 1,
		36, 1, 36, 1, 37, 1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1, 39, 1, 39, 1, 39,
		1, 39, 1, 40, 1, 40, 1, 40, 1, 40, 1, 41, 1, 41, 1, 42, 1, 42, 1, 43, 1,
		43, 1, 44, 1, 44, 1, 44, 1, 45, 1, 45, 1, 45, 1, 46, 1, 46, 1, 46, 1, 47,
		1, 47, 1, 47, 1, 48, 1, 48, 1, 48, 1, 49, 1, 49, 1, 49, 1, 50, 1, 50, 1,
		50, 1, 51, 1, 51, 1, 51, 1, 51, 1, 52, 1, 52, 1, 52, 1, 52, 1, 53, 1, 53,
		1, 53, 1, 53, 1, 53, 1, 54, 1, 54, 1, 54, 1, 55, 1, 55, 1, 55, 1, 56, 1,
		56, 1, 56, 1, 57, 1, 57, 1, 57, 1, 57, 1, 58, 1, 58, 1, 58, 1, 59, 1, 59,
		1, 59, 1, 59, 1, 59, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60, 1,
		60, 1, 60, 3, 60, 521, 8, 60, 1, 61, 1, 61, 1, 61, 1, 61, 5, 61, 527, 8,
		61, 10, 61, 12, 61, 530, 9, 61, 1, 61, 3, 61, 533, 8, 61, 1, 61, 1, 61,
		1, 61, 5, 61, 538, 8, 61, 10, 61, 12, 61, 541, 9, 61, 1, 61, 3, 61, 544,
		8, 61, 1, 61, 1, 61, 3, 61, 548, 8, 61, 3, 61, 550, 8, 61, 1, 62, 1, 62,
		1, 62, 1, 62, 5, 62, 556, 8, 62, 10, 62, 12, 62, 559, 9, 62, 1, 63, 1,
		63, 4, 63, 563, 8, 63, 11, 63, 12, 63, 564, 1, 63, 1, 63, 1, 64, 1, 64,
		1, 64, 1, 64, 5, 64, 573, 8, 64, 10, 64, 12, 64, 576, 9, 64, 1, 65, 1,
		65, 1, 65, 1, 65, 5, 65, 582, 8, 65, 10, 65, 12, 65, 585, 9, 65, 1, 66,
		1, 66, 1, 66, 1, 66, 5, 66, 591, 8, 66, 10, 66, 12, 66, 594, 9, 66, 1,
		66, 1, 66, 1, 67, 1, 67, 1, 67, 1, 67, 5, 67, 602, 8, 67, 10, 67, 12, 67,
		605, 9, 67, 1, 67, 1, 67, 1, 68, 1, 68, 1, 68, 1, 68, 5, 68, 613, 8, 68,
		10, 68, 12, 68, 616, 9, 68, 1, 68, 1, 68, 1, 69, 1, 69, 1, 69, 1, 70, 1,
		70, 1, 70, 1, 70, 1, 70, 1, 70, 1, 71, 1, 71, 1, 71, 1, 72, 1, 72, 1, 72,
		1, 72, 1, 72, 1, 72, 1, 72, 1, 72, 1, 72, 1, 72, 1, 72, 1, 73, 1, 73, 1,
		73, 1, 73, 1, 73, 1, 73, 1, 73, 1, 74, 1, 74, 1, 74, 1, 74, 1, 74, 1, 75,
		1, 75, 1, 75, 1, 75, 1, 75, 1, 76, 1, 76, 1, 76, 1, 76, 1, 77, 1, 77, 1,
		77, 1, 77, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 79, 1, 79, 1, 79,
		1, 79, 1, 79, 1, 79, 1, 79, 1, 79, 1, 80, 1, 80, 1, 80, 1, 80, 1, 80, 1,
		80, 1, 80, 1, 81, 1, 81, 1, 81, 1, 81, 1, 81, 1, 82, 1, 82, 1, 82, 1, 82,
		1, 82, 1, 82, 1, 82, 1, 82, 1, 82, 1, 83, 1, 83, 1, 83, 1, 83, 1, 84, 1,
		84, 1, 84, 1, 84, 1, 84, 1, 84, 1, 84, 1, 85, 1, 85, 1, 85, 1, 85, 1, 85,
		1, 85, 1, 86, 1, 86, 1, 86, 1, 86, 1, 86, 1, 86, 1, 86, 1, 86, 1, 86, 1,
		87, 1, 87, 1, 87, 1, 87, 1, 87, 1, 87, 1, 87, 1, 87, 1, 87, 1, 88, 1, 88,
		1, 88, 1, 88, 1, 88, 1, 89, 1, 89, 1, 89, 1, 89, 1, 89, 1, 90, 1, 90, 1,
		90, 1, 90, 1, 90, 1, 90, 1, 90, 1, 90, 1, 91, 1, 91, 1, 91, 1, 92, 1, 92,
		1, 92, 1, 92, 1, 92, 1, 92, 1, 93, 1, 93, 1, 93, 1, 93, 1, 93, 1, 93, 1,
		93, 1, 94, 1, 94, 1, 94, 1, 95, 1, 95, 1, 95, 1, 95, 1, 96, 1, 96, 1, 96,
		1, 97, 1, 97, 1, 97, 1, 97, 1, 97, 1, 98, 1, 98, 1, 98, 1, 98, 1, 99, 1,
		99, 1, 99, 1, 99, 1, 100, 1, 100, 1, 100, 1, 100, 1, 100, 1, 100, 1, 101,
		1, 101, 1, 101, 1, 101, 1, 101, 1, 102, 1, 102, 1, 102, 1, 102, 1, 102,
		1, 102, 1, 102, 1, 102, 1, 103, 1, 103, 1, 103, 1, 103, 1, 103, 1, 103,
		1, 104, 1, 104, 1, 104, 1, 104, 1, 104, 1, 104, 1, 105, 1, 105, 1, 105,
		1, 105, 1, 105, 1, 105, 1, 105, 1, 106, 1, 106, 1, 106, 1, 106, 1, 106,
		1, 106, 1, 106, 1, 107, 1, 107, 1, 107, 1, 107, 1, 107, 1, 107, 1, 108,
		1, 108, 1, 108, 1, 108, 1, 108, 1, 108, 1, 109, 1, 109, 1, 109, 1, 109,
		1, 109, 1, 109, 1, 110, 1, 110, 1, 110, 1, 110, 1, 110, 1, 110, 1, 110,
		1, 110, 1, 110, 1, 110, 1, 110, 1, 110, 1, 110, 1, 111, 1, 111, 1, 111,
		1, 111, 1, 111, 1, 111, 1, 112, 1, 112, 1, 112, 1, 112, 1, 112, 1, 112,
		1, 113, 1, 113, 1, 113, 1, 113, 1, 113, 1, 113, 1, 113, 1, 113, 1, 113,
		1, 113, 1, 114, 1, 114, 1, 114, 1, 114, 1, 114, 1, 114, 1, 114, 1, 114,
		1, 114, 1, 115, 1, 115, 1, 115, 1, 115, 1, 115, 1, 115, 1, 115, 1, 115,
		1, 115, 1, 115, 1, 115, 1, 115, 1, 116, 1, 116, 1, 116, 1, 116, 1, 116,
		1, 116, 1, 116, 1, 116, 1, 116, 1, 116, 1, 117, 1, 117, 1, 117, 1, 117,
		1, 117, 1, 117, 1, 117, 1, 117, 1, 117, 1, 117, 1, 117, 1, 117, 1, 118,
		1, 118, 1, 118, 1, 118, 1, 118, 1, 118, 1, 118, 1, 118, 1, 118, 1, 119,
		1, 119, 5, 119, 947, 8, 119, 10, 119, 12, 119, 950, 9, 119, 1, 120, 1,
		120, 5, 120, 954, 8, 120, 10, 120, 12, 120, 957, 9, 120, 1, 120, 1, 120,
		1, 120, 5, 120, 962, 8, 120, 10, 120, 12, 120, 965, 9, 120, 1, 120, 3,
		120, 968, 8, 120, 1, 120, 1, 120, 1, 121, 1, 121, 1, 121, 1, 121, 1, 121,
		1, 122, 4, 122, 978, 8, 122, 11, 122, 12, 122, 979, 1, 122, 1, 122, 1,
		123, 1, 123, 1, 123, 1, 123, 1, 124, 1, 124, 1, 124, 1, 124, 1, 124, 1,
		124, 5, 124, 994, 8, 124, 10, 124, 12, 124, 997, 9, 124, 1, 124, 1, 124,
		1, 124, 1, 124, 1, 124, 1, 124, 1, 125, 1, 125, 1, 125, 1, 125, 1, 125,
		1, 125, 1, 125, 1, 125, 1, 125, 1, 125, 1, 125, 5, 125, 1016, 8, 125, 10,
		125, 12, 125, 1019, 9, 125, 1, 125, 1, 125, 1, 125, 1, 125, 1, 125, 1,
		125, 1, 126, 1, 126, 1, 126, 1, 126, 1, 127, 1, 127, 1, 127, 1, 127, 1,
		127, 1, 127, 1, 128, 1, 128, 1, 128, 1, 128, 1, 128, 1, 129, 1, 129, 1,
		130, 1, 130, 1, 130, 1, 130, 3, 130, 1048, 8, 130, 1, 131, 1, 131, 1, 131,
		1, 131, 3, 131, 1054, 8, 131, 1, 132, 1, 132, 1, 132, 1, 132, 1, 132, 3,
		132, 1061, 8, 132, 1, 133, 1, 133, 3, 133, 1065, 8, 133, 1, 134, 1, 134,
		1, 134, 1, 134, 1, 135, 1, 135, 1, 135, 1, 135, 1, 135, 1, 135, 1, 135,
		1, 135, 1, 135, 1, 135, 4, 135, 1081, 8, 135, 11, 135, 12, 135, 1082, 1,
		135, 1, 135, 3, 135, 1087, 8, 135, 1, 136, 1, 136, 1, 136, 4, 136, 1092,
		8, 136, 11, 136, 12, 136, 1093, 1, 136, 1, 136, 1, 137, 1, 137, 1, 138,
		1, 138, 1, 139, 1, 139, 3, 139, 1104, 8, 139, 1, 140, 1, 140, 1, 140, 1,
		141, 1, 141, 1, 142, 1, 142, 1, 142, 5, 142, 1114, 8, 142, 10, 142, 12,
		142, 1117, 9, 142, 3, 142, 1119, 8, 142, 1, 143, 1, 143, 3, 143, 1123,
		8, 143, 1, 143, 4, 143, 1126, 8, 143, 11, 143, 12, 143, 1127, 1, 144, 1,
		144, 3, 144, 1132, 8, 144, 1, 145, 1, 145, 1, 145, 3, 145, 1137, 8, 145,
		1, 146, 1, 146, 1, 146, 1, 146, 5, 146, 1143, 8, 146, 10, 146, 12, 146,
		1146, 9, 146, 1, 146, 3, 146, 1149, 8, 146, 1, 147, 1, 147, 1, 147, 1,
		147, 5, 147, 1155, 8, 147, 10, 147, 12, 147, 1158, 9, 147, 1, 147, 3, 147,
		1161, 8, 147, 1, 148, 1, 148, 3, 148, 1165, 8, 148, 1, 149, 1, 149, 1,
		149, 3, 318, 995, 1017, 0, 150, 2, 1, 4, 2, 6, 3, 8, 4, 10, 5, 12, 6, 14,
		7, 16, 8, 18, 9, 20, 10, 22, 11, 24, 12, 26, 13, 28, 14, 30, 15, 32, 16,
		34, 17, 36, 18, 38, 19, 40, 20, 42, 21, 44, 22, 46, 23, 48, 24, 50, 25,
		52, 26, 54, 27, 56, 28, 58, 29, 60, 30, 62, 31, 64, 32, 66, 33, 68, 34,
		70, 35, 72, 36, 74, 37, 76, 38, 78, 39, 80, 40, 82, 41, 84, 42, 86, 43,
		88, 44, 90, 45, 92, 46, 94, 47, 96, 48, 98, 49, 100, 50, 102, 51, 104,
		52, 106, 53, 108, 54, 110, 55, 112, 56, 114, 57, 116, 58, 118, 59, 120,
		60, 122, 61, 124, 62, 126, 63, 128, 64, 130, 65, 132, 66, 134, 67, 136,
		68, 138, 69, 140, 70, 142, 71, 144, 72, 146, 73, 148, 74, 150, 75, 152,
		76, 154, 77, 156, 78, 158, 79, 160, 80, 162, 81, 164, 82, 166, 83, 168,
		84, 170, 85, 172, 86, 174, 87, 176, 88, 178, 89, 180, 90, 182, 91, 184,
		92, 186, 93, 188, 94, 190, 95, 192, 96, 194, 97, 196, 98, 198, 99, 200,
		100, 202, 101, 204, 102, 206, 103, 208, 104, 210, 105, 212, 106, 214, 107,
		216, 108, 218, 109, 220, 110, 222, 111, 224, 112, 226, 113, 228, 114, 230,
		115, 232, 116, 234, 117, 236, 118, 238, 119, 240, 120, 242, 121, 244, 122,
		246, 123, 248, 124, 250, 125, 252, 126, 254, 127, 256, 0, 258, 128, 260,
		129, 262, 0, 264, 0, 266, 0, 268, 0, 270, 0, 272, 0, 274, 0, 276, 0, 278,
		0, 280, 0, 282, 0, 284, 0, 286, 0, 288, 0, 290, 0, 292, 0, 294, 0, 296,
		0, 298, 0, 300, 0, 2, 0, 1, 27, 3, 0, 10, 10, 13, 13, 8232, 8233, 1, 0,
		48, 57, 2, 0, 48, 57, 95, 95, 2, 0, 88, 88, 120, 120, 3, 0, 48, 57, 65,
		70, 97, 102, 1, 0, 48, 55, 2, 0, 79, 79, 111, 111, 2, 0, 48, 55, 95, 95,
		2, 0, 66, 66, 98, 98, 1, 0, 48, 49, 2, 0, 48, 49, 95, 95, 4, 0, 9, 9, 11,
		12, 32, 32, 160, 160, 1, 0, 96, 96, 4, 0, 10, 10, 13, 13, 34, 34, 92, 92,
		4, 0, 10, 10, 13, 13, 39, 39, 92, 92, 9, 0, 34, 34, 39, 39, 92, 92, 98,
		98, 102, 102, 110, 110, 114, 114, 116, 116, 118, 118, 12, 0, 10, 10, 13,
		13, 34, 34, 39, 39, 48, 57, 92, 92, 98, 98, 102, 102, 110, 110, 114, 114,
		116, 118, 120, 120, 3, 0, 48, 57, 117, 117, 120, 120, 4, 0, 48, 57, 65,
		70, 95, 95, 97, 102, 1, 0, 49, 57, 2, 0, 69, 69, 101, 101, 2, 0, 43, 43,
		45, 45, 408, 0, 48, 57, 95, 95, 768, 879, 1155, 1159, 1425, 1469, 1471,
		1471, 1473, 1474, 1476, 1477, 1479, 1479, 1552, 1562, 1611, 1641, 1648,
		1648, 1750, 1756, 1759, 1764, 1767, 1768, 1770, 1773, 1776, 1785, 1809,
		1809, 1840, 1866, 1958, 1968, 1984, 1993, 2027, 2035, 2045, 2045, 2070,
		2073, 2075, 2083, 2085, 2087, 2089, 2093, 2137, 2139, 2200, 2207, 2250,
		2273, 2275, 2306, 2362, 2362, 2364, 2364, 2369, 2376, 2381, 2381, 2385,
		2391, 2402, 2403, 2406, 2415, 2433, 2433, 2492, 2492, 2497, 2500, 2509,
		2509, 2530, 2531, 2534, 2543, 2558, 2558, 2561, 2562, 2620, 2620, 2625,
		2626, 2631, 2632, 2635, 2637, 2641, 2641, 2662, 2673, 2677, 2677, 2689,
		2690, 2748, 2748, 2753, 2757, 2759, 2760, 2765, 2765, 2786, 2787, 2790,
		2799, 2810, 2815, 2817, 2817, 2876, 2876, 2879, 2879, 2881, 2884, 2893,
		2893, 2901, 2902, 2914, 2915, 2918, 2927, 2946, 2946, 3008, 3008, 3021,
		3021, 3046, 3055, 3072, 3072, 3076, 3076, 3132, 3132, 3134, 3136, 3142,
		3144, 3146, 3149, 3157, 3158, 3170, 3171, 3174, 3183, 3201, 3201, 3260,
		3260, 3263, 3263, 3270, 3270, 3276, 3277, 3298, 3299, 3302, 3311, 3328,
		3329, 3387, 3388, 3393, 3396, 3405, 3405, 3426, 3427, 3430, 3439, 3457,
		3457, 3530, 3530, 3538, 3540, 3542, 3542, 3558, 3567, 3633, 3633, 3636,
		3642, 3655, 3662, 3664, 3673, 3761, 3761, 3764, 3772, 3784, 3790, 3792,
		3801, 3864, 3865, 3872, 3881, 3893, 3893, 3895, 3895, 3897, 3897, 3953,
		3966, 3968, 3972, 3974, 3975, 3981, 3991, 3993, 4028, 4038, 4038, 4141,
		4144, 4146, 4151, 4153, 4154, 4157, 4158, 4160, 4169, 4184, 4185, 4190,
		4192, 4209, 4212, 4226, 4226, 4229, 4230, 4237, 4237, 4240, 4249, 4253,
		4253, 4957, 4959, 5906, 5908, 5938, 5939, 5970, 5971, 6002, 6003, 6068,
		6069, 6071, 6077, 6086, 6086, 6089, 6099, 6109, 6109, 6112, 6121, 6155,
		6157, 6159, 6169, 6277, 6278, 6313, 6313, 6432, 6434, 6439, 6440, 6450,
		6450, 6457, 6459, 6470, 6479, 6608, 6617, 6679, 6680, 6683, 6683, 6742,
		6742, 6744, 6750, 6752, 6752, 6754, 6754, 6757, 6764, 6771, 6780, 6783,
		6793, 6800, 6809, 6832, 6845, 6847, 6862, 6912, 6915, 6964, 6964, 6966,
		6970, 6972, 6972, 6978, 6978, 6992, 7001, 7019, 7027, 7040, 7041, 7074,
		7077, 7080, 7081, 7083, 7085, 7088, 7097, 7142, 7142, 7144, 7145, 7149,
		7149, 7151, 7153, 7212, 7219, 7222, 7223, 7232, 7241, 7248, 7257, 7376,
		7378, 7380, 7392, 7394, 7400, 7405, 7405, 7412, 7412, 7416, 7417, 7616,
		7679, 8204, 8205, 8255, 8256, 8276, 8276, 8400, 8412, 8417, 8417, 8421,
		8432, 11503, 11505, 11647, 11647, 11744, 11775, 12330, 12333, 12441, 12442,
		42528, 42537, 42607, 42607, 42612, 42621, 42654, 42655, 42736, 42737, 43010,
		43010, 43014, 43014, 43019, 43019, 43045, 43046, 43052, 43052, 43204, 43205,
		43216, 43225, 43232, 43249, 43263, 43273, 43302, 43309, 43335, 43345, 43392,
		43394, 43443, 43443, 43446, 43449, 43452, 43453, 43472, 43481, 43493, 43493,
		43504, 43513, 43561, 43566, 43569, 43570, 43573, 43574, 43587, 43587, 43596,
		43596, 43600, 43609, 43644, 43644, 43696, 43696, 43698, 43700, 43703, 43704,
		43710, 43711, 43713, 43713, 43756, 43757, 43766, 43766, 44005, 44005, 44008,
		44008, 44013, 44013, 44016, 44025, 64286, 64286, 65024, 65039, 65056, 65071,
		65075, 65076, 65101, 65103, 65296, 65305, 65343, 65343, 66045, 66045, 66272,
		66272, 66422, 66426, 66720, 66729, 68097, 68099, 68101, 68102, 68108, 68111,
		68152, 68154, 68159, 68159, 68325, 68326, 68900, 68903, 68912, 68921, 69291,
		69292, 69373, 69375, 69446, 69456, 69506, 69509, 69633, 69633, 69688, 69702,
		69734, 69744, 69747, 69748, 69759, 69761, 69811, 69814, 69817, 69818, 69826,
		69826, 69872, 69881, 69888, 69890, 69927, 69931, 69933, 69940, 69942, 69951,
		70003, 70003, 70016, 70017, 70070, 70078, 70089, 70092, 70095, 70105, 70191,
		70193, 70196, 70196, 70198, 70199, 70206, 70206, 70209, 70209, 70367, 70367,
		70371, 70378, 70384, 70393, 70400, 70401, 70459, 70460, 70464, 70464, 70502,
		70508, 70512, 70516, 70712, 70719, 70722, 70724, 70726, 70726, 70736, 70745,
		70750, 70750, 70835, 70840, 70842, 70842, 70847, 70848, 70850, 70851, 70864,
		70873, 71090, 71093, 71100, 71101, 71103, 71104, 71132, 71133, 71219, 71226,
		71229, 71229, 71231, 71232, 71248, 71257, 71339, 71339, 71341, 71341, 71344,
		71349, 71351, 71351, 71360, 71369, 71453, 71455, 71458, 71461, 71463, 71467,
		71472, 71481, 71727, 71735, 71737, 71738, 71904, 71913, 71995, 71996, 71998,
		71998, 72003, 72003, 72016, 72025, 72148, 72151, 72154, 72155, 72160, 72160,
		72193, 72202, 72243, 72248, 72251, 72254, 72263, 72263, 72273, 72278, 72281,
		72283, 72330, 72342, 72344, 72345, 72752, 72758, 72760, 72765, 72767, 72767,
		72784, 72793, 72850, 72871, 72874, 72880, 72882, 72883, 72885, 72886, 73009,
		73014, 73018, 73018, 73020, 73021, 73023, 73029, 73031, 73031, 73040, 73049,
		73104, 73105, 73109, 73109, 73111, 73111, 73120, 73129, 73459, 73460, 73472,
		73473, 73526, 73530, 73536, 73536, 73538, 73538, 73552, 73561, 78912, 78912,
		78919, 78933, 92768, 92777, 92864, 92873, 92912, 92916, 92976, 92982, 93008,
		93017, 94031, 94031, 94095, 94098, 94180, 94180, 113821, 113822, 118528,
		118573, 118576, 118598, 119143, 119145, 119163, 119170, 119173, 119179,
		119210, 119213, 119362, 119364, 120782, 120831, 121344, 121398, 121403,
		121452, 121461, 121461, 121476, 121476, 121499, 121503, 121505, 121519,
		122880, 122886, 122888, 122904, 122907, 122913, 122915, 122916, 122918,
		122922, 123023, 123023, 123184, 123190, 123200, 123209, 123566, 123566,
		123628, 123641, 124140, 124153, 125136, 125142, 125252, 125258, 125264,
		125273, 130032, 130041, 917760, 917999, 661, 0, 36, 36, 65, 90, 95, 95,
		97, 122, 170, 170, 181, 181, 186, 186, 192, 214, 216, 246, 248, 705, 710,
		721, 736, 740, 748, 748, 750, 750, 880, 884, 886, 887, 890, 893, 895, 895,
		902, 902, 904, 906, 908, 908, 910, 929, 931, 1013, 1015, 1153, 1162, 1327,
		1329, 1366, 1369, 1369, 1376, 1416, 1488, 1514, 1519, 1522, 1568, 1610,
		1646, 1647, 1649, 1747, 1749, 1749, 1765, 1766, 1774, 1775, 1786, 1788,
		1791, 1791, 1808, 1808, 1810, 1839, 1869, 1957, 1969, 1969, 1994, 2026,
		2036, 2037, 2042, 2042, 2048, 2069, 2074, 2074, 2084, 2084, 2088, 2088,
		2112, 2136, 2144, 2154, 2160, 2183, 2185, 2190, 2208, 2249, 2308, 2361,
		2365, 2365, 2384, 2384, 2392, 2401, 2417, 2432, 2437, 2444, 2447, 2448,
		2451, 2472, 2474, 2480, 2482, 2482, 2486, 2489, 2493, 2493, 2510, 2510,
		2524, 2525, 2527, 2529, 2544, 2545, 2556, 2556, 2565, 2570, 2575, 2576,
		2579, 2600, 2602, 2608, 2610, 2611, 2613, 2614, 2616, 2617, 2649, 2652,
		2654, 2654, 2674, 2676, 2693, 2701, 2703, 2705, 2707, 2728, 2730, 2736,
		2738, 2739, 2741, 2745, 2749, 2749, 2768, 2768, 2784, 2785, 2809, 2809,
		2821, 2828, 2831, 2832, 2835, 2856, 2858, 2864, 2866, 2867, 2869, 2873,
		2877, 2877, 2908, 2909, 2911, 2913, 2929, 2929, 2947, 2947, 2949, 2954,
		2958, 2960, 2962, 2965, 2969, 2970, 2972, 2972, 2974, 2975, 2979, 2980,
		2984, 2986, 2990, 3001, 3024, 3024, 3077, 3084, 3086, 3088, 3090, 3112,
		3114, 3129, 3133, 3133, 3160, 3162, 3165, 3165, 3168, 3169, 3200, 3200,
		3205, 3212, 3214, 3216, 3218, 3240, 3242, 3251, 3253, 3257, 3261, 3261,
		3293, 3294, 3296, 3297, 3313, 3314, 3332, 3340, 3342, 3344, 3346, 3386,
		3389, 3389, 3406, 3406, 3412, 3414, 3423, 3425, 3450, 3455, 3461, 3478,
		3482, 3505, 3507, 3515, 3517, 3517, 3520, 3526, 3585, 3632, 3634, 3635,
		3648, 3654, 3713, 3714, 3716, 3716, 3718, 3722, 3724, 3747, 3749, 3749,
		3751, 3760, 3762, 3763, 3773, 3773, 3776, 3780, 3782, 3782, 3804, 3807,
		3840, 3840, 3904, 3911, 3913, 3948, 3976, 3980, 4096, 4138, 4159, 4159,
		4176, 4181, 4186, 4189, 4193, 4193, 4197, 4198, 4206, 4208, 4213, 4225,
		4238, 4238, 4256, 4293, 4295, 4295, 4301, 4301, 4304, 4346, 4348, 4680,
		4682, 4685, 4688, 4694, 4696, 4696, 4698, 4701, 4704, 4744, 4746, 4749,
		4752, 4784, 4786, 4789, 4792, 4798, 4800, 4800, 4802, 4805, 4808, 4822,
		4824, 4880, 4882, 4885, 4888, 4954, 4992, 5007, 5024, 5109, 5112, 5117,
		5121, 5740, 5743, 5759, 5761, 5786, 5792, 5866, 5873, 5880, 5888, 5905,
		5919, 5937, 5952, 5969, 5984, 5996, 5998, 6000, 6016, 6067, 6103, 6103,
		6108, 6108, 6176, 6264, 6272, 6276, 6279, 6312, 6314, 6314, 6320, 6389,
		6400, 6430, 6480, 6509, 6512, 6516, 6528, 6571, 6576, 6601, 6656, 6678,
		6688, 6740, 6823, 6823, 6917, 6963, 6981, 6988, 7043, 7072, 7086, 7087,
		7098, 7141, 7168, 7203, 7245, 7247, 7258, 7293, 7296, 7304, 7312, 7354,
		7357, 7359, 7401, 7404, 7406, 7411, 7413, 7414, 7418, 7418, 7424, 7615,
		7680, 7957, 7960, 7965, 7968, 8005, 8008, 8013, 8016, 8023, 8025, 8025,
		8027, 8027, 8029, 8029, 8031, 8061, 8064, 8116, 8118, 8124, 8126, 8126,
		8130, 8132, 8134, 8140, 8144, 8147, 8150, 8155, 8160, 8172, 8178, 8180,
		8182, 8188, 8305, 8305, 8319, 8319, 8336, 8348, 8450, 8450, 8455, 8455,
		8458, 8467, 8469, 8469, 8473, 8477, 8484, 8484, 8486, 8486, 8488, 8488,
		8490, 8493, 8495, 8505, 8508, 8511, 8517, 8521, 8526, 8526, 8579, 8580,
		11264, 11492, 11499, 11502, 11506, 11507, 11520, 11557, 11559, 11559, 11565,
		11565, 11568, 11623, 11631, 11631, 11648, 11670, 11680, 11686, 11688, 11694,
		11696, 11702, 11704, 11710, 11712, 11718, 11720, 11726, 11728, 11734, 11736,
		11742, 11823, 11823, 12293, 12294, 12337, 12341, 12347, 12348, 12353, 12438,
		12445, 12447, 12449, 12538, 12540, 12543, 12549, 12591, 12593, 12686, 12704,
		12735, 12784, 12799, 13312, 19903, 19968, 42124, 42192, 42237, 42240, 42508,
		42512, 42527, 42538, 42539, 42560, 42606, 42623, 42653, 42656, 42725, 42775,
		42783, 42786, 42888, 42891, 42954, 42960, 42961, 42963, 42963, 42965, 42969,
		42994, 43009, 43011, 43013, 43015, 43018, 43020, 43042, 43072, 43123, 43138,
		43187, 43250, 43255, 43259, 43259, 43261, 43262, 43274, 43301, 43312, 43334,
		43360, 43388, 43396, 43442, 43471, 43471, 43488, 43492, 43494, 43503, 43514,
		43518, 43520, 43560, 43584, 43586, 43588, 43595, 43616, 43638, 43642, 43642,
		43646, 43695, 43697, 43697, 43701, 43702, 43705, 43709, 43712, 43712, 43714,
		43714, 43739, 43741, 43744, 43754, 43762, 43764, 43777, 43782, 43785, 43790,
		43793, 43798, 43808, 43814, 43816, 43822, 43824, 43866, 43868, 43881, 43888,
		44002, 44032, 55203, 55216, 55238, 55243, 55291, 63744, 64109, 64112, 64217,
		64256, 64262, 64275, 64279, 64285, 64285, 64287, 64296, 64298, 64310, 64312,
		64316, 64318, 64318, 64320, 64321, 64323, 64324, 64326, 64433, 64467, 64829,
		64848, 64911, 64914, 64967, 65008, 65019, 65136, 65140, 65142, 65276, 65313,
		65338, 65345, 65370, 65382, 65470, 65474, 65479, 65482, 65487, 65490, 65495,
		65498, 65500, 65536, 65547, 65549, 65574, 65576, 65594, 65596, 65597, 65599,
		65613, 65616, 65629, 65664, 65786, 66176, 66204, 66208, 66256, 66304, 66335,
		66349, 66368, 66370, 66377, 66384, 66421, 66432, 66461, 66464, 66499, 66504,
		66511, 66560, 66717, 66736, 66771, 66776, 66811, 66816, 66855, 66864, 66915,
		66928, 66938, 66940, 66954, 66956, 66962, 66964, 66965, 66967, 66977, 66979,
		66993, 66995, 67001, 67003, 67004, 67072, 67382, 67392, 67413, 67424, 67431,
		67456, 67461, 67463, 67504, 67506, 67514, 67584, 67589, 67592, 67592, 67594,
		67637, 67639, 67640, 67644, 67644, 67647, 67669, 67680, 67702, 67712, 67742,
		67808, 67826, 67828, 67829, 67840, 67861, 67872, 67897, 67968, 68023, 68030,
		68031, 68096, 68096, 68112, 68115, 68117, 68119, 68121, 68149, 68192, 68220,
		68224, 68252, 68288, 68295, 68297, 68324, 68352, 68405, 68416, 68437, 68448,
		68466, 68480, 68497, 68608, 68680, 68736, 68786, 68800, 68850, 68864, 68899,
		69248, 69289, 69296, 69297, 69376, 69404, 69415, 69415, 69424, 69445, 69488,
		69505, 69552, 69572, 69600, 69622, 69635, 69687, 69745, 69746, 69749, 69749,
		69763, 69807, 69840, 69864, 69891, 69926, 69956, 69956, 69959, 69959, 69968,
		70002, 70006, 70006, 70019, 70066, 70081, 70084, 70106, 70106, 70108, 70108,
		70144, 70161, 70163, 70187, 70207, 70208, 70272, 70278, 70280, 70280, 70282,
		70285, 70287, 70301, 70303, 70312, 70320, 70366, 70405, 70412, 70415, 70416,
		70419, 70440, 70442, 70448, 70450, 70451, 70453, 70457, 70461, 70461, 70480,
		70480, 70493, 70497, 70656, 70708, 70727, 70730, 70751, 70753, 70784, 70831,
		70852, 70853, 70855, 70855, 71040, 71086, 71128, 71131, 71168, 71215, 71236,
		71236, 71296, 71338, 71352, 71352, 71424, 71450, 71488, 71494, 71680, 71723,
		71840, 71903, 71935, 71942, 71945, 71945, 71948, 71955, 71957, 71958, 71960,
		71983, 71999, 71999, 72001, 72001, 72096, 72103, 72106, 72144, 72161, 72161,
		72163, 72163, 72192, 72192, 72203, 72242, 72250, 72250, 72272, 72272, 72284,
		72329, 72349, 72349, 72368, 72440, 72704, 72712, 72714, 72750, 72768, 72768,
		72818, 72847, 72960, 72966, 72968, 72969, 72971, 73008, 73030, 73030, 73056,
		73061, 73063, 73064, 73066, 73097, 73112, 73112, 73440, 73458, 73474, 73474,
		73476, 73488, 73490, 73523, 73648, 73648, 73728, 74649, 74880, 75075, 77712,
		77808, 77824, 78895, 78913, 78918, 82944, 83526, 92160, 92728, 92736, 92766,
		92784, 92862, 92880, 92909, 92928, 92975, 92992, 92995, 93027, 93047, 93053,
		93071, 93760, 93823, 93952, 94026, 94032, 94032, 94099, 94111, 94176, 94177,
		94179, 94179, 94208, 100343, 100352, 101589, 101632, 101640, 110576, 110579,
		110581, 110587, 110589, 110590, 110592, 110882, 110898, 110898, 110928,
		110930, 110933, 110933, 110948, 110951, 110960, 111355, 113664, 113770,
		113776, 113788, 113792, 113800, 113808, 113817, 119808, 119892, 119894,
		119964, 119966, 119967, 119970, 119970, 119973, 119974, 119977, 119980,
		119982, 119993, 119995, 119995, 119997, 120003, 120005, 120069, 120071,
		120074, 120077, 120084, 120086, 120092, 120094, 120121, 120123, 120126,
		120128, 120132, 120134, 120134, 120138, 120144, 120146, 120485, 120488,
		120512, 120514, 120538, 120540, 120570, 120572, 120596, 120598, 120628,
		120630, 120654, 120656, 120686, 120688, 120712, 120714, 120744, 120746,
		120770, 120772, 120779, 122624, 122654, 122661, 122666, 122928, 122989,
		123136, 123180, 123191, 123197, 123214, 123214, 123536, 123565, 123584,
		123627, 124112, 124139, 124896, 124902, 124904, 124907, 124909, 124910,
		124912, 124926, 124928, 125124, 125184, 125251, 125259, 125259, 126464,
		126467, 126469, 126495, 126497, 126498, 126500, 126500, 126503, 126503,
		126505, 126514, 126516, 126519, 126521, 126521, 126523, 126523, 126530,
		126530, 126535, 126535, 126537, 126537, 126539, 126539, 126541, 126543,
		126545, 126546, 126548, 126548, 126551, 126551, 126553, 126553, 126555,
		126555, 126557, 126557, 126559, 126559, 126561, 126562, 126564, 126564,
		126567, 126570, 126572, 126578, 126580, 126583, 126585, 126588, 126590,
		126590, 126592, 126601, 126603, 126619, 126625, 126627, 126629, 126633,
		126635, 126651, 131072, 173791, 173824, 177977, 177984, 178205, 178208,
		183969, 183984, 191456, 194560, 195101, 196608, 201546, 201552, 205743,
		6, 0, 10, 10, 13, 13, 42, 42, 47, 47, 91, 92, 8232, 8233, 5, 0, 10, 10,
		13, 13, 47, 47, 91, 92, 8232, 8233, 4, 0, 10, 10, 13, 13, 92, 93, 8232,
		8233, 1200, 0, 2, 1, 0, 0, 0, 0, 4, 1, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 8,
		1, 0, 0, 0, 0, 10, 1, 0, 0, 0, 0, 12, 1, 0, 0, 0, 0, 14, 1, 0, 0, 0, 0,
		16, 1, 0, 0, 0, 0, 18, 1, 0, 0, 0, 0, 20, 1, 0, 0, 0, 0, 22, 1, 0, 0, 0,
		0, 24, 1, 0, 0, 0, 0, 26, 1, 0, 0, 0, 0, 28, 1, 0, 0, 0, 0, 30, 1, 0, 0,
		0, 0, 32, 1, 0, 0, 0, 0, 34, 1, 0, 0, 0, 0, 36, 1, 0, 0, 0, 0, 38, 1, 0,
		0, 0, 0, 40, 1, 0, 0, 0, 0, 42, 1, 0, 0, 0, 0, 44, 1, 0, 0, 0, 0, 46, 1,
		0, 0, 0, 0, 48, 1, 0, 0, 0, 0, 50, 1, 0, 0, 0, 0, 52, 1, 0, 0, 0, 0, 54,
		1, 0, 0, 0, 0, 56, 1, 0, 0, 0, 0, 58, 1, 0, 0, 0, 0, 60, 1, 0, 0, 0, 0,
		62, 1, 0, 0, 0, 0, 64, 1, 0, 0, 0, 0, 66, 1, 0, 0, 0, 0, 68, 1, 0, 0, 0,
		0, 70, 1, 0, 0, 0, 0, 72, 1, 0, 0, 0, 0, 74, 1, 0, 0, 0, 0, 76, 1, 0, 0,
		0, 0, 78, 1, 0, 0, 0, 0, 80, 1, 0, 0, 0, 0, 82, 1, 0, 0, 0, 0, 84, 1, 0,
		0, 0, 0, 86, 1, 0, 0, 0, 0, 88, 1, 0, 0, 0, 0, 90, 1, 0, 0, 0, 0, 92, 1,
		0, 0, 0, 0, 94, 1, 0, 0, 0, 0, 96, 1, 0, 0, 0, 0, 98, 1, 0, 0, 0, 0, 100,
		1, 0, 0, 0, 0, 102, 1, 0, 0, 0, 0, 104, 1, 0, 0, 0, 0, 106, 1, 0, 0, 0,
		0, 108, 1, 0, 0, 0, 0, 110, 1, 0, 0, 0, 0, 112, 1, 0, 0, 0, 0, 114, 1,
		0, 0, 0, 0, 116, 1, 0, 0, 0, 0, 118, 1, 0, 0, 0, 0, 120, 1, 0, 0, 0, 0,
		122, 1, 0, 0, 0, 0, 124, 1, 0, 0, 0, 0, 126, 1, 0, 0, 0, 0, 128, 1, 0,
		0, 0, 0, 130, 1, 0, 0, 0, 0, 132, 1, 0, 0, 0, 0, 134, 1, 0, 0, 0, 0, 136,
		1, 0, 0, 0, 0, 138, 1, 0, 0, 0, 0, 140, 1, 0, 0, 0, 0, 142, 1, 0, 0, 0,
		0, 144, 1, 0, 0, 0, 0, 146, 1, 0, 0, 0, 0, 148, 1, 0, 0, 0, 0, 150, 1,
		0, 0, 0, 0, 152, 1, 0, 0, 0, 0, 154, 1, 0, 0, 0, 0, 156, 1, 0, 0, 0, 0,
		158, 1, 0, 0, 0, 0, 160, 1, 0, 0, 0, 0, 162, 1, 0, 0, 0, 0, 164, 1, 0,
		0, 0, 0, 166, 1, 0, 0, 0, 0, 168, 1, 0, 0, 0, 0, 170, 1, 0, 0, 0, 0, 172,
		1, 0, 0, 0, 0, 174, 1, 0, 0, 0, 0, 176, 1, 0, 0, 0, 0, 178, 1, 0, 0, 0,
		0, 180, 1, 0, 0, 0, 0, 182, 1, 0, 0, 0, 0, 184, 1, 0, 0, 0, 0, 186, 1,
		0, 0, 0, 0, 188, 1, 0, 0, 0, 0, 190, 1, 0, 0, 0, 0, 192, 1, 0, 0, 0, 0,
		194, 1, 0, 0, 0, 0, 196, 1, 0, 0, 0, 0, 198, 1, 0, 0, 0, 0, 200, 1, 0,
		0, 0, 0, 202, 1, 0, 0, 0, 0, 204, 1, 0, 0, 0, 0, 206, 1, 0, 0, 0, 0, 208,
		1, 0, 0, 0, 0, 210, 1, 0, 0, 0, 0, 212, 1, 0, 0, 0, 0, 214, 1, 0, 0, 0,
		0, 216, 1, 0, 0, 0, 0, 218, 1, 0, 0, 0, 0, 220, 1, 0, 0, 0, 0, 222, 1,
		0, 0, 0, 0, 224, 1, 0, 0, 0, 0, 226, 1, 0, 0, 0, 0, 228, 1, 0, 0, 0, 0,
		230, 1, 0, 0, 0, 0, 232, 1, 0, 0, 0, 0, 234, 1, 0, 0, 0, 0, 236, 1, 0,
		0, 0, 0, 238, 1, 0, 0, 0, 0, 240, 1, 0, 0, 0, 0, 242, 1, 0, 0, 0, 0, 244,
		1, 0, 0, 0, 0, 246, 1, 0, 0, 0, 0, 248, 1, 0, 0, 0, 0, 250, 1, 0, 0, 0,
		0, 252, 1, 0, 0, 0, 0, 254, 1, 0, 0, 0, 1, 256, 1, 0, 0, 0, 1, 258, 1,
		0, 0, 0, 1, 260, 1, 0, 0, 0, 2, 302, 1, 0, 0, 0, 4, 312, 1, 0, 0, 0, 6,
		326, 1, 0, 0, 0, 8, 337, 1, 0, 0, 0, 10, 353, 1, 0, 0, 0, 12, 355, 1, 0,
		0, 0, 14, 357, 1, 0, 0, 0, 16, 359, 1, 0, 0, 0, 18, 361, 1, 0, 0, 0, 20,
		364, 1, 0, 0, 0, 22, 369, 1, 0, 0, 0, 24, 372, 1, 0, 0, 0, 26, 374, 1,
		0, 0, 0, 28, 376, 1, 0, 0, 0, 30, 378, 1, 0, 0, 0, 32, 380, 1, 0, 0, 0,
		34, 382, 1, 0, 0, 0, 36, 386, 1, 0, 0, 0, 38, 388, 1, 0, 0, 0, 40, 391,
		1, 0, 0, 0, 42, 394, 1, 0, 0, 0, 44, 396, 1, 0, 0, 0, 46, 398, 1, 0, 0,
		0, 48, 400, 1, 0, 0, 0, 50, 402, 1, 0, 0, 0, 52, 404, 1, 0, 0, 0, 54, 406,
		1, 0, 0, 0, 56, 408, 1, 0, 0, 0, 58, 411, 1, 0, 0, 0, 60, 414, 1, 0, 0,
		0, 62, 416, 1, 0, 0, 0, 64, 419, 1, 0, 0, 0, 66, 422, 1, 0, 0, 0, 68, 426,
		1, 0, 0, 0, 70, 428, 1, 0, 0, 0, 72, 430, 1, 0, 0, 0, 74, 433, 1, 0, 0,
		0, 76, 436, 1, 0, 0, 0, 78, 439, 1, 0, 0, 0, 80, 442, 1, 0, 0, 0, 82, 446,
		1, 0, 0, 0, 84, 450, 1, 0, 0, 0, 86, 452, 1, 0, 0, 0, 88, 454, 1, 0, 0,
		0, 90, 456, 1, 0, 0, 0, 92, 459, 1, 0, 0, 0, 94, 462, 1, 0, 0, 0, 96, 465,
		1, 0, 0, 0, 98, 468, 1, 0, 0, 0, 100, 471, 1, 0, 0, 0, 102, 474, 1, 0,
		0, 0, 104, 477, 1, 0, 0, 0, 106, 481, 1, 0, 0, 0, 108, 485, 1, 0, 0, 0,
		110, 490, 1, 0, 0, 0, 112, 493, 1, 0, 0, 0, 114, 496, 1, 0, 0, 0, 116,
		499, 1, 0, 0, 0, 118, 503, 1, 0, 0, 0, 120, 506, 1, 0, 0, 0, 122, 520,
		1, 0, 0, 0, 124, 549, 1, 0, 0, 0, 126, 551, 1, 0, 0, 0, 128, 560, 1, 0,
		0, 0, 130, 568, 1, 0, 0, 0, 132, 577, 1, 0, 0, 0, 134, 586, 1, 0, 0, 0,
		136, 597, 1, 0, 0, 0, 138, 608, 1, 0, 0, 0, 140, 619, 1, 0, 0, 0, 142,
		622, 1, 0, 0, 0, 144, 628, 1, 0, 0, 0, 146, 631, 1, 0, 0, 0, 148, 642,
		1, 0, 0, 0, 150, 649, 1, 0, 0, 0, 152, 654, 1, 0, 0, 0, 154, 659, 1, 0,
		0, 0, 156, 663, 1, 0, 0, 0, 158, 667, 1, 0, 0, 0, 160, 673, 1, 0, 0, 0,
		162, 681, 1, 0, 0, 0, 164, 688, 1, 0, 0, 0, 166, 693, 1, 0, 0, 0, 168,
		702, 1, 0, 0, 0, 170, 706, 1, 0, 0, 0, 172, 713, 1, 0, 0, 0, 174, 719,
		1, 0, 0, 0, 176, 728, 1, 0, 0, 0, 178, 737, 1, 0, 0, 0, 180, 742, 1, 0,
		0, 0, 182, 747, 1, 0, 0, 0, 184, 755, 1, 0, 0, 0, 186, 758, 1, 0, 0, 0,
		188, 764, 1, 0, 0, 0, 190, 771, 1, 0, 0, 0, 192, 774, 1, 0, 0, 0, 194,
		778, 1, 0, 0, 0, 196, 781, 1, 0, 0, 0, 198, 786, 1, 0, 0, 0, 200, 790,
		1, 0, 0, 0, 202, 794, 1, 0, 0, 0, 204, 800, 1, 0, 0, 0, 206, 805, 1, 0,
		0, 0, 208, 813, 1, 0, 0, 0, 210, 819, 1, 0, 0, 0, 212, 825, 1, 0, 0, 0,
		214, 832, 1, 0, 0, 0, 216, 839, 1, 0, 0, 0, 218, 845, 1, 0, 0, 0, 220,
		851, 1, 0, 0, 0, 222, 857, 1, 0, 0, 0, 224, 870, 1, 0, 0, 0, 226, 876,
		1, 0, 0, 0, 228, 882, 1, 0, 0, 0, 230, 892, 1, 0, 0, 0, 232, 901, 1, 0,
		0, 0, 234, 913, 1, 0, 0, 0, 236, 923, 1, 0, 0, 0, 238, 935, 1, 0, 0, 0,
		240, 944, 1, 0, 0, 0, 242, 967, 1, 0, 0, 0, 244, 971, 1, 0, 0, 0, 246,
		977, 1, 0, 0, 0, 248, 983, 1, 0, 0, 0, 250, 987, 1, 0, 0, 0, 252, 1004,
		1, 0, 0, 0, 254, 1026, 1, 0, 0, 0, 256, 1030, 1, 0, 0, 0, 258, 1036, 1,
		0, 0, 0, 260, 1041, 1, 0, 0, 0, 262, 1047, 1, 0, 0, 0, 264, 1053, 1, 0,
		0, 0, 266, 1060, 1, 0, 0, 0, 268, 1064, 1, 0, 0, 0, 270, 1066, 1, 0, 0,
		0, 272, 1086, 1, 0, 0, 0, 274, 1088, 1, 0, 0, 0, 276, 1097, 1, 0, 0, 0,
		278, 1099, 1, 0, 0, 0, 280, 1103, 1, 0, 0, 0, 282, 1105, 1, 0, 0, 0, 284,
		1108, 1, 0, 0, 0, 286, 1118, 1, 0, 0, 0, 288, 1120, 1, 0, 0, 0, 290, 1131,
		1, 0, 0, 0, 292, 1136, 1, 0, 0, 0, 294, 1148, 1, 0, 0, 0, 296, 1160, 1,
		0, 0, 0, 298, 1164, 1, 0, 0, 0, 300, 1166, 1, 0, 0, 0, 302, 303, 4, 0,
		0, 0, 303, 304, 5, 35, 0, 0, 304, 305, 5, 33, 0, 0, 305, 309, 1, 0, 0,
		0, 306, 308, 8, 0, 0, 0, 307, 306, 1, 0, 0, 0, 308, 311, 1, 0, 0, 0, 309,
		307, 1, 0, 0, 0, 309, 310, 1, 0, 0, 0, 310, 3, 1, 0, 0, 0, 311, 309, 1,
		0, 0, 0, 312, 313, 5, 47, 0, 0, 313, 314, 5, 42, 0, 0, 314, 318, 1, 0,
		0, 0, 315, 317, 9, 0, 0, 0, 316, 315, 1, 0, 0, 0, 317, 320, 1, 0, 0, 0,
		318, 319, 1, 0, 0, 0, 318, 316, 1, 0, 0, 0, 319, 321, 1, 0, 0, 0, 320,
		318, 1, 0, 0, 0, 321, 322, 5, 42, 0, 0, 322, 323, 5, 47, 0, 0, 323, 324,
		1, 0, 0, 0, 324, 325, 6, 1, 0, 0, 325, 5, 1, 0, 0, 0, 326, 327, 5, 47,
		0, 0, 327, 328, 5, 47, 0, 0, 328, 332, 1, 0, 0, 0, 329, 331, 8, 0, 0, 0,
		330, 329, 1, 0, 0, 0, 331, 334, 1, 0, 0, 0, 332, 330, 1, 0, 0, 0, 332,
		333, 1, 0, 0, 0, 333, 335, 1, 0, 0, 0, 334, 332, 1, 0, 0, 0, 335, 336,
		6, 2, 0, 0, 336, 7, 1, 0, 0, 0, 337, 338, 5, 47, 0, 0, 338, 342, 3, 294,
		146, 0, 339, 341, 3, 296, 147, 0, 340, 339, 1, 0, 0, 0, 341, 344, 1, 0,
		0, 0, 342, 340, 1, 0, 0, 0, 342, 343, 1, 0, 0, 0, 343, 345, 1, 0, 0, 0,
		344, 342, 1, 0, 0, 0, 345, 346, 4, 3, 1, 0, 346, 350, 5, 47, 0, 0, 347,
		349, 3, 290, 144, 0, 348, 347, 1, 0, 0, 0, 349, 352, 1, 0, 0, 0, 350, 348,
		1, 0, 0, 0, 350, 351, 1, 0, 0, 0, 351, 9, 1, 0, 0, 0, 352, 350, 1, 0, 0,
		0, 353, 354, 5, 91, 0, 0, 354, 11, 1, 0, 0, 0, 355, 356, 5, 93, 0, 0, 356,
		13, 1, 0, 0, 0, 357, 358, 5, 40, 0, 0, 358, 15, 1, 0, 0, 0, 359, 360, 5,
		41, 0, 0, 360, 17, 1, 0, 0, 0, 361, 362, 5, 123, 0, 0, 362, 363, 6, 8,
		1, 0, 363, 19, 1, 0, 0, 0, 364, 365, 4, 9, 2, 0, 365, 366, 5, 125, 0, 0,
		366, 367, 1, 0, 0, 0, 367, 368, 6, 9, 2, 0, 368, 21, 1, 0, 0, 0, 369, 370,
		5, 125, 0, 0, 370, 371, 6, 10, 3, 0, 371, 23, 1, 0, 0, 0, 372, 373, 5,
		59, 0, 0, 373, 25, 1, 0, 0, 0, 374, 375, 5, 44, 0, 0, 375, 27, 1, 0, 0,
		0, 376, 377, 5, 61, 0, 0, 377, 29, 1, 0, 0, 0, 378, 379, 5, 63, 0, 0, 379,
		31, 1, 0, 0, 0, 380, 381, 5, 58, 0, 0, 381, 33, 1, 0, 0, 0, 382, 383, 5,
		46, 0, 0, 383, 384, 5, 46, 0, 0, 384, 385, 5, 46, 0, 0, 385, 35, 1, 0,
		0, 0, 386, 387, 5, 46, 0, 0, 387, 37, 1, 0, 0, 0, 388, 389, 5, 43, 0, 0,
		389, 390, 5, 43, 0, 0, 390, 39, 1, 0, 0, 0, 391, 392, 5, 45, 0, 0, 392,
		393, 5, 45, 0, 0, 393, 41, 1, 0, 0, 0, 394, 395, 5, 43, 0, 0, 395, 43,
		1, 0, 0, 0, 396, 397, 5, 45, 0, 0, 397, 45, 1, 0, 0, 0, 398, 399, 5, 126,
		0, 0, 399, 47, 1, 0, 0, 0, 400, 401, 5, 33, 0, 0, 401, 49, 1, 0, 0, 0,
		402, 403, 5, 42, 0, 0, 403, 51, 1, 0, 0, 0, 404, 405, 5, 47, 0, 0, 405,
		53, 1, 0, 0, 0, 406, 407, 5, 37, 0, 0, 407, 55, 1, 0, 0, 0, 408, 409, 5,
		42, 0, 0, 409, 410, 5, 42, 0, 0, 410, 57, 1, 0, 0, 0, 411, 412, 5, 63,
		0, 0, 412, 413, 5, 63, 0, 0, 413, 59, 1, 0, 0, 0, 414, 415, 5, 35, 0, 0,
		415, 61, 1, 0, 0, 0, 416, 417, 5, 62, 0, 0, 417, 418, 5, 62, 0, 0, 418,
		63, 1, 0, 0, 0, 419, 420, 5, 60, 0, 0, 420, 421, 5, 60, 0, 0, 421, 65,
		1, 0, 0, 0, 422, 423, 5, 62, 0, 0, 423, 424, 5, 62, 0, 0, 424, 425, 5,
		62, 0, 0, 425, 67, 1, 0, 0, 0, 426, 427, 5, 60, 0, 0, 427, 69, 1, 0, 0,
		0, 428, 429, 5, 62, 0, 0, 429, 71, 1, 0, 0, 0, 430, 431, 5, 60, 0, 0, 431,
		432, 5, 61, 0, 0, 432, 73, 1, 0, 0, 0, 433, 434, 5, 62, 0, 0, 434, 435,
		5, 61, 0, 0, 435, 75, 1, 0, 0, 0, 436, 437, 5, 61, 0, 0, 437, 438, 5, 61,
		0, 0, 438, 77, 1, 0, 0, 0, 439, 440, 5, 33, 0, 0, 440, 441, 5, 61, 0, 0,
		441, 79, 1, 0, 0, 0, 442, 443, 5, 61, 0, 0, 443, 444, 5, 61, 0, 0, 444,
		445, 5, 61, 0, 0, 445, 81, 1, 0, 0, 0, 446, 447, 5, 33, 0, 0, 447, 448,
		5, 61, 0, 0, 448, 449, 5, 61, 0, 0, 449, 83, 1, 0, 0, 0, 450, 451, 5, 38,
		0, 0, 451, 85, 1, 0, 0, 0, 452, 453, 5, 94, 0, 0, 453, 87, 1, 0, 0, 0,
		454, 455, 5, 124, 0, 0, 455, 89, 1, 0, 0, 0, 456, 457, 5, 38, 0, 0, 457,
		458, 5, 38, 0, 0, 458, 91, 1, 0, 0, 0, 459, 460, 5, 124, 0, 0, 460, 461,
		5, 124, 0, 0, 461, 93, 1, 0, 0, 0, 462, 463, 5, 42, 0, 0, 463, 464, 5,
		61, 0, 0, 464, 95, 1, 0, 0, 0, 465, 466, 5, 47, 0, 0, 466, 467, 5, 61,
		0, 0, 467, 97, 1, 0, 0, 0, 468, 469, 5, 37, 0, 0, 469, 470, 5, 61, 0, 0,
		470, 99, 1, 0, 0, 0, 471, 472, 5, 43, 0, 0, 472, 473, 5, 61, 0, 0, 473,
		101, 1, 0, 0, 0, 474, 475, 5, 45, 0, 0, 475, 476, 5, 61, 0, 0, 476, 103,
		1, 0, 0, 0, 477, 478, 5, 60, 0, 0, 478, 479, 5, 60, 0, 0, 479, 480, 5,
		61, 0, 0, 480, 105, 1, 0, 0, 0, 481, 482, 5, 62, 0, 0, 482, 483, 5, 62,
		0, 0, 483, 484, 5, 61, 0, 0, 484, 107, 1, 0, 0, 0, 485, 486, 5, 62, 0,
		0, 486, 487, 5, 62, 0, 0, 487, 488, 5, 62, 0, 0, 488, 489, 5, 61, 0, 0,
		489, 109, 1, 0, 0, 0, 490, 491, 5, 38, 0, 0, 491, 492, 5, 61, 0, 0, 492,
		111, 1, 0, 0, 0, 493, 494, 5, 94, 0, 0, 494, 495, 5, 61, 0, 0, 495, 113,
		1, 0, 0, 0, 496, 497, 5, 124, 0, 0, 497, 498, 5, 61, 0, 0, 498, 115, 1,
		0, 0, 0, 499, 500, 5, 42, 0, 0, 500, 501, 5, 42, 0, 0, 501, 502, 5, 61,
		0, 0, 502, 117, 1, 0, 0, 0, 503, 504, 5, 61, 0, 0, 504, 505, 5, 62, 0,
		0, 505, 119, 1, 0, 0, 0, 506, 507, 5, 110, 0, 0, 507, 508, 5, 117, 0, 0,
		508, 509, 5, 108, 0, 0, 509, 510, 5, 108, 0, 0, 510, 121, 1, 0, 0, 0, 511,
		512, 5, 116, 0, 0, 512, 513, 5, 114, 0, 0, 513, 514, 5, 117, 0, 0, 514,
		521, 5, 101, 0, 0, 515, 516, 5, 102, 0, 0, 516, 517, 5, 97, 0, 0, 517,
		518, 5, 108, 0, 0, 518, 519, 5, 115, 0, 0, 519, 521, 5, 101, 0, 0, 520,
		511, 1, 0, 0, 0, 520, 515, 1, 0, 0, 0, 521, 123, 1, 0, 0, 0, 522, 523,
		3, 286, 142, 0, 523, 524, 5, 46, 0, 0, 524, 528, 7, 1, 0, 0, 525, 527,
		7, 2, 0, 0, 526, 525, 1, 0, 0, 0, 527, 530, 1, 0, 0, 0, 528, 526, 1, 0,
		0, 0, 528, 529, 1, 0, 0, 0, 529, 532, 1, 0, 0, 0, 530, 528, 1, 0, 0, 0,
		531, 533, 3, 288, 143, 0, 532, 531, 1, 0, 0, 0, 532, 533, 1, 0, 0, 0, 533,
		550, 1, 0, 0, 0, 534, 535, 5, 46, 0, 0, 535, 539, 7, 1, 0, 0, 536, 538,
		7, 2, 0, 0, 537, 536, 1, 0, 0, 0, 538, 541, 1, 0, 0, 0, 539, 537, 1, 0,
		0, 0, 539, 540, 1, 0, 0, 0, 540, 543, 1, 0, 0, 0, 541, 539, 1, 0, 0, 0,
		542, 544, 3, 288, 143, 0, 543, 542, 1, 0, 0, 0, 543, 544, 1, 0, 0, 0, 544,
		550, 1, 0, 0, 0, 545, 547, 3, 286, 142, 0, 546, 548, 3, 288, 143, 0, 547,
		546, 1, 0, 0, 0, 547, 548, 1, 0, 0, 0, 548, 550, 1, 0, 0, 0, 549, 522,
		1, 0, 0, 0, 549, 534, 1, 0, 0, 0, 549, 545, 1, 0, 0, 0, 550, 125, 1, 0,
		0, 0, 551, 552, 5, 48, 0, 0, 552, 553, 7, 3, 0, 0, 553, 557, 7, 4, 0, 0,
		554, 556, 3, 284, 141, 0, 555, 554, 1, 0, 0, 0, 556, 559, 1, 0, 0, 0, 557,
		555, 1, 0, 0, 0, 557, 558, 1, 0, 0, 0, 558, 127, 1, 0, 0, 0, 559, 557,
		1, 0, 0, 0, 560, 562, 5, 48, 0, 0, 561, 563, 7, 5, 0, 0, 562, 561, 1, 0,
		0, 0, 563, 564, 1, 0, 0, 0, 564, 562, 1, 0, 0, 0, 564, 565, 1, 0, 0, 0,
		565, 566, 1, 0, 0, 0, 566, 567, 4, 63, 3, 0, 567, 129, 1, 0, 0, 0, 568,
		569, 5, 48, 0, 0, 569, 570, 7, 6, 0, 0, 570, 574, 7, 5, 0, 0, 571, 573,
		7, 7, 0, 0, 572, 571, 1, 0, 0, 0, 573, 576, 1, 0, 0, 0, 574, 572, 1, 0,
		0, 0, 574, 575, 1, 0, 0, 0, 575, 131, 1, 0, 0, 0, 576, 574, 1, 0, 0, 0,
		577, 578, 5, 48, 0, 0, 578, 579, 7, 8, 0, 0, 579, 583, 7, 9, 0, 0, 580,
		582, 7, 10, 0, 0, 581, 580, 1, 0, 0, 0, 582, 585, 1, 0, 0, 0, 583, 581,
		1, 0, 0, 0, 583, 584, 1, 0, 0, 0, 584, 133, 1, 0, 0, 0, 585, 583, 1, 0,
		0, 0, 586, 587, 5, 48, 0, 0, 587, 588, 7, 3, 0, 0, 588, 592, 7, 4, 0, 0,
		589, 591, 3, 284, 141, 0, 590, 589, 1, 0, 0, 0, 591, 594, 1, 0, 0, 0, 592,
		590, 1, 0, 0, 0, 592, 593, 1, 0, 0, 0, 593, 595, 1, 0, 0, 0, 594, 592,
		1, 0, 0, 0, 595, 596, 5, 110, 0, 0, 596, 135, 1, 0, 0, 0, 597, 598, 5,
		48, 0, 0, 598, 599, 7, 6, 0, 0, 599, 603, 7, 5, 0, 0, 600, 602, 7, 7, 0,
		0, 601, 600, 1, 0, 0, 0, 602, 605, 1, 0, 0, 0, 603, 601, 1, 0, 0, 0, 603,
		604, 1, 0, 0, 0, 604, 606, 1, 0, 0, 0, 605, 603, 1, 0, 0, 0, 606, 607,
		5, 110, 0, 0, 607, 137, 1, 0, 0, 0, 608, 609, 5, 48, 0, 0, 609, 610, 7,
		8, 0, 0, 610, 614, 7, 9, 0, 0, 611, 613, 7, 10, 0, 0, 612, 611, 1, 0, 0,
		0, 613, 616, 1, 0, 0, 0, 614, 612, 1, 0, 0, 0, 614, 615, 1, 0, 0, 0, 615,
		617, 1, 0, 0, 0, 616, 614, 1, 0, 0, 0, 617, 618, 5, 110, 0, 0, 618, 139,
		1, 0, 0, 0, 619, 620, 3, 286, 142, 0, 620, 621, 5, 110, 0, 0, 621, 141,
		1, 0, 0, 0, 622, 623, 5, 98, 0, 0, 623, 624, 5, 114, 0, 0, 624, 625, 5,
		101, 0, 0, 625, 626, 5, 97, 0, 0, 626, 627, 5, 107, 0, 0, 627, 143, 1,
		0, 0, 0, 628, 629, 5, 100, 0, 0, 629, 630, 5, 111, 0, 0, 630, 145, 1, 0,
		0, 0, 631, 632, 5, 105, 0, 0, 632, 633, 5, 110, 0, 0, 633, 634, 5, 115,
		0, 0, 634, 635, 5, 116, 0, 0, 635, 636, 5, 97, 0, 0, 636, 637, 5, 110,
		0, 0, 637, 638, 5, 99, 0, 0, 638, 639, 5, 101, 0, 0, 639, 640, 5, 111,
		0, 0, 640, 641, 5, 102, 0, 0, 641, 147, 1, 0, 0, 0, 642, 643, 5, 116, 0,
		0, 643, 644, 5, 121, 0, 0, 644, 645, 5, 112, 0, 0, 645, 646, 5, 101, 0,
		0, 646, 647, 5, 111, 0, 0, 647, 648, 5, 102, 0, 0, 648, 149, 1, 0, 0, 0,
		649, 650, 5, 99, 0, 0, 650, 651, 5, 97, 0, 0, 651, 652, 5, 115, 0, 0, 652,
		653, 5, 101, 0, 0, 653, 151, 1, 0, 0, 0, 654, 655, 5, 101, 0, 0, 655, 656,
		5, 108, 0, 0, 656, 657, 5, 115, 0, 0, 657, 658, 5, 101, 0, 0, 658, 153,
		1, 0, 0, 0, 659, 660, 5, 110, 0, 0, 660, 661, 5, 101, 0, 0, 661, 662, 5,
		119, 0, 0, 662, 155, 1, 0, 0, 0, 663, 664, 5, 118, 0, 0, 664, 665, 5, 97,
		0, 0, 665, 666, 5, 114, 0, 0, 666, 157, 1, 0, 0, 0, 667, 668, 5, 99, 0,
		0, 668, 669, 5, 97, 0, 0, 669, 670, 5, 116, 0, 0, 670, 671, 5, 99, 0, 0,
		671, 672, 5, 104, 0, 0, 672, 159, 1, 0, 0, 0, 673, 674, 5, 102, 0, 0, 674,
		675, 5, 105, 0, 0, 675, 676, 5, 110, 0, 0, 676, 677, 5, 97, 0, 0, 677,
		678, 5, 108, 0, 0, 678, 679, 5, 108, 0, 0, 679, 680, 5, 121, 0, 0, 680,
		161, 1, 0, 0, 0, 681, 682, 5, 114, 0, 0, 682, 683, 5, 101, 0, 0, 683, 684,
		5, 116, 0, 0, 684, 685, 5, 117, 0, 0, 685, 686, 5, 114, 0, 0, 686, 687,
		5, 110, 0, 0, 687, 163, 1, 0, 0, 0, 688, 689, 5, 118, 0, 0, 689, 690, 5,
		111, 0, 0, 690, 691, 5, 105, 0, 0, 691, 692, 5, 100, 0, 0, 692, 165, 1,
		0, 0, 0, 693, 694, 5, 99, 0, 0, 694, 695, 5, 111, 0, 0, 695, 696, 5, 110,
		0, 0, 696, 697, 5, 116, 0, 0, 697, 698, 5, 105, 0, 0, 698, 699, 5, 110,
		0, 0, 699, 700, 5, 117, 0, 0, 700, 701, 5, 101, 0, 0, 701, 167, 1, 0, 0,
		0, 702, 703, 5, 102, 0, 0, 703, 704, 5, 111, 0, 0, 704, 705, 5, 114, 0,
		0, 705, 169, 1, 0, 0, 0, 706, 707, 5, 115, 0, 0, 707, 708, 5, 119, 0, 0,
		708, 709, 5, 105, 0, 0, 709, 710, 5, 116, 0, 0, 710, 711, 5, 99, 0, 0,
		711, 712, 5, 104, 0, 0, 712, 171, 1, 0, 0, 0, 713, 714, 5, 119, 0, 0, 714,
		715, 5, 104, 0, 0, 715, 716, 5, 105, 0, 0, 716, 717, 5, 108, 0, 0, 717,
		718, 5, 101, 0, 0, 718, 173, 1, 0, 0, 0, 719, 720, 5, 100, 0, 0, 720, 721,
		5, 101, 0, 0, 721, 722, 5, 98, 0, 0, 722, 723, 5, 117, 0, 0, 723, 724,
		5, 103, 0, 0, 724, 725, 5, 103, 0, 0, 725, 726, 5, 101, 0, 0, 726, 727,
		5, 114, 0, 0, 727, 175, 1, 0, 0, 0, 728, 729, 5, 102, 0, 0, 729, 730, 5,
		117, 0, 0, 730, 731, 5, 110, 0, 0, 731, 732, 5, 99, 0, 0, 732, 733, 5,
		116, 0, 0, 733, 734, 5, 105, 0, 0, 734, 735, 5, 111, 0, 0, 735, 736, 5,
		110, 0, 0, 736, 177, 1, 0, 0, 0, 737, 738, 5, 116, 0, 0, 738, 739, 5, 104,
		0, 0, 739, 740, 5, 105, 0, 0, 740, 741, 5, 115, 0, 0, 741, 179, 1, 0, 0,
		0, 742, 743, 5, 119, 0, 0, 743, 744, 5, 105, 0, 0, 744, 745, 5, 116, 0,
		0, 745, 746, 5, 104, 0, 0, 746, 181, 1, 0, 0, 0, 747, 748, 5, 100, 0, 0,
		748, 749, 5, 101, 0, 0, 749, 750, 5, 102, 0, 0, 750, 751, 5, 97, 0, 0,
		751, 752, 5, 117, 0, 0, 752, 753, 5, 108, 0, 0, 753, 754, 5, 116, 0, 0,
		754, 183, 1, 0, 0, 0, 755, 756, 5, 105, 0, 0, 756, 757, 5, 102, 0, 0, 757,
		185, 1, 0, 0, 0, 758, 759, 5, 116, 0, 0, 759, 760, 5, 104, 0, 0, 760, 761,
		5, 114, 0, 0, 761, 762, 5, 111, 0, 0, 762, 763, 5, 119, 0, 0, 763, 187,
		1, 0, 0, 0, 764, 765, 5, 100, 0, 0, 765, 766, 5, 101, 0, 0, 766, 767, 5,
		108, 0, 0, 767, 768, 5, 101, 0, 0, 768, 769, 5, 116, 0, 0, 769, 770, 5,
		101, 0, 0, 770, 189, 1, 0, 0, 0, 771, 772, 5, 105, 0, 0, 772, 773, 5, 110,
		0, 0, 773, 191, 1, 0, 0, 0, 774, 775, 5, 116, 0, 0, 775, 776, 5, 114, 0,
		0, 776, 777, 5, 121, 0, 0, 777, 193, 1, 0, 0, 0, 778, 779, 5, 97, 0, 0,
		779, 780, 5, 115, 0, 0, 780, 195, 1, 0, 0, 0, 781, 782, 5, 102, 0, 0, 782,
		783, 5, 114, 0, 0, 783, 784, 5, 111, 0, 0, 784, 785, 5, 109, 0, 0, 785,
		197, 1, 0, 0, 0, 786, 787, 5, 103, 0, 0, 787, 788, 5, 101, 0, 0, 788, 789,
		5, 116, 0, 0, 789, 199, 1, 0, 0, 0, 790, 791, 5, 115, 0, 0, 791, 792, 5,
		101, 0, 0, 792, 793, 5, 116, 0, 0, 793, 201, 1, 0, 0, 0, 794, 795, 5, 99,
		0, 0, 795, 796, 5, 108, 0, 0, 796, 797, 5, 97, 0, 0, 797, 798, 5, 115,
		0, 0, 798, 799, 5, 115, 0, 0, 799, 203, 1, 0, 0, 0, 800, 801, 5, 101, 0,
		0, 801, 802, 5, 110, 0, 0, 802, 803, 5, 117, 0, 0, 803, 804, 5, 109, 0,
		0, 804, 205, 1, 0, 0, 0, 805, 806, 5, 101, 0, 0, 806, 807, 5, 120, 0, 0,
		807, 808, 5, 116, 0, 0, 808, 809, 5, 101, 0, 0, 809, 810, 5, 110, 0, 0,
		810, 811, 5, 100, 0, 0, 811, 812, 5, 115, 0, 0, 812, 207, 1, 0, 0, 0, 813,
		814, 5, 115, 0, 0, 814, 815, 5, 117, 0, 0, 815, 816, 5, 112, 0, 0, 816,
		817, 5, 101, 0, 0, 817, 818, 5, 114, 0, 0, 818, 209, 1, 0, 0, 0, 819, 820,
		5, 99, 0, 0, 820, 821, 5, 111, 0, 0, 821, 822, 5, 110, 0, 0, 822, 823,
		5, 115, 0, 0, 823, 824, 5, 116, 0, 0, 824, 211, 1, 0, 0, 0, 825, 826, 5,
		101, 0, 0, 826, 827, 5, 120, 0, 0, 827, 828, 5, 112, 0, 0, 828, 829, 5,
		111, 0, 0, 829, 830, 5, 114, 0, 0, 830, 831, 5, 116, 0, 0, 831, 213, 1,
		0, 0, 0, 832, 833, 5, 105, 0, 0, 833, 834, 5, 109, 0, 0, 834, 835, 5, 112,
		0, 0, 835, 836, 5, 111, 0, 0, 836, 837, 5, 114, 0, 0, 837, 838, 5, 116,
		0, 0, 838, 215, 1, 0, 0, 0, 839, 840, 5, 97, 0, 0, 840, 841, 5, 115, 0,
		0, 841, 842, 5, 121, 0, 0, 842, 843, 5, 110, 0, 0, 843, 844, 5, 99, 0,
		0, 844, 217, 1, 0, 0, 0, 845, 846, 5, 97, 0, 0, 846, 847, 5, 119, 0, 0,
		847, 848, 5, 97, 0, 0, 848, 849, 5, 105, 0, 0, 849, 850, 5, 116, 0, 0,
		850, 219, 1, 0, 0, 0, 851, 852, 5, 121, 0, 0, 852, 853, 5, 105, 0, 0, 853,
		854, 5, 101, 0, 0, 854, 855, 5, 108, 0, 0, 855, 856, 5, 100, 0, 0, 856,
		221, 1, 0, 0, 0, 857, 858, 5, 105, 0, 0, 858, 859, 5, 109, 0, 0, 859, 860,
		5, 112, 0, 0, 860, 861, 5, 108, 0, 0, 861, 862, 5, 101, 0, 0, 862, 863,
		5, 109, 0, 0, 863, 864, 5, 101, 0, 0, 864, 865, 5, 110, 0, 0, 865, 866,
		5, 116, 0, 0, 866, 867, 5, 115, 0, 0, 867, 868, 1, 0, 0, 0, 868, 869, 4,
		110, 4, 0, 869, 223, 1, 0, 0, 0, 870, 871, 5, 108, 0, 0, 871, 872, 5, 101,
		0, 0, 872, 873, 5, 116, 0, 0, 873, 874, 1, 0, 0, 0, 874, 875, 4, 111, 5,
		0, 875, 225, 1, 0, 0, 0, 876, 877, 5, 108, 0, 0, 877, 878, 5, 101, 0, 0,
		878, 879, 5, 116, 0, 0, 879, 880, 1, 0, 0, 0, 880, 881, 4, 112, 6, 0, 881,
		227, 1, 0, 0, 0, 882, 883, 5, 112, 0, 0, 883, 884, 5, 114, 0, 0, 884, 885,
		5, 105, 0, 0, 885, 886, 5, 118, 0, 0, 886, 887, 5, 97, 0, 0, 887, 888,
		5, 116, 0, 0, 888, 889, 5, 101, 0, 0, 889, 890, 1, 0, 0, 0, 890, 891, 4,
		113, 7, 0, 891, 229, 1, 0, 0, 0, 892, 893, 5, 112, 0, 0, 893, 894, 5, 117,
		0, 0, 894, 895, 5, 98, 0, 0, 895, 896, 5, 108, 0, 0, 896, 897, 5, 105,
		0, 0, 897, 898, 5, 99, 0, 0, 898, 899, 1, 0, 0, 0, 899, 900, 4, 114, 8,
		0, 900, 231, 1, 0, 0, 0, 901, 902, 5, 105, 0, 0, 902, 903, 5, 110, 0, 0,
		903, 904, 5, 116, 0, 0, 904, 905, 5, 101, 0, 0, 905, 906, 5, 114, 0, 0,
		906, 907, 5, 102, 0, 0, 907, 908, 5, 97, 0, 0, 908, 909, 5, 99, 0, 0, 909,
		910, 5, 101, 0, 0, 910, 911, 1, 0, 0, 0, 911, 912, 4, 115, 9, 0, 912, 233,
		1, 0, 0, 0, 913, 914, 5, 112, 0, 0, 914, 915, 5, 97, 0, 0, 915, 916, 5,
		99, 0, 0, 916, 917, 5, 107, 0, 0, 917, 918, 5, 97, 0, 0, 918, 919, 5, 103,
		0, 0, 919, 920, 5, 101, 0, 0, 920, 921, 1, 0, 0, 0, 921, 922, 4, 116, 10,
		0, 922, 235, 1, 0, 0, 0, 923, 924, 5, 112, 0, 0, 924, 925, 5, 114, 0, 0,
		925, 926, 5, 111, 0, 0, 926, 927, 5, 116, 0, 0, 927, 928, 5, 101, 0, 0,
		928, 929, 5, 99, 0, 0, 929, 930, 5, 116, 0, 0, 930, 931, 5, 101, 0, 0,
		931, 932, 5, 100, 0, 0, 932, 933, 1, 0, 0, 0, 933, 934, 4, 117, 11, 0,
		934, 237, 1, 0, 0, 0, 935, 936, 5, 115, 0, 0, 936, 937, 5, 116, 0, 0, 937,
		938, 5, 97, 0, 0, 938, 939, 5, 116, 0, 0, 939, 940, 5, 105, 0, 0, 940,
		941, 5, 99, 0, 0, 941, 942, 1, 0, 0, 0, 942, 943, 4, 118, 12, 0, 943, 239,
		1, 0, 0, 0, 944, 948, 3, 292, 145, 0, 945, 947, 3, 290, 144, 0, 946, 945,
		1, 0, 0, 0, 947, 950, 1, 0, 0, 0, 948, 946, 1, 0, 0, 0, 948, 949, 1, 0,
		0, 0, 949, 241, 1, 0, 0, 0, 950, 948, 1, 0, 0, 0, 951, 955, 5, 34, 0, 0,
		952, 954, 3, 262, 130, 0, 953, 952, 1, 0, 0, 0, 954, 957, 1, 0, 0, 0, 955,
		953, 1, 0, 0, 0, 955, 956, 1, 0, 0, 0, 956, 958, 1, 0, 0, 0, 957, 955,
		1, 0, 0, 0, 958, 968, 5, 34, 0, 0, 959, 963, 5, 39, 0, 0, 960, 962, 3,
		264, 131, 0, 961, 960, 1, 0, 0, 0, 962, 965, 1, 0, 0, 0, 963, 961, 1, 0,
		0, 0, 963, 964, 1, 0, 0, 0, 964, 966, 1, 0, 0, 0, 965, 963, 1, 0, 0, 0,
		966, 968, 5, 39, 0, 0, 967, 951, 1, 0, 0, 0, 967, 959, 1, 0, 0, 0, 968,
		969, 1, 0, 0, 0, 969, 970, 6, 120, 4, 0, 970, 243, 1, 0, 0, 0, 971, 972,
		5, 96, 0, 0, 972, 973, 6, 121, 5, 0, 973, 974, 1, 0, 0, 0, 974, 975, 6,
		121, 6, 0, 975, 245, 1, 0, 0, 0, 976, 978, 7, 11, 0, 0, 977, 976, 1, 0,
		0, 0, 978, 979, 1, 0, 0, 0, 979, 977, 1, 0, 0, 0, 979, 980, 1, 0, 0, 0,
		980, 981, 1, 0, 0, 0, 981, 982, 6, 122, 0, 0, 982, 247, 1, 0, 0, 0, 983,
		984, 7, 0, 0, 0, 984, 985, 1, 0, 0, 0, 985, 986, 6, 123, 0, 0, 986, 249,
		1, 0, 0, 0, 987, 988, 5, 60, 0, 0, 988, 989, 5, 33, 0, 0, 989, 990, 5,
		45, 0, 0, 990, 991, 5, 45, 0, 0, 991, 995, 1, 0, 0, 0, 992, 994, 9, 0,
		0, 0, 993, 992, 1, 0, 0, 0, 994, 997, 1, 0, 0, 0, 995, 996, 1, 0, 0, 0,
		995, 993, 1, 0, 0, 0, 996, 998, 1, 0, 0, 0, 997, 995, 1, 0, 0, 0, 998,
		999, 5, 45, 0, 0, 999, 1000, 5, 45, 0, 0, 1000, 1001, 5, 62, 0, 0, 1001,
		1002, 1, 0, 0, 0, 1002, 1003, 6, 124, 0, 0, 1003, 251, 1, 0, 0, 0, 1004,
		1005, 5, 60, 0, 0, 1005, 1006, 5, 33, 0, 0, 1006, 1007, 5, 91, 0, 0, 1007,
		1008, 5, 67, 0, 0, 1008, 1009, 5, 68, 0, 0, 1009, 1010, 5, 65, 0, 0, 1010,
		1011, 5, 84, 0, 0, 1011, 1012, 5, 65, 0, 0, 1012, 1013, 5, 91, 0, 0, 1013,
		1017, 1, 0, 0, 0, 1014, 1016, 9, 0, 0, 0, 1015, 1014, 1, 0, 0, 0, 1016,
		1019, 1, 0, 0, 0, 1017, 1018, 1, 0, 0, 0, 1017, 1015, 1, 0, 0, 0, 1018,
		1020, 1, 0, 0, 0, 1019, 1017, 1, 0, 0, 0, 1020, 1021, 5, 93, 0, 0, 1021,
		1022, 5, 93, 0, 0, 1022, 1023, 5, 62, 0, 0, 1023, 1024, 1, 0, 0, 0, 1024,
		1025, 6, 125, 0, 0, 1025, 253, 1, 0, 0, 0, 1026, 1027, 9, 0, 0, 0, 1027,
		1028, 1, 0, 0, 0, 1028, 1029, 6, 126, 7, 0, 1029, 255, 1, 0, 0, 0, 1030,
		1031, 5, 96, 0, 0, 1031, 1032, 6, 127, 8, 0, 1032, 1033, 1, 0, 0, 0, 1033,
		1034, 6, 127, 9, 0, 1034, 1035, 6, 127, 2, 0, 1035, 257, 1, 0, 0, 0, 1036,
		1037, 5, 36, 0, 0, 1037, 1038, 5, 123, 0, 0, 1038, 1039, 1, 0, 0, 0, 1039,
		1040, 6, 128, 10, 0, 1040, 259, 1, 0, 0, 0, 1041, 1042, 8, 12, 0, 0, 1042,
		261, 1, 0, 0, 0, 1043, 1048, 8, 13, 0, 0, 1044, 1045, 5, 92, 0, 0, 1045,
		1048, 3, 266, 132, 0, 1046, 1048, 3, 282, 140, 0, 1047, 1043, 1, 0, 0,
		0, 1047, 1044, 1, 0, 0, 0, 1047, 1046, 1, 0, 0, 0, 1048, 263, 1, 0, 0,
		0, 1049, 1054, 8, 14, 0, 0, 1050, 1051, 5, 92, 0, 0, 1051, 1054, 3, 266,
		132, 0, 1052, 1054, 3, 282, 140, 0, 1053, 1049, 1, 0, 0, 0, 1053, 1050,
		1, 0, 0, 0, 1053, 1052, 1, 0, 0, 0, 1054, 265, 1, 0, 0, 0, 1055, 1061,
		3, 268, 133, 0, 1056, 1061, 5, 48, 0, 0, 1057, 1061, 3, 270, 134, 0, 1058,
		1061, 3, 272, 135, 0, 1059, 1061, 3, 274, 136, 0, 1060, 1055, 1, 0, 0,
		0, 1060, 1056, 1, 0, 0, 0, 1060, 1057, 1, 0, 0, 0, 1060, 1058, 1, 0, 0,
		0, 1060, 1059, 1, 0, 0, 0, 1061, 267, 1, 0, 0, 0, 1062, 1065, 3, 276, 137,
		0, 1063, 1065, 3, 278, 138, 0, 1064, 1062, 1, 0, 0, 0, 1064, 1063, 1, 0,
		0, 0, 1065, 269, 1, 0, 0, 0, 1066, 1067, 5, 120, 0, 0, 1067, 1068, 3, 284,
		141, 0, 1068, 1069, 3, 284, 141, 0, 1069, 271, 1, 0, 0, 0, 1070, 1071,
		5, 117, 0, 0, 1071, 1072, 3, 284, 141, 0, 1072, 1073, 3, 284, 141, 0, 1073,
		1074, 3, 284, 141, 0, 1074, 1075, 3, 284, 141, 0, 1075, 1087, 1, 0, 0,
		0, 1076, 1077, 5, 117, 0, 0, 1077, 1078, 5, 123, 0, 0, 1078, 1080, 3, 284,
		141, 0, 1079, 1081, 3, 284, 141, 0, 1080, 1079, 1, 0, 0, 0, 1081, 1082,
		1, 0, 0, 0, 1082, 1080, 1, 0, 0, 0, 1082, 1083, 1, 0, 0, 0, 1083, 1084,
		1, 0, 0, 0, 1084, 1085, 5, 125, 0, 0, 1085, 1087, 1, 0, 0, 0, 1086, 1070,
		1, 0, 0, 0, 1086, 1076, 1, 0, 0, 0, 1087, 273, 1, 0, 0, 0, 1088, 1089,
		5, 117, 0, 0, 1089, 1091, 5, 123, 0, 0, 1090, 1092, 3, 284, 141, 0, 1091,
		1090, 1, 0, 0, 0, 1092, 1093, 1, 0, 0, 0, 1093, 1091, 1, 0, 0, 0, 1093,
		1094, 1, 0, 0, 0, 1094, 1095, 1, 0, 0, 0, 1095, 1096, 5, 125, 0, 0, 1096,
		275, 1, 0, 0, 0, 1097, 1098, 7, 15, 0, 0, 1098, 277, 1, 0, 0, 0, 1099,
		1100, 8, 16, 0, 0, 1100, 279, 1, 0, 0, 0, 1101, 1104, 3, 276, 137, 0, 1102,
		1104, 7, 17, 0, 0, 1103, 1101, 1, 0, 0, 0, 1103, 1102, 1, 0, 0, 0, 1104,
		281, 1, 0, 0, 0, 1105, 1106, 5, 92, 0, 0, 1106, 1107, 7, 0, 0, 0, 1107,
		283, 1, 0, 0, 0, 1108, 1109, 7, 18, 0, 0, 1109, 285, 1, 0, 0, 0, 1110,
		1119, 5, 48, 0, 0, 1111, 1115, 7, 19, 0, 0, 1112, 1114, 7, 2, 0, 0, 1113,
		1112, 1, 0, 0, 0, 1114, 1117, 1, 0, 0, 0, 1115, 1113, 1, 0, 0, 0, 1115,
		1116, 1, 0, 0, 0, 1116, 1119, 1, 0, 0, 0, 1117, 1115, 1, 0, 0, 0, 1118,
		1110, 1, 0, 0, 0, 1118, 1111, 1, 0, 0, 0, 1119, 287, 1, 0, 0, 0, 1120,
		1122, 7, 20, 0, 0, 1121, 1123, 7, 21, 0, 0, 1122, 1121, 1, 0, 0, 0, 1122,
		1123, 1, 0, 0, 0, 1123, 1125, 1, 0, 0, 0, 1124, 1126, 7, 2, 0, 0, 1125,
		1124, 1, 0, 0, 0, 1126, 1127, 1, 0, 0, 0, 1127, 1125, 1, 0, 0, 0, 1127,
		1128, 1, 0, 0, 0, 1128, 289, 1, 0, 0, 0, 1129, 1132, 3, 292, 145, 0, 1130,
		1132, 7, 22, 0, 0, 1131, 1129, 1, 0, 0, 0, 1131, 1130, 1, 0, 0, 0, 1132,
		291, 1, 0, 0, 0, 1133, 1137, 7, 23, 0, 0, 1134, 1135, 5, 92, 0, 0, 1135,
		1137, 3, 272, 135, 0, 1136, 1133, 1, 0, 0, 0, 1136, 1134, 1, 0, 0, 0, 1137,
		293, 1, 0, 0, 0, 1138, 1149, 8, 24, 0, 0, 1139, 1149, 3, 300, 149, 0, 1140,
		1144, 5, 91, 0, 0, 1141, 1143, 3, 298, 148, 0, 1142, 1141, 1, 0, 0, 0,
		1143, 1146, 1, 0, 0, 0, 1144, 1142, 1, 0, 0, 0, 1144, 1145, 1, 0, 0, 0,
		1145, 1147, 1, 0, 0, 0, 1146, 1144, 1, 0, 0, 0, 1147, 1149, 5, 93, 0, 0,
		1148, 1138, 1, 0, 0, 0, 1148, 1139, 1, 0, 0, 0, 1148, 1140, 1, 0, 0, 0,
		1149, 295, 1, 0, 0, 0, 1150, 1161, 8, 25, 0, 0, 1151, 1161, 3, 300, 149,
		0, 1152, 1156, 5, 91, 0, 0, 1153, 1155, 3, 298, 148, 0, 1154, 1153, 1,
		0, 0, 0, 1155, 1158, 1, 0, 0, 0, 1156, 1154, 1, 0, 0, 0, 1156, 1157, 1,
		0, 0, 0, 1157, 1159, 1, 0, 0, 0, 1158, 1156, 1, 0, 0, 0, 1159, 1161, 5,
		93, 0, 0, 1160, 1150, 1, 0, 0, 0, 1160, 1151, 1, 0, 0, 0, 1160, 1152, 1,
		0, 0, 0, 1161, 297, 1, 0, 0, 0, 1162, 1165, 8, 26, 0, 0, 1163, 1165, 3,
		300, 149, 0, 1164, 1162, 1, 0, 0, 0, 1164, 1163, 1, 0, 0, 0, 1165, 299,
		1, 0, 0, 0, 1166, 1167, 5, 92, 0, 0, 1167, 1168, 8, 0, 0, 0, 1168, 301,
		1, 0, 0, 0, 47, 0, 1, 309, 318, 332, 342, 350, 520, 528, 532, 539, 543,
		547, 549, 557, 564, 574, 583, 592, 603, 614, 948, 955, 963, 967, 979, 995,
		1017, 1047, 1053, 1060, 1064, 1082, 1086, 1093, 1103, 1115, 1118, 1122,
		1127, 1131, 1136, 1144, 1148, 1156, 1160, 1164, 11, 0, 1, 0, 1, 8, 0, 4,
		0, 0, 1, 10, 1, 1, 120, 2, 1, 121, 3, 5, 1, 0, 0, 2, 0, 1, 127, 4, 7, 122,
		0, 5, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// JavaScriptLexerInit initializes any static state used to implement JavaScriptLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewJavaScriptLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func JavaScriptLexerInit() {
	staticData := &JavaScriptLexerLexerStaticData
	staticData.once.Do(javascriptlexerLexerInit)
}

// NewJavaScriptLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewJavaScriptLexer(input antlr.CharStream) *JavaScriptLexer {
	JavaScriptLexerInit()
	l := new(JavaScriptLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &JavaScriptLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "JavaScriptLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// JavaScriptLexer tokens.
const (
	JavaScriptLexerHashBangLine                  = 1
	JavaScriptLexerMultiLineComment              = 2
	JavaScriptLexerSingleLineComment             = 3
	JavaScriptLexerRegularExpressionLiteral      = 4
	JavaScriptLexerOpenBracket                   = 5
	JavaScriptLexerCloseBracket                  = 6
	JavaScriptLexerOpenParen                     = 7
	JavaScriptLexerCloseParen                    = 8
	JavaScriptLexerOpenBrace                     = 9
	JavaScriptLexerTemplateCloseBrace            = 10
	JavaScriptLexerCloseBrace                    = 11
	JavaScriptLexerSemiColon                     = 12
	JavaScriptLexerComma                         = 13
	JavaScriptLexerAssign                        = 14
	JavaScriptLexerQuestionMark                  = 15
	JavaScriptLexerColon                         = 16
	JavaScriptLexerEllipsis                      = 17
	JavaScriptLexerDot                           = 18
	JavaScriptLexerPlusPlus                      = 19
	JavaScriptLexerMinusMinus                    = 20
	JavaScriptLexerPlus                          = 21
	JavaScriptLexerMinus                         = 22
	JavaScriptLexerBitNot                        = 23
	JavaScriptLexerNot                           = 24
	JavaScriptLexerMultiply                      = 25
	JavaScriptLexerDivide                        = 26
	JavaScriptLexerModulus                       = 27
	JavaScriptLexerPower                         = 28
	JavaScriptLexerNullCoalesce                  = 29
	JavaScriptLexerHashtag                       = 30
	JavaScriptLexerRightShiftArithmetic          = 31
	JavaScriptLexerLeftShiftArithmetic           = 32
	JavaScriptLexerRightShiftLogical             = 33
	JavaScriptLexerLessThan                      = 34
	JavaScriptLexerMoreThan                      = 35
	JavaScriptLexerLessThanEquals                = 36
	JavaScriptLexerGreaterThanEquals             = 37
	JavaScriptLexerEquals_                       = 38
	JavaScriptLexerNotEquals                     = 39
	JavaScriptLexerIdentityEquals                = 40
	JavaScriptLexerIdentityNotEquals             = 41
	JavaScriptLexerBitAnd                        = 42
	JavaScriptLexerBitXOr                        = 43
	JavaScriptLexerBitOr                         = 44
	JavaScriptLexerAnd                           = 45
	JavaScriptLexerOr                            = 46
	JavaScriptLexerMultiplyAssign                = 47
	JavaScriptLexerDivideAssign                  = 48
	JavaScriptLexerModulusAssign                 = 49
	JavaScriptLexerPlusAssign                    = 50
	JavaScriptLexerMinusAssign                   = 51
	JavaScriptLexerLeftShiftArithmeticAssign     = 52
	JavaScriptLexerRightShiftArithmeticAssign    = 53
	JavaScriptLexerRightShiftLogicalAssign       = 54
	JavaScriptLexerBitAndAssign                  = 55
	JavaScriptLexerBitXorAssign                  = 56
	JavaScriptLexerBitOrAssign                   = 57
	JavaScriptLexerPowerAssign                   = 58
	JavaScriptLexerARROW                         = 59
	JavaScriptLexerNullLiteral                   = 60
	JavaScriptLexerBooleanLiteral                = 61
	JavaScriptLexerDecimalLiteral                = 62
	JavaScriptLexerHexIntegerLiteral             = 63
	JavaScriptLexerOctalIntegerLiteral           = 64
	JavaScriptLexerOctalIntegerLiteral2          = 65
	JavaScriptLexerBinaryIntegerLiteral          = 66
	JavaScriptLexerBigHexIntegerLiteral          = 67
	JavaScriptLexerBigOctalIntegerLiteral        = 68
	JavaScriptLexerBigBinaryIntegerLiteral       = 69
	JavaScriptLexerBigDecimalIntegerLiteral      = 70
	JavaScriptLexerBreak                         = 71
	JavaScriptLexerDo                            = 72
	JavaScriptLexerInstanceof                    = 73
	JavaScriptLexerTypeof                        = 74
	JavaScriptLexerCase                          = 75
	JavaScriptLexerElse                          = 76
	JavaScriptLexerNew                           = 77
	JavaScriptLexerVar                           = 78
	JavaScriptLexerCatch                         = 79
	JavaScriptLexerFinally                       = 80
	JavaScriptLexerReturn                        = 81
	JavaScriptLexerVoid                          = 82
	JavaScriptLexerContinue                      = 83
	JavaScriptLexerFor                           = 84
	JavaScriptLexerSwitch                        = 85
	JavaScriptLexerWhile                         = 86
	JavaScriptLexerDebugger                      = 87
	JavaScriptLexerFunction_                     = 88
	JavaScriptLexerThis                          = 89
	JavaScriptLexerWith                          = 90
	JavaScriptLexerDefault                       = 91
	JavaScriptLexerIf                            = 92
	JavaScriptLexerThrow                         = 93
	JavaScriptLexerDelete                        = 94
	JavaScriptLexerIn                            = 95
	JavaScriptLexerTry                           = 96
	JavaScriptLexerAs                            = 97
	JavaScriptLexerFrom                          = 98
	JavaScriptLexerGet                           = 99
	JavaScriptLexerSet                           = 100
	JavaScriptLexerClass                         = 101
	JavaScriptLexerEnum                          = 102
	JavaScriptLexerExtends                       = 103
	JavaScriptLexerSuper                         = 104
	JavaScriptLexerConst                         = 105
	JavaScriptLexerExport                        = 106
	JavaScriptLexerImport                        = 107
	JavaScriptLexerAsync                         = 108
	JavaScriptLexerAwait                         = 109
	JavaScriptLexerYield                         = 110
	JavaScriptLexerImplements                    = 111
	JavaScriptLexerStrictLet                     = 112
	JavaScriptLexerNonStrictLet                  = 113
	JavaScriptLexerPrivate                       = 114
	JavaScriptLexerPublic                        = 115
	JavaScriptLexerInterface                     = 116
	JavaScriptLexerPackage                       = 117
	JavaScriptLexerProtected                     = 118
	JavaScriptLexerStatic                        = 119
	JavaScriptLexerIdentifier                    = 120
	JavaScriptLexerStringLiteral                 = 121
	JavaScriptLexerBackTick                      = 122
	JavaScriptLexerWhiteSpaces                   = 123
	JavaScriptLexerLineTerminator                = 124
	JavaScriptLexerHtmlComment                   = 125
	JavaScriptLexerCDataComment                  = 126
	JavaScriptLexerUnexpectedCharacter           = 127
	JavaScriptLexerTemplateStringStartExpression = 128
	JavaScriptLexerTemplateStringAtom            = 129
)

// JavaScriptLexerERROR is the JavaScriptLexer channel.
const JavaScriptLexerERROR = 2

// JavaScriptLexerTEMPLATE is the JavaScriptLexer mode.
const JavaScriptLexerTEMPLATE = 1

func (l *JavaScriptLexer) Action(localctx antlr.RuleContext, ruleIndex, actionIndex int) {
	switch ruleIndex {
	case 8:
		l.OpenBrace_Action(localctx, actionIndex)

	case 10:
		l.CloseBrace_Action(localctx, actionIndex)

	case 120:
		l.StringLiteral_Action(localctx, actionIndex)

	case 121:
		l.BackTick_Action(localctx, actionIndex)

	case 127:
		l.BackTickInside_Action(localctx, actionIndex)

	default:
		panic("No registered action for: " + fmt.Sprint(ruleIndex))
	}
}

func (l *JavaScriptLexer) OpenBrace_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 0:
		l.ProcessOpenBrace()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *JavaScriptLexer) CloseBrace_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 1:
		l.ProcessCloseBrace()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *JavaScriptLexer) StringLiteral_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 2:
		l.ProcessStringLiteral()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *JavaScriptLexer) BackTick_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 3:
		l.IncreaseTemplateDepth()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *JavaScriptLexer) BackTickInside_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 4:
		l.DecreaseTemplateDepth()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}

func (l *JavaScriptLexer) Sempred(localctx antlr.RuleContext, ruleIndex, predIndex int) bool {
	switch ruleIndex {
	case 0:
		return l.HashBangLine_Sempred(localctx, predIndex)

	case 3:
		return l.RegularExpressionLiteral_Sempred(localctx, predIndex)

	case 9:
		return l.TemplateCloseBrace_Sempred(localctx, predIndex)

	case 63:
		return l.OctalIntegerLiteral_Sempred(localctx, predIndex)

	case 110:
		return l.Implements_Sempred(localctx, predIndex)

	case 111:
		return l.StrictLet_Sempred(localctx, predIndex)

	case 112:
		return l.NonStrictLet_Sempred(localctx, predIndex)

	case 113:
		return l.Private_Sempred(localctx, predIndex)

	case 114:
		return l.Public_Sempred(localctx, predIndex)

	case 115:
		return l.Interface_Sempred(localctx, predIndex)

	case 116:
		return l.Package_Sempred(localctx, predIndex)

	case 117:
		return l.Protected_Sempred(localctx, predIndex)

	case 118:
		return l.Static_Sempred(localctx, predIndex)

	default:
		panic("No registered predicate for: " + fmt.Sprint(ruleIndex))
	}
}

func (p *JavaScriptLexer) HashBangLine_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	switch predIndex {
	case 0:
		return p.IsStartOfFile()

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (p *JavaScriptLexer) RegularExpressionLiteral_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	switch predIndex {
	case 1:
		return p.IsRegexPossible()

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (p *JavaScriptLexer) TemplateCloseBrace_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	switch predIndex {
	case 2:
		return p.IsInTemplateString()

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (p *JavaScriptLexer) OctalIntegerLiteral_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	switch predIndex {
	case 3:
		return !p.IsStrictMode()

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (p *JavaScriptLexer) Implements_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	switch predIndex {
	case 4:
		return p.IsStrictMode()

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (p *JavaScriptLexer) StrictLet_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	switch predIndex {
	case 5:
		return p.IsStrictMode()

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (p *JavaScriptLexer) NonStrictLet_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	switch predIndex {
	case 6:
		return !p.IsStrictMode()

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (p *JavaScriptLexer) Private_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	switch predIndex {
	case 7:
		return p.IsStrictMode()

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (p *JavaScriptLexer) Public_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	switch predIndex {
	case 8:
		return p.IsStrictMode()

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (p *JavaScriptLexer) Interface_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	switch predIndex {
	case 9:
		return p.IsStrictMode()

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (p *JavaScriptLexer) Package_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	switch predIndex {
	case 10:
		return p.IsStrictMode()

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (p *JavaScriptLexer) Protected_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	switch predIndex {
	case 11:
		return p.IsStrictMode()

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (p *JavaScriptLexer) Static_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	switch predIndex {
	case 12:
		return p.IsStrictMode()

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

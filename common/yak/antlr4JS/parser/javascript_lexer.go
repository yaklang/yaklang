// Code generated from java-escape by ANTLR 4.11.1. DO NOT EDIT.

package JS

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr/v4"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type JavaScriptLexer struct {
	JavaScriptLexerBase
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var javascriptlexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func javascriptlexerLexerInit() {
	staticData := &javascriptlexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "ERROR",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE", "TEMPLATE",
	}
	staticData.literalNames = []string{
		"", "", "", "", "", "", "'['", "']'", "'('", "')'", "'{'", "", "'}'",
		"';'", "','", "'='", "'?'", "':'", "'...'", "'.'", "'++'", "'--'", "'+'",
		"'-'", "'~'", "'!'", "'*'", "'/'", "'%'", "'**'", "'??'", "'#'", "'>>'",
		"'<<'", "'>>>'", "'<'", "'>'", "'<='", "'>='", "'=='", "'!='", "'==='",
		"'!=='", "'&'", "'^'", "'|'", "'&&'", "'||'", "'*='", "'/='", "'%='",
		"'+='", "'-='", "'<<='", "'>>='", "'>>>='", "'&='", "'^='", "'|='",
		"'**='", "'=>'", "'null'", "", "", "", "", "", "", "", "", "", "", "'break'",
		"'do'", "'instanceof'", "'typeof'", "'case'", "'else'", "'new'", "'var'",
		"'catch'", "'finally'", "'return'", "'void'", "'continue'", "'for'",
		"'switch'", "'while'", "'debugger'", "'function'", "'this'", "'with'",
		"'default'", "'if'", "'throw'", "'delete'", "'in'", "'try'", "'as'",
		"'from'", "'get'", "'set'", "'class'", "'enum'", "'extends'", "'super'",
		"'const'", "'export'", "'import'", "'async'", "'await'", "'yield'",
		"'implements'", "", "", "'private'", "'public'", "'interface'", "'package'",
		"'protected'", "'static'", "", "", "", "'\\r'", "", "", "", "", "",
		"'${'",
	}
	staticData.symbolicNames = []string{
		"", "HashBangLine", "SingleLineComment", "BlockComment", "MultiLineComment",
		"RegularExpressionLiteral", "OpenBracket", "CloseBracket", "OpenParen",
		"CloseParen", "OpenBrace", "TemplateCloseBrace", "CloseBrace", "SemiColon",
		"Comma", "Assign", "QuestionMark", "Colon", "Ellipsis", "Dot", "PlusPlus",
		"MinusMinus", "Plus", "Minus", "BitNot", "Not", "Multiply", "Divide",
		"Modulus", "Power", "NullCoalesce", "Hashtag", "RightShiftArithmetic",
		"LeftShiftArithmetic", "RightShiftLogical", "LessThan", "MoreThan",
		"LessThanEquals", "GreaterThanEquals", "Equals_", "NotEquals", "IdentityEquals",
		"IdentityNotEquals", "BitAnd", "BitXOr", "BitOr", "And", "Or", "MultiplyAssign",
		"DivideAssign", "ModulusAssign", "PlusAssign", "MinusAssign", "LeftShiftArithmeticAssign",
		"RightShiftArithmeticAssign", "RightShiftLogicalAssign", "BitAndAssign",
		"BitXorAssign", "BitOrAssign", "PowerAssign", "ARROW", "NullLiteral",
		"BooleanLiteral", "DecimalLiteral", "HexIntegerLiteral", "OctalIntegerLiteral",
		"OctalIntegerLiteral2", "BinaryIntegerLiteral", "BigHexIntegerLiteral",
		"BigOctalIntegerLiteral", "BigBinaryIntegerLiteral", "BigDecimalIntegerLiteral",
		"Break", "Do", "Instanceof", "Typeof", "Case", "Else", "New", "Var",
		"Catch", "Finally", "Return", "Void", "Continue", "For", "Switch", "While",
		"Debugger", "Function_", "This", "With", "Default", "If", "Throw", "Delete",
		"In", "Try", "As", "From", "Get", "Set", "Class", "Enum", "Extends",
		"Super", "Const", "Export", "Import", "Async", "Await", "Yield", "Implements",
		"StrictLet", "NonStrictLet", "Private", "Public", "Interface", "Package",
		"Protected", "Static", "Identifier", "StringLiteral", "BackTick", "CR",
		"WS", "LineTerminator", "HtmlComment", "CDataComment", "UnexpectedCharacter",
		"TemplateStringStartExpression", "TemplateStringAtom",
	}
	staticData.ruleNames = []string{
		"HashBangLine", "SingleLineComment", "BlockComment", "MultiLineComment",
		"RegularExpressionLiteral", "OpenBracket", "CloseBracket", "OpenParen",
		"CloseParen", "OpenBrace", "TemplateCloseBrace", "CloseBrace", "SemiColon",
		"Comma", "Assign", "QuestionMark", "Colon", "Ellipsis", "Dot", "PlusPlus",
		"MinusMinus", "Plus", "Minus", "BitNot", "Not", "Multiply", "Divide",
		"Modulus", "Power", "NullCoalesce", "Hashtag", "RightShiftArithmetic",
		"LeftShiftArithmetic", "RightShiftLogical", "LessThan", "MoreThan",
		"LessThanEquals", "GreaterThanEquals", "Equals_", "NotEquals", "IdentityEquals",
		"IdentityNotEquals", "BitAnd", "BitXOr", "BitOr", "And", "Or", "MultiplyAssign",
		"DivideAssign", "ModulusAssign", "PlusAssign", "MinusAssign", "LeftShiftArithmeticAssign",
		"RightShiftArithmeticAssign", "RightShiftLogicalAssign", "BitAndAssign",
		"BitXorAssign", "BitOrAssign", "PowerAssign", "ARROW", "NullLiteral",
		"BooleanLiteral", "DecimalLiteral", "HexIntegerLiteral", "OctalIntegerLiteral",
		"OctalIntegerLiteral2", "BinaryIntegerLiteral", "BigHexIntegerLiteral",
		"BigOctalIntegerLiteral", "BigBinaryIntegerLiteral", "BigDecimalIntegerLiteral",
		"Break", "Do", "Instanceof", "Typeof", "Case", "Else", "New", "Var",
		"Catch", "Finally", "Return", "Void", "Continue", "For", "Switch", "While",
		"Debugger", "Function_", "This", "With", "Default", "If", "Throw", "Delete",
		"In", "Try", "As", "From", "Get", "Set", "Class", "Enum", "Extends",
		"Super", "Const", "Export", "Import", "Async", "Await", "Yield", "Implements",
		"StrictLet", "NonStrictLet", "Private", "Public", "Interface", "Package",
		"Protected", "Static", "Identifier", "StringLiteral", "BackTick", "CR",
		"WS", "LineTerminator", "HtmlComment", "CDataComment", "UnexpectedCharacter",
		"BackTickInside", "TemplateStringStartExpression", "TemplateStringAtom",
		"DoubleStringCharacter", "SingleStringCharacter", "EscapeSequence",
		"CharacterEscapeSequence", "HexEscapeSequence", "UnicodeEscapeSequence",
		"ExtendedUnicodeEscapeSequence", "SingleEscapeCharacter", "NonEscapeCharacter",
		"EscapeCharacter", "LineContinuation", "HexDigit", "DecimalIntegerLiteral",
		"ExponentPart", "IdentifierPart", "IdentifierStart", "RegularExpressionFirstChar",
		"RegularExpressionChar", "RegularExpressionClassChar", "RegularExpressionBackslashSequence",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 131, 1192, 6, -1, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3,
		7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9,
		7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7,
		14, 2, 15, 7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19,
		2, 20, 7, 20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2,
		25, 7, 25, 2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30,
		7, 30, 2, 31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7,
		35, 2, 36, 7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40,
		2, 41, 7, 41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2,
		46, 7, 46, 2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51,
		7, 51, 2, 52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7,
		56, 2, 57, 7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61,
		2, 62, 7, 62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2,
		67, 7, 67, 2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 2, 71, 7, 71, 2, 72,
		7, 72, 2, 73, 7, 73, 2, 74, 7, 74, 2, 75, 7, 75, 2, 76, 7, 76, 2, 77, 7,
		77, 2, 78, 7, 78, 2, 79, 7, 79, 2, 80, 7, 80, 2, 81, 7, 81, 2, 82, 7, 82,
		2, 83, 7, 83, 2, 84, 7, 84, 2, 85, 7, 85, 2, 86, 7, 86, 2, 87, 7, 87, 2,
		88, 7, 88, 2, 89, 7, 89, 2, 90, 7, 90, 2, 91, 7, 91, 2, 92, 7, 92, 2, 93,
		7, 93, 2, 94, 7, 94, 2, 95, 7, 95, 2, 96, 7, 96, 2, 97, 7, 97, 2, 98, 7,
		98, 2, 99, 7, 99, 2, 100, 7, 100, 2, 101, 7, 101, 2, 102, 7, 102, 2, 103,
		7, 103, 2, 104, 7, 104, 2, 105, 7, 105, 2, 106, 7, 106, 2, 107, 7, 107,
		2, 108, 7, 108, 2, 109, 7, 109, 2, 110, 7, 110, 2, 111, 7, 111, 2, 112,
		7, 112, 2, 113, 7, 113, 2, 114, 7, 114, 2, 115, 7, 115, 2, 116, 7, 116,
		2, 117, 7, 117, 2, 118, 7, 118, 2, 119, 7, 119, 2, 120, 7, 120, 2, 121,
		7, 121, 2, 122, 7, 122, 2, 123, 7, 123, 2, 124, 7, 124, 2, 125, 7, 125,
		2, 126, 7, 126, 2, 127, 7, 127, 2, 128, 7, 128, 2, 129, 7, 129, 2, 130,
		7, 130, 2, 131, 7, 131, 2, 132, 7, 132, 2, 133, 7, 133, 2, 134, 7, 134,
		2, 135, 7, 135, 2, 136, 7, 136, 2, 137, 7, 137, 2, 138, 7, 138, 2, 139,
		7, 139, 2, 140, 7, 140, 2, 141, 7, 141, 2, 142, 7, 142, 2, 143, 7, 143,
		2, 144, 7, 144, 2, 145, 7, 145, 2, 146, 7, 146, 2, 147, 7, 147, 2, 148,
		7, 148, 2, 149, 7, 149, 2, 150, 7, 150, 2, 151, 7, 151, 1, 0, 1, 0, 1,
		0, 1, 0, 5, 0, 311, 8, 0, 10, 0, 12, 0, 314, 9, 0, 1, 0, 1, 0, 1, 1, 1,
		1, 1, 1, 1, 1, 5, 1, 322, 8, 1, 10, 1, 12, 1, 325, 9, 1, 1, 1, 1, 1, 1,
		2, 1, 2, 1, 2, 1, 2, 5, 2, 333, 8, 2, 10, 2, 12, 2, 336, 9, 2, 1, 2, 1,
		2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 5, 3, 347, 8, 3, 10, 3, 12,
		3, 350, 9, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 5, 4, 360,
		8, 4, 10, 4, 12, 4, 363, 9, 4, 1, 4, 1, 4, 1, 4, 5, 4, 368, 8, 4, 10, 4,
		12, 4, 371, 9, 4, 1, 5, 1, 5, 1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 1, 8, 1, 9,
		1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1,
		12, 1, 12, 1, 13, 1, 13, 1, 14, 1, 14, 1, 15, 1, 15, 1, 16, 1, 16, 1, 17,
		1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1,
		20, 1, 21, 1, 21, 1, 22, 1, 22, 1, 23, 1, 23, 1, 24, 1, 24, 1, 25, 1, 25,
		1, 26, 1, 26, 1, 27, 1, 27, 1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1,
		30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33,
		1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 36, 1, 36, 1, 36, 1, 37, 1, 37, 1,
		37, 1, 38, 1, 38, 1, 38, 1, 39, 1, 39, 1, 39, 1, 40, 1, 40, 1, 40, 1, 40,
		1, 41, 1, 41, 1, 41, 1, 41, 1, 42, 1, 42, 1, 43, 1, 43, 1, 44, 1, 44, 1,
		45, 1, 45, 1, 45, 1, 46, 1, 46, 1, 46, 1, 47, 1, 47, 1, 47, 1, 48, 1, 48,
		1, 48, 1, 49, 1, 49, 1, 49, 1, 50, 1, 50, 1, 50, 1, 51, 1, 51, 1, 51, 1,
		52, 1, 52, 1, 52, 1, 52, 1, 53, 1, 53, 1, 53, 1, 53, 1, 54, 1, 54, 1, 54,
		1, 54, 1, 54, 1, 55, 1, 55, 1, 55, 1, 56, 1, 56, 1, 56, 1, 57, 1, 57, 1,
		57, 1, 58, 1, 58, 1, 58, 1, 58, 1, 59, 1, 59, 1, 59, 1, 60, 1, 60, 1, 60,
		1, 60, 1, 60, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1,
		61, 3, 61, 540, 8, 61, 1, 62, 1, 62, 1, 62, 1, 62, 5, 62, 546, 8, 62, 10,
		62, 12, 62, 549, 9, 62, 1, 62, 3, 62, 552, 8, 62, 1, 62, 1, 62, 1, 62,
		5, 62, 557, 8, 62, 10, 62, 12, 62, 560, 9, 62, 1, 62, 3, 62, 563, 8, 62,
		1, 62, 1, 62, 3, 62, 567, 8, 62, 3, 62, 569, 8, 62, 1, 63, 1, 63, 1, 63,
		1, 63, 5, 63, 575, 8, 63, 10, 63, 12, 63, 578, 9, 63, 1, 64, 1, 64, 4,
		64, 582, 8, 64, 11, 64, 12, 64, 583, 1, 64, 1, 64, 1, 65, 1, 65, 1, 65,
		1, 65, 5, 65, 592, 8, 65, 10, 65, 12, 65, 595, 9, 65, 1, 66, 1, 66, 1,
		66, 1, 66, 5, 66, 601, 8, 66, 10, 66, 12, 66, 604, 9, 66, 1, 67, 1, 67,
		1, 67, 1, 67, 5, 67, 610, 8, 67, 10, 67, 12, 67, 613, 9, 67, 1, 67, 1,
		67, 1, 68, 1, 68, 1, 68, 1, 68, 5, 68, 621, 8, 68, 10, 68, 12, 68, 624,
		9, 68, 1, 68, 1, 68, 1, 69, 1, 69, 1, 69, 1, 69, 5, 69, 632, 8, 69, 10,
		69, 12, 69, 635, 9, 69, 1, 69, 1, 69, 1, 70, 1, 70, 1, 70, 1, 71, 1, 71,
		1, 71, 1, 71, 1, 71, 1, 71, 1, 72, 1, 72, 1, 72, 1, 73, 1, 73, 1, 73, 1,
		73, 1, 73, 1, 73, 1, 73, 1, 73, 1, 73, 1, 73, 1, 73, 1, 74, 1, 74, 1, 74,
		1, 74, 1, 74, 1, 74, 1, 74, 1, 75, 1, 75, 1, 75, 1, 75, 1, 75, 1, 76, 1,
		76, 1, 76, 1, 76, 1, 76, 1, 77, 1, 77, 1, 77, 1, 77, 1, 78, 1, 78, 1, 78,
		1, 78, 1, 79, 1, 79, 1, 79, 1, 79, 1, 79, 1, 79, 1, 80, 1, 80, 1, 80, 1,
		80, 1, 80, 1, 80, 1, 80, 1, 80, 1, 81, 1, 81, 1, 81, 1, 81, 1, 81, 1, 81,
		1, 81, 1, 82, 1, 82, 1, 82, 1, 82, 1, 82, 1, 83, 1, 83, 1, 83, 1, 83, 1,
		83, 1, 83, 1, 83, 1, 83, 1, 83, 1, 84, 1, 84, 1, 84, 1, 84, 1, 85, 1, 85,
		1, 85, 1, 85, 1, 85, 1, 85, 1, 85, 1, 86, 1, 86, 1, 86, 1, 86, 1, 86, 1,
		86, 1, 87, 1, 87, 1, 87, 1, 87, 1, 87, 1, 87, 1, 87, 1, 87, 1, 87, 1, 88,
		1, 88, 1, 88, 1, 88, 1, 88, 1, 88, 1, 88, 1, 88, 1, 88, 1, 89, 1, 89, 1,
		89, 1, 89, 1, 89, 1, 90, 1, 90, 1, 90, 1, 90, 1, 90, 1, 91, 1, 91, 1, 91,
		1, 91, 1, 91, 1, 91, 1, 91, 1, 91, 1, 92, 1, 92, 1, 92, 1, 93, 1, 93, 1,
		93, 1, 93, 1, 93, 1, 93, 1, 94, 1, 94, 1, 94, 1, 94, 1, 94, 1, 94, 1, 94,
		1, 95, 1, 95, 1, 95, 1, 96, 1, 96, 1, 96, 1, 96, 1, 97, 1, 97, 1, 97, 1,
		98, 1, 98, 1, 98, 1, 98, 1, 98, 1, 99, 1, 99, 1, 99, 1, 99, 1, 100, 1,
		100, 1, 100, 1, 100, 1, 101, 1, 101, 1, 101, 1, 101, 1, 101, 1, 101, 1,
		102, 1, 102, 1, 102, 1, 102, 1, 102, 1, 103, 1, 103, 1, 103, 1, 103, 1,
		103, 1, 103, 1, 103, 1, 103, 1, 104, 1, 104, 1, 104, 1, 104, 1, 104, 1,
		104, 1, 105, 1, 105, 1, 105, 1, 105, 1, 105, 1, 105, 1, 106, 1, 106, 1,
		106, 1, 106, 1, 106, 1, 106, 1, 106, 1, 107, 1, 107, 1, 107, 1, 107, 1,
		107, 1, 107, 1, 107, 1, 108, 1, 108, 1, 108, 1, 108, 1, 108, 1, 108, 1,
		109, 1, 109, 1, 109, 1, 109, 1, 109, 1, 109, 1, 110, 1, 110, 1, 110, 1,
		110, 1, 110, 1, 110, 1, 111, 1, 111, 1, 111, 1, 111, 1, 111, 1, 111, 1,
		111, 1, 111, 1, 111, 1, 111, 1, 111, 1, 111, 1, 111, 1, 112, 1, 112, 1,
		112, 1, 112, 1, 112, 1, 112, 1, 113, 1, 113, 1, 113, 1, 113, 1, 113, 1,
		113, 1, 114, 1, 114, 1, 114, 1, 114, 1, 114, 1, 114, 1, 114, 1, 114, 1,
		114, 1, 114, 1, 115, 1, 115, 1, 115, 1, 115, 1, 115, 1, 115, 1, 115, 1,
		115, 1, 115, 1, 116, 1, 116, 1, 116, 1, 116, 1, 116, 1, 116, 1, 116, 1,
		116, 1, 116, 1, 116, 1, 116, 1, 116, 1, 117, 1, 117, 1, 117, 1, 117, 1,
		117, 1, 117, 1, 117, 1, 117, 1, 117, 1, 117, 1, 118, 1, 118, 1, 118, 1,
		118, 1, 118, 1, 118, 1, 118, 1, 118, 1, 118, 1, 118, 1, 118, 1, 118, 1,
		119, 1, 119, 1, 119, 1, 119, 1, 119, 1, 119, 1, 119, 1, 119, 1, 119, 1,
		120, 1, 120, 5, 120, 966, 8, 120, 10, 120, 12, 120, 969, 9, 120, 1, 121,
		1, 121, 5, 121, 973, 8, 121, 10, 121, 12, 121, 976, 9, 121, 1, 121, 1,
		121, 1, 121, 5, 121, 981, 8, 121, 10, 121, 12, 121, 984, 9, 121, 1, 121,
		3, 121, 987, 8, 121, 1, 121, 1, 121, 1, 122, 1, 122, 1, 122, 1, 122, 1,
		122, 1, 123, 1, 123, 1, 123, 1, 123, 1, 124, 4, 124, 1001, 8, 124, 11,
		124, 12, 124, 1002, 1, 124, 1, 124, 1, 125, 1, 125, 1, 125, 1, 125, 1,
		126, 1, 126, 1, 126, 1, 126, 1, 126, 1, 126, 5, 126, 1017, 8, 126, 10,
		126, 12, 126, 1020, 9, 126, 1, 126, 1, 126, 1, 126, 1, 126, 1, 126, 1,
		126, 1, 127, 1, 127, 1, 127, 1, 127, 1, 127, 1, 127, 1, 127, 1, 127, 1,
		127, 1, 127, 1, 127, 5, 127, 1039, 8, 127, 10, 127, 12, 127, 1042, 9, 127,
		1, 127, 1, 127, 1, 127, 1, 127, 1, 127, 1, 127, 1, 128, 1, 128, 1, 128,
		1, 128, 1, 129, 1, 129, 1, 129, 1, 129, 1, 129, 1, 129, 1, 130, 1, 130,
		1, 130, 1, 130, 1, 130, 1, 131, 1, 131, 1, 132, 1, 132, 1, 132, 1, 132,
		3, 132, 1071, 8, 132, 1, 133, 1, 133, 1, 133, 1, 133, 3, 133, 1077, 8,
		133, 1, 134, 1, 134, 1, 134, 1, 134, 1, 134, 3, 134, 1084, 8, 134, 1, 135,
		1, 135, 3, 135, 1088, 8, 135, 1, 136, 1, 136, 1, 136, 1, 136, 1, 137, 1,
		137, 1, 137, 1, 137, 1, 137, 1, 137, 1, 137, 1, 137, 1, 137, 1, 137, 4,
		137, 1104, 8, 137, 11, 137, 12, 137, 1105, 1, 137, 1, 137, 3, 137, 1110,
		8, 137, 1, 138, 1, 138, 1, 138, 4, 138, 1115, 8, 138, 11, 138, 12, 138,
		1116, 1, 138, 1, 138, 1, 139, 1, 139, 1, 140, 1, 140, 1, 141, 1, 141, 3,
		141, 1127, 8, 141, 1, 142, 1, 142, 1, 142, 1, 143, 1, 143, 1, 144, 1, 144,
		1, 144, 5, 144, 1137, 8, 144, 10, 144, 12, 144, 1140, 9, 144, 3, 144, 1142,
		8, 144, 1, 145, 1, 145, 3, 145, 1146, 8, 145, 1, 145, 4, 145, 1149, 8,
		145, 11, 145, 12, 145, 1150, 1, 146, 1, 146, 3, 146, 1155, 8, 146, 1, 147,
		1, 147, 1, 147, 3, 147, 1160, 8, 147, 1, 148, 1, 148, 1, 148, 1, 148, 5,
		148, 1166, 8, 148, 10, 148, 12, 148, 1169, 9, 148, 1, 148, 3, 148, 1172,
		8, 148, 1, 149, 1, 149, 1, 149, 1, 149, 5, 149, 1178, 8, 149, 10, 149,
		12, 149, 1181, 9, 149, 1, 149, 3, 149, 1184, 8, 149, 1, 150, 1, 150, 3,
		150, 1188, 8, 150, 1, 151, 1, 151, 1, 151, 3, 348, 1018, 1040, 0, 152,
		2, 1, 4, 2, 6, 3, 8, 4, 10, 5, 12, 6, 14, 7, 16, 8, 18, 9, 20, 10, 22,
		11, 24, 12, 26, 13, 28, 14, 30, 15, 32, 16, 34, 17, 36, 18, 38, 19, 40,
		20, 42, 21, 44, 22, 46, 23, 48, 24, 50, 25, 52, 26, 54, 27, 56, 28, 58,
		29, 60, 30, 62, 31, 64, 32, 66, 33, 68, 34, 70, 35, 72, 36, 74, 37, 76,
		38, 78, 39, 80, 40, 82, 41, 84, 42, 86, 43, 88, 44, 90, 45, 92, 46, 94,
		47, 96, 48, 98, 49, 100, 50, 102, 51, 104, 52, 106, 53, 108, 54, 110, 55,
		112, 56, 114, 57, 116, 58, 118, 59, 120, 60, 122, 61, 124, 62, 126, 63,
		128, 64, 130, 65, 132, 66, 134, 67, 136, 68, 138, 69, 140, 70, 142, 71,
		144, 72, 146, 73, 148, 74, 150, 75, 152, 76, 154, 77, 156, 78, 158, 79,
		160, 80, 162, 81, 164, 82, 166, 83, 168, 84, 170, 85, 172, 86, 174, 87,
		176, 88, 178, 89, 180, 90, 182, 91, 184, 92, 186, 93, 188, 94, 190, 95,
		192, 96, 194, 97, 196, 98, 198, 99, 200, 100, 202, 101, 204, 102, 206,
		103, 208, 104, 210, 105, 212, 106, 214, 107, 216, 108, 218, 109, 220, 110,
		222, 111, 224, 112, 226, 113, 228, 114, 230, 115, 232, 116, 234, 117, 236,
		118, 238, 119, 240, 120, 242, 121, 244, 122, 246, 123, 248, 124, 250, 125,
		252, 126, 254, 127, 256, 128, 258, 129, 260, 0, 262, 130, 264, 131, 266,
		0, 268, 0, 270, 0, 272, 0, 274, 0, 276, 0, 278, 0, 280, 0, 282, 0, 284,
		0, 286, 0, 288, 0, 290, 0, 292, 0, 294, 0, 296, 0, 298, 0, 300, 0, 302,
		0, 304, 0, 2, 0, 1, 28, 3, 0, 10, 10, 13, 13, 8232, 8233, 1, 0, 48, 57,
		2, 0, 48, 57, 95, 95, 2, 0, 88, 88, 120, 120, 3, 0, 48, 57, 65, 70, 97,
		102, 1, 0, 48, 55, 2, 0, 79, 79, 111, 111, 2, 0, 48, 55, 95, 95, 2, 0,
		66, 66, 98, 98, 1, 0, 48, 49, 2, 0, 48, 49, 95, 95, 4, 0, 9, 9, 11, 12,
		32, 32, 160, 160, 2, 0, 10, 10, 8232, 8233, 1, 0, 96, 96, 4, 0, 10, 10,
		13, 13, 34, 34, 92, 92, 4, 0, 10, 10, 13, 13, 39, 39, 92, 92, 9, 0, 34,
		34, 39, 39, 92, 92, 98, 98, 102, 102, 110, 110, 114, 114, 116, 116, 118,
		118, 12, 0, 10, 10, 13, 13, 34, 34, 39, 39, 48, 57, 92, 92, 98, 98, 102,
		102, 110, 110, 114, 114, 116, 118, 120, 120, 3, 0, 48, 57, 117, 117, 120,
		120, 4, 0, 48, 57, 65, 70, 95, 95, 97, 102, 1, 0, 49, 57, 2, 0, 69, 69,
		101, 101, 2, 0, 43, 43, 45, 45, 397, 0, 48, 57, 95, 95, 768, 879, 1155,
		1159, 1425, 1469, 1471, 1471, 1473, 1474, 1476, 1477, 1479, 1479, 1552,
		1562, 1611, 1641, 1648, 1648, 1750, 1756, 1759, 1764, 1767, 1768, 1770,
		1773, 1776, 1785, 1809, 1809, 1840, 1866, 1958, 1968, 1984, 1993, 2027,
		2035, 2045, 2045, 2070, 2073, 2075, 2083, 2085, 2087, 2089, 2093, 2137,
		2139, 2200, 2207, 2250, 2273, 2275, 2306, 2362, 2362, 2364, 2364, 2369,
		2376, 2381, 2381, 2385, 2391, 2402, 2403, 2406, 2415, 2433, 2433, 2492,
		2492, 2497, 2500, 2509, 2509, 2530, 2531, 2534, 2543, 2558, 2558, 2561,
		2562, 2620, 2620, 2625, 2626, 2631, 2632, 2635, 2637, 2641, 2641, 2662,
		2673, 2677, 2677, 2689, 2690, 2748, 2748, 2753, 2757, 2759, 2760, 2765,
		2765, 2786, 2787, 2790, 2799, 2810, 2815, 2817, 2817, 2876, 2876, 2879,
		2879, 2881, 2884, 2893, 2893, 2901, 2902, 2914, 2915, 2918, 2927, 2946,
		2946, 3008, 3008, 3021, 3021, 3046, 3055, 3072, 3072, 3076, 3076, 3132,
		3132, 3134, 3136, 3142, 3144, 3146, 3149, 3157, 3158, 3170, 3171, 3174,
		3183, 3201, 3201, 3260, 3260, 3263, 3263, 3270, 3270, 3276, 3277, 3298,
		3299, 3302, 3311, 3328, 3329, 3387, 3388, 3393, 3396, 3405, 3405, 3426,
		3427, 3430, 3439, 3457, 3457, 3530, 3530, 3538, 3540, 3542, 3542, 3558,
		3567, 3633, 3633, 3636, 3642, 3655, 3662, 3664, 3673, 3761, 3761, 3764,
		3772, 3784, 3789, 3792, 3801, 3864, 3865, 3872, 3881, 3893, 3893, 3895,
		3895, 3897, 3897, 3953, 3966, 3968, 3972, 3974, 3975, 3981, 3991, 3993,
		4028, 4038, 4038, 4141, 4144, 4146, 4151, 4153, 4154, 4157, 4158, 4160,
		4169, 4184, 4185, 4190, 4192, 4209, 4212, 4226, 4226, 4229, 4230, 4237,
		4237, 4240, 4249, 4253, 4253, 4957, 4959, 5906, 5908, 5938, 5939, 5970,
		5971, 6002, 6003, 6068, 6069, 6071, 6077, 6086, 6086, 6089, 6099, 6109,
		6109, 6112, 6121, 6155, 6157, 6159, 6169, 6277, 6278, 6313, 6313, 6432,
		6434, 6439, 6440, 6450, 6450, 6457, 6459, 6470, 6479, 6608, 6617, 6679,
		6680, 6683, 6683, 6742, 6742, 6744, 6750, 6752, 6752, 6754, 6754, 6757,
		6764, 6771, 6780, 6783, 6793, 6800, 6809, 6832, 6845, 6847, 6862, 6912,
		6915, 6964, 6964, 6966, 6970, 6972, 6972, 6978, 6978, 6992, 7001, 7019,
		7027, 7040, 7041, 7074, 7077, 7080, 7081, 7083, 7085, 7088, 7097, 7142,
		7142, 7144, 7145, 7149, 7149, 7151, 7153, 7212, 7219, 7222, 7223, 7232,
		7241, 7248, 7257, 7376, 7378, 7380, 7392, 7394, 7400, 7405, 7405, 7412,
		7412, 7416, 7417, 7616, 7679, 8204, 8205, 8255, 8256, 8276, 8276, 8400,
		8412, 8417, 8417, 8421, 8432, 11503, 11505, 11647, 11647, 11744, 11775,
		12330, 12333, 12441, 12442, 42528, 42537, 42607, 42607, 42612, 42621, 42654,
		42655, 42736, 42737, 43010, 43010, 43014, 43014, 43019, 43019, 43045, 43046,
		43052, 43052, 43204, 43205, 43216, 43225, 43232, 43249, 43263, 43273, 43302,
		43309, 43335, 43345, 43392, 43394, 43443, 43443, 43446, 43449, 43452, 43453,
		43472, 43481, 43493, 43493, 43504, 43513, 43561, 43566, 43569, 43570, 43573,
		43574, 43587, 43587, 43596, 43596, 43600, 43609, 43644, 43644, 43696, 43696,
		43698, 43700, 43703, 43704, 43710, 43711, 43713, 43713, 43756, 43757, 43766,
		43766, 44005, 44005, 44008, 44008, 44013, 44013, 44016, 44025, 64286, 64286,
		65024, 65039, 65056, 65071, 65075, 65076, 65101, 65103, 65296, 65305, 65343,
		65343, 66045, 66045, 66272, 66272, 66422, 66426, 66720, 66729, 68097, 68099,
		68101, 68102, 68108, 68111, 68152, 68154, 68159, 68159, 68325, 68326, 68900,
		68903, 68912, 68921, 69291, 69292, 69446, 69456, 69506, 69509, 69633, 69633,
		69688, 69702, 69734, 69744, 69747, 69748, 69759, 69761, 69811, 69814, 69817,
		69818, 69826, 69826, 69872, 69881, 69888, 69890, 69927, 69931, 69933, 69940,
		69942, 69951, 70003, 70003, 70016, 70017, 70070, 70078, 70089, 70092, 70095,
		70105, 70191, 70193, 70196, 70196, 70198, 70199, 70206, 70206, 70367, 70367,
		70371, 70378, 70384, 70393, 70400, 70401, 70459, 70460, 70464, 70464, 70502,
		70508, 70512, 70516, 70712, 70719, 70722, 70724, 70726, 70726, 70736, 70745,
		70750, 70750, 70835, 70840, 70842, 70842, 70847, 70848, 70850, 70851, 70864,
		70873, 71090, 71093, 71100, 71101, 71103, 71104, 71132, 71133, 71219, 71226,
		71229, 71229, 71231, 71232, 71248, 71257, 71339, 71339, 71341, 71341, 71344,
		71349, 71351, 71351, 71360, 71369, 71453, 71455, 71458, 71461, 71463, 71467,
		71472, 71481, 71727, 71735, 71737, 71738, 71904, 71913, 71995, 71996, 71998,
		71998, 72003, 72003, 72016, 72025, 72148, 72151, 72154, 72155, 72160, 72160,
		72193, 72202, 72243, 72248, 72251, 72254, 72263, 72263, 72273, 72278, 72281,
		72283, 72330, 72342, 72344, 72345, 72752, 72758, 72760, 72765, 72767, 72767,
		72784, 72793, 72850, 72871, 72874, 72880, 72882, 72883, 72885, 72886, 73009,
		73014, 73018, 73018, 73020, 73021, 73023, 73029, 73031, 73031, 73040, 73049,
		73104, 73105, 73109, 73109, 73111, 73111, 73120, 73129, 73459, 73460, 92768,
		92777, 92864, 92873, 92912, 92916, 92976, 92982, 93008, 93017, 94031, 94031,
		94095, 94098, 94180, 94180, 113821, 113822, 118528, 118573, 118576, 118598,
		119143, 119145, 119163, 119170, 119173, 119179, 119210, 119213, 119362,
		119364, 120782, 120831, 121344, 121398, 121403, 121452, 121461, 121461,
		121476, 121476, 121499, 121503, 121505, 121519, 122880, 122886, 122888,
		122904, 122907, 122913, 122915, 122916, 122918, 122922, 123184, 123190,
		123200, 123209, 123566, 123566, 123628, 123641, 125136, 125142, 125252,
		125258, 125264, 125273, 130032, 130041, 917760, 917999, 650, 0, 36, 36,
		65, 90, 95, 95, 97, 122, 170, 170, 181, 181, 186, 186, 192, 214, 216, 246,
		248, 705, 710, 721, 736, 740, 748, 748, 750, 750, 880, 884, 886, 887, 890,
		893, 895, 895, 902, 902, 904, 906, 908, 908, 910, 929, 931, 1013, 1015,
		1153, 1162, 1327, 1329, 1366, 1369, 1369, 1376, 1416, 1488, 1514, 1519,
		1522, 1568, 1610, 1646, 1647, 1649, 1747, 1749, 1749, 1765, 1766, 1774,
		1775, 1786, 1788, 1791, 1791, 1808, 1808, 1810, 1839, 1869, 1957, 1969,
		1969, 1994, 2026, 2036, 2037, 2042, 2042, 2048, 2069, 2074, 2074, 2084,
		2084, 2088, 2088, 2112, 2136, 2144, 2154, 2160, 2183, 2185, 2190, 2208,
		2249, 2308, 2361, 2365, 2365, 2384, 2384, 2392, 2401, 2417, 2432, 2437,
		2444, 2447, 2448, 2451, 2472, 2474, 2480, 2482, 2482, 2486, 2489, 2493,
		2493, 2510, 2510, 2524, 2525, 2527, 2529, 2544, 2545, 2556, 2556, 2565,
		2570, 2575, 2576, 2579, 2600, 2602, 2608, 2610, 2611, 2613, 2614, 2616,
		2617, 2649, 2652, 2654, 2654, 2674, 2676, 2693, 2701, 2703, 2705, 2707,
		2728, 2730, 2736, 2738, 2739, 2741, 2745, 2749, 2749, 2768, 2768, 2784,
		2785, 2809, 2809, 2821, 2828, 2831, 2832, 2835, 2856, 2858, 2864, 2866,
		2867, 2869, 2873, 2877, 2877, 2908, 2909, 2911, 2913, 2929, 2929, 2947,
		2947, 2949, 2954, 2958, 2960, 2962, 2965, 2969, 2970, 2972, 2972, 2974,
		2975, 2979, 2980, 2984, 2986, 2990, 3001, 3024, 3024, 3077, 3084, 3086,
		3088, 3090, 3112, 3114, 3129, 3133, 3133, 3160, 3162, 3165, 3165, 3168,
		3169, 3200, 3200, 3205, 3212, 3214, 3216, 3218, 3240, 3242, 3251, 3253,
		3257, 3261, 3261, 3293, 3294, 3296, 3297, 3313, 3314, 3332, 3340, 3342,
		3344, 3346, 3386, 3389, 3389, 3406, 3406, 3412, 3414, 3423, 3425, 3450,
		3455, 3461, 3478, 3482, 3505, 3507, 3515, 3517, 3517, 3520, 3526, 3585,
		3632, 3634, 3635, 3648, 3654, 3713, 3714, 3716, 3716, 3718, 3722, 3724,
		3747, 3749, 3749, 3751, 3760, 3762, 3763, 3773, 3773, 3776, 3780, 3782,
		3782, 3804, 3807, 3840, 3840, 3904, 3911, 3913, 3948, 3976, 3980, 4096,
		4138, 4159, 4159, 4176, 4181, 4186, 4189, 4193, 4193, 4197, 4198, 4206,
		4208, 4213, 4225, 4238, 4238, 4256, 4293, 4295, 4295, 4301, 4301, 4304,
		4346, 4348, 4680, 4682, 4685, 4688, 4694, 4696, 4696, 4698, 4701, 4704,
		4744, 4746, 4749, 4752, 4784, 4786, 4789, 4792, 4798, 4800, 4800, 4802,
		4805, 4808, 4822, 4824, 4880, 4882, 4885, 4888, 4954, 4992, 5007, 5024,
		5109, 5112, 5117, 5121, 5740, 5743, 5759, 5761, 5786, 5792, 5866, 5873,
		5880, 5888, 5905, 5919, 5937, 5952, 5969, 5984, 5996, 5998, 6000, 6016,
		6067, 6103, 6103, 6108, 6108, 6176, 6264, 6272, 6276, 6279, 6312, 6314,
		6314, 6320, 6389, 6400, 6430, 6480, 6509, 6512, 6516, 6528, 6571, 6576,
		6601, 6656, 6678, 6688, 6740, 6823, 6823, 6917, 6963, 6981, 6988, 7043,
		7072, 7086, 7087, 7098, 7141, 7168, 7203, 7245, 7247, 7258, 7293, 7296,
		7304, 7312, 7354, 7357, 7359, 7401, 7404, 7406, 7411, 7413, 7414, 7418,
		7418, 7424, 7615, 7680, 7957, 7960, 7965, 7968, 8005, 8008, 8013, 8016,
		8023, 8025, 8025, 8027, 8027, 8029, 8029, 8031, 8061, 8064, 8116, 8118,
		8124, 8126, 8126, 8130, 8132, 8134, 8140, 8144, 8147, 8150, 8155, 8160,
		8172, 8178, 8180, 8182, 8188, 8305, 8305, 8319, 8319, 8336, 8348, 8450,
		8450, 8455, 8455, 8458, 8467, 8469, 8469, 8473, 8477, 8484, 8484, 8486,
		8486, 8488, 8488, 8490, 8493, 8495, 8505, 8508, 8511, 8517, 8521, 8526,
		8526, 8579, 8580, 11264, 11492, 11499, 11502, 11506, 11507, 11520, 11557,
		11559, 11559, 11565, 11565, 11568, 11623, 11631, 11631, 11648, 11670, 11680,
		11686, 11688, 11694, 11696, 11702, 11704, 11710, 11712, 11718, 11720, 11726,
		11728, 11734, 11736, 11742, 11823, 11823, 12293, 12294, 12337, 12341, 12347,
		12348, 12353, 12438, 12445, 12447, 12449, 12538, 12540, 12543, 12549, 12591,
		12593, 12686, 12704, 12735, 12784, 12799, 13312, 19903, 19968, 42124, 42192,
		42237, 42240, 42508, 42512, 42527, 42538, 42539, 42560, 42606, 42623, 42653,
		42656, 42725, 42775, 42783, 42786, 42888, 42891, 42954, 42960, 42961, 42963,
		42963, 42965, 42969, 42994, 43009, 43011, 43013, 43015, 43018, 43020, 43042,
		43072, 43123, 43138, 43187, 43250, 43255, 43259, 43259, 43261, 43262, 43274,
		43301, 43312, 43334, 43360, 43388, 43396, 43442, 43471, 43471, 43488, 43492,
		43494, 43503, 43514, 43518, 43520, 43560, 43584, 43586, 43588, 43595, 43616,
		43638, 43642, 43642, 43646, 43695, 43697, 43697, 43701, 43702, 43705, 43709,
		43712, 43712, 43714, 43714, 43739, 43741, 43744, 43754, 43762, 43764, 43777,
		43782, 43785, 43790, 43793, 43798, 43808, 43814, 43816, 43822, 43824, 43866,
		43868, 43881, 43888, 44002, 44032, 55203, 55216, 55238, 55243, 55291, 63744,
		64109, 64112, 64217, 64256, 64262, 64275, 64279, 64285, 64285, 64287, 64296,
		64298, 64310, 64312, 64316, 64318, 64318, 64320, 64321, 64323, 64324, 64326,
		64433, 64467, 64829, 64848, 64911, 64914, 64967, 65008, 65019, 65136, 65140,
		65142, 65276, 65313, 65338, 65345, 65370, 65382, 65470, 65474, 65479, 65482,
		65487, 65490, 65495, 65498, 65500, 65536, 65547, 65549, 65574, 65576, 65594,
		65596, 65597, 65599, 65613, 65616, 65629, 65664, 65786, 66176, 66204, 66208,
		66256, 66304, 66335, 66349, 66368, 66370, 66377, 66384, 66421, 66432, 66461,
		66464, 66499, 66504, 66511, 66560, 66717, 66736, 66771, 66776, 66811, 66816,
		66855, 66864, 66915, 66928, 66938, 66940, 66954, 66956, 66962, 66964, 66965,
		66967, 66977, 66979, 66993, 66995, 67001, 67003, 67004, 67072, 67382, 67392,
		67413, 67424, 67431, 67456, 67461, 67463, 67504, 67506, 67514, 67584, 67589,
		67592, 67592, 67594, 67637, 67639, 67640, 67644, 67644, 67647, 67669, 67680,
		67702, 67712, 67742, 67808, 67826, 67828, 67829, 67840, 67861, 67872, 67897,
		67968, 68023, 68030, 68031, 68096, 68096, 68112, 68115, 68117, 68119, 68121,
		68149, 68192, 68220, 68224, 68252, 68288, 68295, 68297, 68324, 68352, 68405,
		68416, 68437, 68448, 68466, 68480, 68497, 68608, 68680, 68736, 68786, 68800,
		68850, 68864, 68899, 69248, 69289, 69296, 69297, 69376, 69404, 69415, 69415,
		69424, 69445, 69488, 69505, 69552, 69572, 69600, 69622, 69635, 69687, 69745,
		69746, 69749, 69749, 69763, 69807, 69840, 69864, 69891, 69926, 69956, 69956,
		69959, 69959, 69968, 70002, 70006, 70006, 70019, 70066, 70081, 70084, 70106,
		70106, 70108, 70108, 70144, 70161, 70163, 70187, 70272, 70278, 70280, 70280,
		70282, 70285, 70287, 70301, 70303, 70312, 70320, 70366, 70405, 70412, 70415,
		70416, 70419, 70440, 70442, 70448, 70450, 70451, 70453, 70457, 70461, 70461,
		70480, 70480, 70493, 70497, 70656, 70708, 70727, 70730, 70751, 70753, 70784,
		70831, 70852, 70853, 70855, 70855, 71040, 71086, 71128, 71131, 71168, 71215,
		71236, 71236, 71296, 71338, 71352, 71352, 71424, 71450, 71488, 71494, 71680,
		71723, 71840, 71903, 71935, 71942, 71945, 71945, 71948, 71955, 71957, 71958,
		71960, 71983, 71999, 71999, 72001, 72001, 72096, 72103, 72106, 72144, 72161,
		72161, 72163, 72163, 72192, 72192, 72203, 72242, 72250, 72250, 72272, 72272,
		72284, 72329, 72349, 72349, 72368, 72440, 72704, 72712, 72714, 72750, 72768,
		72768, 72818, 72847, 72960, 72966, 72968, 72969, 72971, 73008, 73030, 73030,
		73056, 73061, 73063, 73064, 73066, 73097, 73112, 73112, 73440, 73458, 73648,
		73648, 73728, 74649, 74880, 75075, 77712, 77808, 77824, 78894, 82944, 83526,
		92160, 92728, 92736, 92766, 92784, 92862, 92880, 92909, 92928, 92975, 92992,
		92995, 93027, 93047, 93053, 93071, 93760, 93823, 93952, 94026, 94032, 94032,
		94099, 94111, 94176, 94177, 94179, 94179, 94208, 100343, 100352, 101589,
		101632, 101640, 110576, 110579, 110581, 110587, 110589, 110590, 110592,
		110882, 110928, 110930, 110948, 110951, 110960, 111355, 113664, 113770,
		113776, 113788, 113792, 113800, 113808, 113817, 119808, 119892, 119894,
		119964, 119966, 119967, 119970, 119970, 119973, 119974, 119977, 119980,
		119982, 119993, 119995, 119995, 119997, 120003, 120005, 120069, 120071,
		120074, 120077, 120084, 120086, 120092, 120094, 120121, 120123, 120126,
		120128, 120132, 120134, 120134, 120138, 120144, 120146, 120485, 120488,
		120512, 120514, 120538, 120540, 120570, 120572, 120596, 120598, 120628,
		120630, 120654, 120656, 120686, 120688, 120712, 120714, 120744, 120746,
		120770, 120772, 120779, 122624, 122654, 123136, 123180, 123191, 123197,
		123214, 123214, 123536, 123565, 123584, 123627, 124896, 124902, 124904,
		124907, 124909, 124910, 124912, 124926, 124928, 125124, 125184, 125251,
		125259, 125259, 126464, 126467, 126469, 126495, 126497, 126498, 126500,
		126500, 126503, 126503, 126505, 126514, 126516, 126519, 126521, 126521,
		126523, 126523, 126530, 126530, 126535, 126535, 126537, 126537, 126539,
		126539, 126541, 126543, 126545, 126546, 126548, 126548, 126551, 126551,
		126553, 126553, 126555, 126555, 126557, 126557, 126559, 126559, 126561,
		126562, 126564, 126564, 126567, 126570, 126572, 126578, 126580, 126583,
		126585, 126588, 126590, 126590, 126592, 126601, 126603, 126619, 126625,
		126627, 126629, 126633, 126635, 126651, 131072, 173791, 173824, 177976,
		177984, 178205, 178208, 183969, 183984, 191456, 194560, 195101, 196608,
		201546, 6, 0, 10, 10, 13, 13, 42, 42, 47, 47, 91, 92, 8232, 8233, 5, 0,
		10, 10, 13, 13, 47, 47, 91, 92, 8232, 8233, 4, 0, 10, 10, 13, 13, 92, 93,
		8232, 8233, 1224, 0, 2, 1, 0, 0, 0, 0, 4, 1, 0, 0, 0, 0, 6, 1, 0, 0, 0,
		0, 8, 1, 0, 0, 0, 0, 10, 1, 0, 0, 0, 0, 12, 1, 0, 0, 0, 0, 14, 1, 0, 0,
		0, 0, 16, 1, 0, 0, 0, 0, 18, 1, 0, 0, 0, 0, 20, 1, 0, 0, 0, 0, 22, 1, 0,
		0, 0, 0, 24, 1, 0, 0, 0, 0, 26, 1, 0, 0, 0, 0, 28, 1, 0, 0, 0, 0, 30, 1,
		0, 0, 0, 0, 32, 1, 0, 0, 0, 0, 34, 1, 0, 0, 0, 0, 36, 1, 0, 0, 0, 0, 38,
		1, 0, 0, 0, 0, 40, 1, 0, 0, 0, 0, 42, 1, 0, 0, 0, 0, 44, 1, 0, 0, 0, 0,
		46, 1, 0, 0, 0, 0, 48, 1, 0, 0, 0, 0, 50, 1, 0, 0, 0, 0, 52, 1, 0, 0, 0,
		0, 54, 1, 0, 0, 0, 0, 56, 1, 0, 0, 0, 0, 58, 1, 0, 0, 0, 0, 60, 1, 0, 0,
		0, 0, 62, 1, 0, 0, 0, 0, 64, 1, 0, 0, 0, 0, 66, 1, 0, 0, 0, 0, 68, 1, 0,
		0, 0, 0, 70, 1, 0, 0, 0, 0, 72, 1, 0, 0, 0, 0, 74, 1, 0, 0, 0, 0, 76, 1,
		0, 0, 0, 0, 78, 1, 0, 0, 0, 0, 80, 1, 0, 0, 0, 0, 82, 1, 0, 0, 0, 0, 84,
		1, 0, 0, 0, 0, 86, 1, 0, 0, 0, 0, 88, 1, 0, 0, 0, 0, 90, 1, 0, 0, 0, 0,
		92, 1, 0, 0, 0, 0, 94, 1, 0, 0, 0, 0, 96, 1, 0, 0, 0, 0, 98, 1, 0, 0, 0,
		0, 100, 1, 0, 0, 0, 0, 102, 1, 0, 0, 0, 0, 104, 1, 0, 0, 0, 0, 106, 1,
		0, 0, 0, 0, 108, 1, 0, 0, 0, 0, 110, 1, 0, 0, 0, 0, 112, 1, 0, 0, 0, 0,
		114, 1, 0, 0, 0, 0, 116, 1, 0, 0, 0, 0, 118, 1, 0, 0, 0, 0, 120, 1, 0,
		0, 0, 0, 122, 1, 0, 0, 0, 0, 124, 1, 0, 0, 0, 0, 126, 1, 0, 0, 0, 0, 128,
		1, 0, 0, 0, 0, 130, 1, 0, 0, 0, 0, 132, 1, 0, 0, 0, 0, 134, 1, 0, 0, 0,
		0, 136, 1, 0, 0, 0, 0, 138, 1, 0, 0, 0, 0, 140, 1, 0, 0, 0, 0, 142, 1,
		0, 0, 0, 0, 144, 1, 0, 0, 0, 0, 146, 1, 0, 0, 0, 0, 148, 1, 0, 0, 0, 0,
		150, 1, 0, 0, 0, 0, 152, 1, 0, 0, 0, 0, 154, 1, 0, 0, 0, 0, 156, 1, 0,
		0, 0, 0, 158, 1, 0, 0, 0, 0, 160, 1, 0, 0, 0, 0, 162, 1, 0, 0, 0, 0, 164,
		1, 0, 0, 0, 0, 166, 1, 0, 0, 0, 0, 168, 1, 0, 0, 0, 0, 170, 1, 0, 0, 0,
		0, 172, 1, 0, 0, 0, 0, 174, 1, 0, 0, 0, 0, 176, 1, 0, 0, 0, 0, 178, 1,
		0, 0, 0, 0, 180, 1, 0, 0, 0, 0, 182, 1, 0, 0, 0, 0, 184, 1, 0, 0, 0, 0,
		186, 1, 0, 0, 0, 0, 188, 1, 0, 0, 0, 0, 190, 1, 0, 0, 0, 0, 192, 1, 0,
		0, 0, 0, 194, 1, 0, 0, 0, 0, 196, 1, 0, 0, 0, 0, 198, 1, 0, 0, 0, 0, 200,
		1, 0, 0, 0, 0, 202, 1, 0, 0, 0, 0, 204, 1, 0, 0, 0, 0, 206, 1, 0, 0, 0,
		0, 208, 1, 0, 0, 0, 0, 210, 1, 0, 0, 0, 0, 212, 1, 0, 0, 0, 0, 214, 1,
		0, 0, 0, 0, 216, 1, 0, 0, 0, 0, 218, 1, 0, 0, 0, 0, 220, 1, 0, 0, 0, 0,
		222, 1, 0, 0, 0, 0, 224, 1, 0, 0, 0, 0, 226, 1, 0, 0, 0, 0, 228, 1, 0,
		0, 0, 0, 230, 1, 0, 0, 0, 0, 232, 1, 0, 0, 0, 0, 234, 1, 0, 0, 0, 0, 236,
		1, 0, 0, 0, 0, 238, 1, 0, 0, 0, 0, 240, 1, 0, 0, 0, 0, 242, 1, 0, 0, 0,
		0, 244, 1, 0, 0, 0, 0, 246, 1, 0, 0, 0, 0, 248, 1, 0, 0, 0, 0, 250, 1,
		0, 0, 0, 0, 252, 1, 0, 0, 0, 0, 254, 1, 0, 0, 0, 0, 256, 1, 0, 0, 0, 0,
		258, 1, 0, 0, 0, 1, 260, 1, 0, 0, 0, 1, 262, 1, 0, 0, 0, 1, 264, 1, 0,
		0, 0, 2, 306, 1, 0, 0, 0, 4, 317, 1, 0, 0, 0, 6, 328, 1, 0, 0, 0, 8, 342,
		1, 0, 0, 0, 10, 356, 1, 0, 0, 0, 12, 372, 1, 0, 0, 0, 14, 374, 1, 0, 0,
		0, 16, 376, 1, 0, 0, 0, 18, 378, 1, 0, 0, 0, 20, 380, 1, 0, 0, 0, 22, 383,
		1, 0, 0, 0, 24, 388, 1, 0, 0, 0, 26, 391, 1, 0, 0, 0, 28, 393, 1, 0, 0,
		0, 30, 395, 1, 0, 0, 0, 32, 397, 1, 0, 0, 0, 34, 399, 1, 0, 0, 0, 36, 401,
		1, 0, 0, 0, 38, 405, 1, 0, 0, 0, 40, 407, 1, 0, 0, 0, 42, 410, 1, 0, 0,
		0, 44, 413, 1, 0, 0, 0, 46, 415, 1, 0, 0, 0, 48, 417, 1, 0, 0, 0, 50, 419,
		1, 0, 0, 0, 52, 421, 1, 0, 0, 0, 54, 423, 1, 0, 0, 0, 56, 425, 1, 0, 0,
		0, 58, 427, 1, 0, 0, 0, 60, 430, 1, 0, 0, 0, 62, 433, 1, 0, 0, 0, 64, 435,
		1, 0, 0, 0, 66, 438, 1, 0, 0, 0, 68, 441, 1, 0, 0, 0, 70, 445, 1, 0, 0,
		0, 72, 447, 1, 0, 0, 0, 74, 449, 1, 0, 0, 0, 76, 452, 1, 0, 0, 0, 78, 455,
		1, 0, 0, 0, 80, 458, 1, 0, 0, 0, 82, 461, 1, 0, 0, 0, 84, 465, 1, 0, 0,
		0, 86, 469, 1, 0, 0, 0, 88, 471, 1, 0, 0, 0, 90, 473, 1, 0, 0, 0, 92, 475,
		1, 0, 0, 0, 94, 478, 1, 0, 0, 0, 96, 481, 1, 0, 0, 0, 98, 484, 1, 0, 0,
		0, 100, 487, 1, 0, 0, 0, 102, 490, 1, 0, 0, 0, 104, 493, 1, 0, 0, 0, 106,
		496, 1, 0, 0, 0, 108, 500, 1, 0, 0, 0, 110, 504, 1, 0, 0, 0, 112, 509,
		1, 0, 0, 0, 114, 512, 1, 0, 0, 0, 116, 515, 1, 0, 0, 0, 118, 518, 1, 0,
		0, 0, 120, 522, 1, 0, 0, 0, 122, 525, 1, 0, 0, 0, 124, 539, 1, 0, 0, 0,
		126, 568, 1, 0, 0, 0, 128, 570, 1, 0, 0, 0, 130, 579, 1, 0, 0, 0, 132,
		587, 1, 0, 0, 0, 134, 596, 1, 0, 0, 0, 136, 605, 1, 0, 0, 0, 138, 616,
		1, 0, 0, 0, 140, 627, 1, 0, 0, 0, 142, 638, 1, 0, 0, 0, 144, 641, 1, 0,
		0, 0, 146, 647, 1, 0, 0, 0, 148, 650, 1, 0, 0, 0, 150, 661, 1, 0, 0, 0,
		152, 668, 1, 0, 0, 0, 154, 673, 1, 0, 0, 0, 156, 678, 1, 0, 0, 0, 158,
		682, 1, 0, 0, 0, 160, 686, 1, 0, 0, 0, 162, 692, 1, 0, 0, 0, 164, 700,
		1, 0, 0, 0, 166, 707, 1, 0, 0, 0, 168, 712, 1, 0, 0, 0, 170, 721, 1, 0,
		0, 0, 172, 725, 1, 0, 0, 0, 174, 732, 1, 0, 0, 0, 176, 738, 1, 0, 0, 0,
		178, 747, 1, 0, 0, 0, 180, 756, 1, 0, 0, 0, 182, 761, 1, 0, 0, 0, 184,
		766, 1, 0, 0, 0, 186, 774, 1, 0, 0, 0, 188, 777, 1, 0, 0, 0, 190, 783,
		1, 0, 0, 0, 192, 790, 1, 0, 0, 0, 194, 793, 1, 0, 0, 0, 196, 797, 1, 0,
		0, 0, 198, 800, 1, 0, 0, 0, 200, 805, 1, 0, 0, 0, 202, 809, 1, 0, 0, 0,
		204, 813, 1, 0, 0, 0, 206, 819, 1, 0, 0, 0, 208, 824, 1, 0, 0, 0, 210,
		832, 1, 0, 0, 0, 212, 838, 1, 0, 0, 0, 214, 844, 1, 0, 0, 0, 216, 851,
		1, 0, 0, 0, 218, 858, 1, 0, 0, 0, 220, 864, 1, 0, 0, 0, 222, 870, 1, 0,
		0, 0, 224, 876, 1, 0, 0, 0, 226, 889, 1, 0, 0, 0, 228, 895, 1, 0, 0, 0,
		230, 901, 1, 0, 0, 0, 232, 911, 1, 0, 0, 0, 234, 920, 1, 0, 0, 0, 236,
		932, 1, 0, 0, 0, 238, 942, 1, 0, 0, 0, 240, 954, 1, 0, 0, 0, 242, 963,
		1, 0, 0, 0, 244, 986, 1, 0, 0, 0, 246, 990, 1, 0, 0, 0, 248, 995, 1, 0,
		0, 0, 250, 1000, 1, 0, 0, 0, 252, 1006, 1, 0, 0, 0, 254, 1010, 1, 0, 0,
		0, 256, 1027, 1, 0, 0, 0, 258, 1049, 1, 0, 0, 0, 260, 1053, 1, 0, 0, 0,
		262, 1059, 1, 0, 0, 0, 264, 1064, 1, 0, 0, 0, 266, 1070, 1, 0, 0, 0, 268,
		1076, 1, 0, 0, 0, 270, 1083, 1, 0, 0, 0, 272, 1087, 1, 0, 0, 0, 274, 1089,
		1, 0, 0, 0, 276, 1109, 1, 0, 0, 0, 278, 1111, 1, 0, 0, 0, 280, 1120, 1,
		0, 0, 0, 282, 1122, 1, 0, 0, 0, 284, 1126, 1, 0, 0, 0, 286, 1128, 1, 0,
		0, 0, 288, 1131, 1, 0, 0, 0, 290, 1141, 1, 0, 0, 0, 292, 1143, 1, 0, 0,
		0, 294, 1154, 1, 0, 0, 0, 296, 1159, 1, 0, 0, 0, 298, 1171, 1, 0, 0, 0,
		300, 1183, 1, 0, 0, 0, 302, 1187, 1, 0, 0, 0, 304, 1189, 1, 0, 0, 0, 306,
		307, 5, 35, 0, 0, 307, 308, 5, 33, 0, 0, 308, 312, 1, 0, 0, 0, 309, 311,
		8, 0, 0, 0, 310, 309, 1, 0, 0, 0, 311, 314, 1, 0, 0, 0, 312, 310, 1, 0,
		0, 0, 312, 313, 1, 0, 0, 0, 313, 315, 1, 0, 0, 0, 314, 312, 1, 0, 0, 0,
		315, 316, 6, 0, 0, 0, 316, 3, 1, 0, 0, 0, 317, 318, 5, 47, 0, 0, 318, 319,
		5, 47, 0, 0, 319, 323, 1, 0, 0, 0, 320, 322, 8, 0, 0, 0, 321, 320, 1, 0,
		0, 0, 322, 325, 1, 0, 0, 0, 323, 321, 1, 0, 0, 0, 323, 324, 1, 0, 0, 0,
		324, 326, 1, 0, 0, 0, 325, 323, 1, 0, 0, 0, 326, 327, 6, 1, 1, 0, 327,
		5, 1, 0, 0, 0, 328, 329, 5, 47, 0, 0, 329, 330, 5, 42, 0, 0, 330, 334,
		1, 0, 0, 0, 331, 333, 8, 0, 0, 0, 332, 331, 1, 0, 0, 0, 333, 336, 1, 0,
		0, 0, 334, 332, 1, 0, 0, 0, 334, 335, 1, 0, 0, 0, 335, 337, 1, 0, 0, 0,
		336, 334, 1, 0, 0, 0, 337, 338, 5, 42, 0, 0, 338, 339, 5, 47, 0, 0, 339,
		340, 1, 0, 0, 0, 340, 341, 6, 2, 1, 0, 341, 7, 1, 0, 0, 0, 342, 343, 5,
		47, 0, 0, 343, 344, 5, 42, 0, 0, 344, 348, 1, 0, 0, 0, 345, 347, 9, 0,
		0, 0, 346, 345, 1, 0, 0, 0, 347, 350, 1, 0, 0, 0, 348, 349, 1, 0, 0, 0,
		348, 346, 1, 0, 0, 0, 349, 351, 1, 0, 0, 0, 350, 348, 1, 0, 0, 0, 351,
		352, 5, 42, 0, 0, 352, 353, 5, 47, 0, 0, 353, 354, 1, 0, 0, 0, 354, 355,
		6, 3, 1, 0, 355, 9, 1, 0, 0, 0, 356, 357, 5, 47, 0, 0, 357, 361, 3, 298,
		148, 0, 358, 360, 3, 300, 149, 0, 359, 358, 1, 0, 0, 0, 360, 363, 1, 0,
		0, 0, 361, 359, 1, 0, 0, 0, 361, 362, 1, 0, 0, 0, 362, 364, 1, 0, 0, 0,
		363, 361, 1, 0, 0, 0, 364, 365, 4, 4, 0, 0, 365, 369, 5, 47, 0, 0, 366,
		368, 3, 294, 146, 0, 367, 366, 1, 0, 0, 0, 368, 371, 1, 0, 0, 0, 369, 367,
		1, 0, 0, 0, 369, 370, 1, 0, 0, 0, 370, 11, 1, 0, 0, 0, 371, 369, 1, 0,
		0, 0, 372, 373, 5, 91, 0, 0, 373, 13, 1, 0, 0, 0, 374, 375, 5, 93, 0, 0,
		375, 15, 1, 0, 0, 0, 376, 377, 5, 40, 0, 0, 377, 17, 1, 0, 0, 0, 378, 379,
		5, 41, 0, 0, 379, 19, 1, 0, 0, 0, 380, 381, 5, 123, 0, 0, 381, 382, 6,
		9, 2, 0, 382, 21, 1, 0, 0, 0, 383, 384, 5, 125, 0, 0, 384, 385, 4, 10,
		1, 0, 385, 386, 1, 0, 0, 0, 386, 387, 6, 10, 3, 0, 387, 23, 1, 0, 0, 0,
		388, 389, 5, 125, 0, 0, 389, 390, 6, 11, 4, 0, 390, 25, 1, 0, 0, 0, 391,
		392, 5, 59, 0, 0, 392, 27, 1, 0, 0, 0, 393, 394, 5, 44, 0, 0, 394, 29,
		1, 0, 0, 0, 395, 396, 5, 61, 0, 0, 396, 31, 1, 0, 0, 0, 397, 398, 5, 63,
		0, 0, 398, 33, 1, 0, 0, 0, 399, 400, 5, 58, 0, 0, 400, 35, 1, 0, 0, 0,
		401, 402, 5, 46, 0, 0, 402, 403, 5, 46, 0, 0, 403, 404, 5, 46, 0, 0, 404,
		37, 1, 0, 0, 0, 405, 406, 5, 46, 0, 0, 406, 39, 1, 0, 0, 0, 407, 408, 5,
		43, 0, 0, 408, 409, 5, 43, 0, 0, 409, 41, 1, 0, 0, 0, 410, 411, 5, 45,
		0, 0, 411, 412, 5, 45, 0, 0, 412, 43, 1, 0, 0, 0, 413, 414, 5, 43, 0, 0,
		414, 45, 1, 0, 0, 0, 415, 416, 5, 45, 0, 0, 416, 47, 1, 0, 0, 0, 417, 418,
		5, 126, 0, 0, 418, 49, 1, 0, 0, 0, 419, 420, 5, 33, 0, 0, 420, 51, 1, 0,
		0, 0, 421, 422, 5, 42, 0, 0, 422, 53, 1, 0, 0, 0, 423, 424, 5, 47, 0, 0,
		424, 55, 1, 0, 0, 0, 425, 426, 5, 37, 0, 0, 426, 57, 1, 0, 0, 0, 427, 428,
		5, 42, 0, 0, 428, 429, 5, 42, 0, 0, 429, 59, 1, 0, 0, 0, 430, 431, 5, 63,
		0, 0, 431, 432, 5, 63, 0, 0, 432, 61, 1, 0, 0, 0, 433, 434, 5, 35, 0, 0,
		434, 63, 1, 0, 0, 0, 435, 436, 5, 62, 0, 0, 436, 437, 5, 62, 0, 0, 437,
		65, 1, 0, 0, 0, 438, 439, 5, 60, 0, 0, 439, 440, 5, 60, 0, 0, 440, 67,
		1, 0, 0, 0, 441, 442, 5, 62, 0, 0, 442, 443, 5, 62, 0, 0, 443, 444, 5,
		62, 0, 0, 444, 69, 1, 0, 0, 0, 445, 446, 5, 60, 0, 0, 446, 71, 1, 0, 0,
		0, 447, 448, 5, 62, 0, 0, 448, 73, 1, 0, 0, 0, 449, 450, 5, 60, 0, 0, 450,
		451, 5, 61, 0, 0, 451, 75, 1, 0, 0, 0, 452, 453, 5, 62, 0, 0, 453, 454,
		5, 61, 0, 0, 454, 77, 1, 0, 0, 0, 455, 456, 5, 61, 0, 0, 456, 457, 5, 61,
		0, 0, 457, 79, 1, 0, 0, 0, 458, 459, 5, 33, 0, 0, 459, 460, 5, 61, 0, 0,
		460, 81, 1, 0, 0, 0, 461, 462, 5, 61, 0, 0, 462, 463, 5, 61, 0, 0, 463,
		464, 5, 61, 0, 0, 464, 83, 1, 0, 0, 0, 465, 466, 5, 33, 0, 0, 466, 467,
		5, 61, 0, 0, 467, 468, 5, 61, 0, 0, 468, 85, 1, 0, 0, 0, 469, 470, 5, 38,
		0, 0, 470, 87, 1, 0, 0, 0, 471, 472, 5, 94, 0, 0, 472, 89, 1, 0, 0, 0,
		473, 474, 5, 124, 0, 0, 474, 91, 1, 0, 0, 0, 475, 476, 5, 38, 0, 0, 476,
		477, 5, 38, 0, 0, 477, 93, 1, 0, 0, 0, 478, 479, 5, 124, 0, 0, 479, 480,
		5, 124, 0, 0, 480, 95, 1, 0, 0, 0, 481, 482, 5, 42, 0, 0, 482, 483, 5,
		61, 0, 0, 483, 97, 1, 0, 0, 0, 484, 485, 5, 47, 0, 0, 485, 486, 5, 61,
		0, 0, 486, 99, 1, 0, 0, 0, 487, 488, 5, 37, 0, 0, 488, 489, 5, 61, 0, 0,
		489, 101, 1, 0, 0, 0, 490, 491, 5, 43, 0, 0, 491, 492, 5, 61, 0, 0, 492,
		103, 1, 0, 0, 0, 493, 494, 5, 45, 0, 0, 494, 495, 5, 61, 0, 0, 495, 105,
		1, 0, 0, 0, 496, 497, 5, 60, 0, 0, 497, 498, 5, 60, 0, 0, 498, 499, 5,
		61, 0, 0, 499, 107, 1, 0, 0, 0, 500, 501, 5, 62, 0, 0, 501, 502, 5, 62,
		0, 0, 502, 503, 5, 61, 0, 0, 503, 109, 1, 0, 0, 0, 504, 505, 5, 62, 0,
		0, 505, 506, 5, 62, 0, 0, 506, 507, 5, 62, 0, 0, 507, 508, 5, 61, 0, 0,
		508, 111, 1, 0, 0, 0, 509, 510, 5, 38, 0, 0, 510, 511, 5, 61, 0, 0, 511,
		113, 1, 0, 0, 0, 512, 513, 5, 94, 0, 0, 513, 514, 5, 61, 0, 0, 514, 115,
		1, 0, 0, 0, 515, 516, 5, 124, 0, 0, 516, 517, 5, 61, 0, 0, 517, 117, 1,
		0, 0, 0, 518, 519, 5, 42, 0, 0, 519, 520, 5, 42, 0, 0, 520, 521, 5, 61,
		0, 0, 521, 119, 1, 0, 0, 0, 522, 523, 5, 61, 0, 0, 523, 524, 5, 62, 0,
		0, 524, 121, 1, 0, 0, 0, 525, 526, 5, 110, 0, 0, 526, 527, 5, 117, 0, 0,
		527, 528, 5, 108, 0, 0, 528, 529, 5, 108, 0, 0, 529, 123, 1, 0, 0, 0, 530,
		531, 5, 116, 0, 0, 531, 532, 5, 114, 0, 0, 532, 533, 5, 117, 0, 0, 533,
		540, 5, 101, 0, 0, 534, 535, 5, 102, 0, 0, 535, 536, 5, 97, 0, 0, 536,
		537, 5, 108, 0, 0, 537, 538, 5, 115, 0, 0, 538, 540, 5, 101, 0, 0, 539,
		530, 1, 0, 0, 0, 539, 534, 1, 0, 0, 0, 540, 125, 1, 0, 0, 0, 541, 542,
		3, 290, 144, 0, 542, 543, 5, 46, 0, 0, 543, 547, 7, 1, 0, 0, 544, 546,
		7, 2, 0, 0, 545, 544, 1, 0, 0, 0, 546, 549, 1, 0, 0, 0, 547, 545, 1, 0,
		0, 0, 547, 548, 1, 0, 0, 0, 548, 551, 1, 0, 0, 0, 549, 547, 1, 0, 0, 0,
		550, 552, 3, 292, 145, 0, 551, 550, 1, 0, 0, 0, 551, 552, 1, 0, 0, 0, 552,
		569, 1, 0, 0, 0, 553, 554, 5, 46, 0, 0, 554, 558, 7, 1, 0, 0, 555, 557,
		7, 2, 0, 0, 556, 555, 1, 0, 0, 0, 557, 560, 1, 0, 0, 0, 558, 556, 1, 0,
		0, 0, 558, 559, 1, 0, 0, 0, 559, 562, 1, 0, 0, 0, 560, 558, 1, 0, 0, 0,
		561, 563, 3, 292, 145, 0, 562, 561, 1, 0, 0, 0, 562, 563, 1, 0, 0, 0, 563,
		569, 1, 0, 0, 0, 564, 566, 3, 290, 144, 0, 565, 567, 3, 292, 145, 0, 566,
		565, 1, 0, 0, 0, 566, 567, 1, 0, 0, 0, 567, 569, 1, 0, 0, 0, 568, 541,
		1, 0, 0, 0, 568, 553, 1, 0, 0, 0, 568, 564, 1, 0, 0, 0, 569, 127, 1, 0,
		0, 0, 570, 571, 5, 48, 0, 0, 571, 572, 7, 3, 0, 0, 572, 576, 7, 4, 0, 0,
		573, 575, 3, 288, 143, 0, 574, 573, 1, 0, 0, 0, 575, 578, 1, 0, 0, 0, 576,
		574, 1, 0, 0, 0, 576, 577, 1, 0, 0, 0, 577, 129, 1, 0, 0, 0, 578, 576,
		1, 0, 0, 0, 579, 581, 5, 48, 0, 0, 580, 582, 7, 5, 0, 0, 581, 580, 1, 0,
		0, 0, 582, 583, 1, 0, 0, 0, 583, 581, 1, 0, 0, 0, 583, 584, 1, 0, 0, 0,
		584, 585, 1, 0, 0, 0, 585, 586, 4, 64, 2, 0, 586, 131, 1, 0, 0, 0, 587,
		588, 5, 48, 0, 0, 588, 589, 7, 6, 0, 0, 589, 593, 7, 5, 0, 0, 590, 592,
		7, 7, 0, 0, 591, 590, 1, 0, 0, 0, 592, 595, 1, 0, 0, 0, 593, 591, 1, 0,
		0, 0, 593, 594, 1, 0, 0, 0, 594, 133, 1, 0, 0, 0, 595, 593, 1, 0, 0, 0,
		596, 597, 5, 48, 0, 0, 597, 598, 7, 8, 0, 0, 598, 602, 7, 9, 0, 0, 599,
		601, 7, 10, 0, 0, 600, 599, 1, 0, 0, 0, 601, 604, 1, 0, 0, 0, 602, 600,
		1, 0, 0, 0, 602, 603, 1, 0, 0, 0, 603, 135, 1, 0, 0, 0, 604, 602, 1, 0,
		0, 0, 605, 606, 5, 48, 0, 0, 606, 607, 7, 3, 0, 0, 607, 611, 7, 4, 0, 0,
		608, 610, 3, 288, 143, 0, 609, 608, 1, 0, 0, 0, 610, 613, 1, 0, 0, 0, 611,
		609, 1, 0, 0, 0, 611, 612, 1, 0, 0, 0, 612, 614, 1, 0, 0, 0, 613, 611,
		1, 0, 0, 0, 614, 615, 5, 110, 0, 0, 615, 137, 1, 0, 0, 0, 616, 617, 5,
		48, 0, 0, 617, 618, 7, 6, 0, 0, 618, 622, 7, 5, 0, 0, 619, 621, 7, 7, 0,
		0, 620, 619, 1, 0, 0, 0, 621, 624, 1, 0, 0, 0, 622, 620, 1, 0, 0, 0, 622,
		623, 1, 0, 0, 0, 623, 625, 1, 0, 0, 0, 624, 622, 1, 0, 0, 0, 625, 626,
		5, 110, 0, 0, 626, 139, 1, 0, 0, 0, 627, 628, 5, 48, 0, 0, 628, 629, 7,
		8, 0, 0, 629, 633, 7, 9, 0, 0, 630, 632, 7, 10, 0, 0, 631, 630, 1, 0, 0,
		0, 632, 635, 1, 0, 0, 0, 633, 631, 1, 0, 0, 0, 633, 634, 1, 0, 0, 0, 634,
		636, 1, 0, 0, 0, 635, 633, 1, 0, 0, 0, 636, 637, 5, 110, 0, 0, 637, 141,
		1, 0, 0, 0, 638, 639, 3, 290, 144, 0, 639, 640, 5, 110, 0, 0, 640, 143,
		1, 0, 0, 0, 641, 642, 5, 98, 0, 0, 642, 643, 5, 114, 0, 0, 643, 644, 5,
		101, 0, 0, 644, 645, 5, 97, 0, 0, 645, 646, 5, 107, 0, 0, 646, 145, 1,
		0, 0, 0, 647, 648, 5, 100, 0, 0, 648, 649, 5, 111, 0, 0, 649, 147, 1, 0,
		0, 0, 650, 651, 5, 105, 0, 0, 651, 652, 5, 110, 0, 0, 652, 653, 5, 115,
		0, 0, 653, 654, 5, 116, 0, 0, 654, 655, 5, 97, 0, 0, 655, 656, 5, 110,
		0, 0, 656, 657, 5, 99, 0, 0, 657, 658, 5, 101, 0, 0, 658, 659, 5, 111,
		0, 0, 659, 660, 5, 102, 0, 0, 660, 149, 1, 0, 0, 0, 661, 662, 5, 116, 0,
		0, 662, 663, 5, 121, 0, 0, 663, 664, 5, 112, 0, 0, 664, 665, 5, 101, 0,
		0, 665, 666, 5, 111, 0, 0, 666, 667, 5, 102, 0, 0, 667, 151, 1, 0, 0, 0,
		668, 669, 5, 99, 0, 0, 669, 670, 5, 97, 0, 0, 670, 671, 5, 115, 0, 0, 671,
		672, 5, 101, 0, 0, 672, 153, 1, 0, 0, 0, 673, 674, 5, 101, 0, 0, 674, 675,
		5, 108, 0, 0, 675, 676, 5, 115, 0, 0, 676, 677, 5, 101, 0, 0, 677, 155,
		1, 0, 0, 0, 678, 679, 5, 110, 0, 0, 679, 680, 5, 101, 0, 0, 680, 681, 5,
		119, 0, 0, 681, 157, 1, 0, 0, 0, 682, 683, 5, 118, 0, 0, 683, 684, 5, 97,
		0, 0, 684, 685, 5, 114, 0, 0, 685, 159, 1, 0, 0, 0, 686, 687, 5, 99, 0,
		0, 687, 688, 5, 97, 0, 0, 688, 689, 5, 116, 0, 0, 689, 690, 5, 99, 0, 0,
		690, 691, 5, 104, 0, 0, 691, 161, 1, 0, 0, 0, 692, 693, 5, 102, 0, 0, 693,
		694, 5, 105, 0, 0, 694, 695, 5, 110, 0, 0, 695, 696, 5, 97, 0, 0, 696,
		697, 5, 108, 0, 0, 697, 698, 5, 108, 0, 0, 698, 699, 5, 121, 0, 0, 699,
		163, 1, 0, 0, 0, 700, 701, 5, 114, 0, 0, 701, 702, 5, 101, 0, 0, 702, 703,
		5, 116, 0, 0, 703, 704, 5, 117, 0, 0, 704, 705, 5, 114, 0, 0, 705, 706,
		5, 110, 0, 0, 706, 165, 1, 0, 0, 0, 707, 708, 5, 118, 0, 0, 708, 709, 5,
		111, 0, 0, 709, 710, 5, 105, 0, 0, 710, 711, 5, 100, 0, 0, 711, 167, 1,
		0, 0, 0, 712, 713, 5, 99, 0, 0, 713, 714, 5, 111, 0, 0, 714, 715, 5, 110,
		0, 0, 715, 716, 5, 116, 0, 0, 716, 717, 5, 105, 0, 0, 717, 718, 5, 110,
		0, 0, 718, 719, 5, 117, 0, 0, 719, 720, 5, 101, 0, 0, 720, 169, 1, 0, 0,
		0, 721, 722, 5, 102, 0, 0, 722, 723, 5, 111, 0, 0, 723, 724, 5, 114, 0,
		0, 724, 171, 1, 0, 0, 0, 725, 726, 5, 115, 0, 0, 726, 727, 5, 119, 0, 0,
		727, 728, 5, 105, 0, 0, 728, 729, 5, 116, 0, 0, 729, 730, 5, 99, 0, 0,
		730, 731, 5, 104, 0, 0, 731, 173, 1, 0, 0, 0, 732, 733, 5, 119, 0, 0, 733,
		734, 5, 104, 0, 0, 734, 735, 5, 105, 0, 0, 735, 736, 5, 108, 0, 0, 736,
		737, 5, 101, 0, 0, 737, 175, 1, 0, 0, 0, 738, 739, 5, 100, 0, 0, 739, 740,
		5, 101, 0, 0, 740, 741, 5, 98, 0, 0, 741, 742, 5, 117, 0, 0, 742, 743,
		5, 103, 0, 0, 743, 744, 5, 103, 0, 0, 744, 745, 5, 101, 0, 0, 745, 746,
		5, 114, 0, 0, 746, 177, 1, 0, 0, 0, 747, 748, 5, 102, 0, 0, 748, 749, 5,
		117, 0, 0, 749, 750, 5, 110, 0, 0, 750, 751, 5, 99, 0, 0, 751, 752, 5,
		116, 0, 0, 752, 753, 5, 105, 0, 0, 753, 754, 5, 111, 0, 0, 754, 755, 5,
		110, 0, 0, 755, 179, 1, 0, 0, 0, 756, 757, 5, 116, 0, 0, 757, 758, 5, 104,
		0, 0, 758, 759, 5, 105, 0, 0, 759, 760, 5, 115, 0, 0, 760, 181, 1, 0, 0,
		0, 761, 762, 5, 119, 0, 0, 762, 763, 5, 105, 0, 0, 763, 764, 5, 116, 0,
		0, 764, 765, 5, 104, 0, 0, 765, 183, 1, 0, 0, 0, 766, 767, 5, 100, 0, 0,
		767, 768, 5, 101, 0, 0, 768, 769, 5, 102, 0, 0, 769, 770, 5, 97, 0, 0,
		770, 771, 5, 117, 0, 0, 771, 772, 5, 108, 0, 0, 772, 773, 5, 116, 0, 0,
		773, 185, 1, 0, 0, 0, 774, 775, 5, 105, 0, 0, 775, 776, 5, 102, 0, 0, 776,
		187, 1, 0, 0, 0, 777, 778, 5, 116, 0, 0, 778, 779, 5, 104, 0, 0, 779, 780,
		5, 114, 0, 0, 780, 781, 5, 111, 0, 0, 781, 782, 5, 119, 0, 0, 782, 189,
		1, 0, 0, 0, 783, 784, 5, 100, 0, 0, 784, 785, 5, 101, 0, 0, 785, 786, 5,
		108, 0, 0, 786, 787, 5, 101, 0, 0, 787, 788, 5, 116, 0, 0, 788, 789, 5,
		101, 0, 0, 789, 191, 1, 0, 0, 0, 790, 791, 5, 105, 0, 0, 791, 792, 5, 110,
		0, 0, 792, 193, 1, 0, 0, 0, 793, 794, 5, 116, 0, 0, 794, 795, 5, 114, 0,
		0, 795, 796, 5, 121, 0, 0, 796, 195, 1, 0, 0, 0, 797, 798, 5, 97, 0, 0,
		798, 799, 5, 115, 0, 0, 799, 197, 1, 0, 0, 0, 800, 801, 5, 102, 0, 0, 801,
		802, 5, 114, 0, 0, 802, 803, 5, 111, 0, 0, 803, 804, 5, 109, 0, 0, 804,
		199, 1, 0, 0, 0, 805, 806, 5, 103, 0, 0, 806, 807, 5, 101, 0, 0, 807, 808,
		5, 116, 0, 0, 808, 201, 1, 0, 0, 0, 809, 810, 5, 115, 0, 0, 810, 811, 5,
		101, 0, 0, 811, 812, 5, 116, 0, 0, 812, 203, 1, 0, 0, 0, 813, 814, 5, 99,
		0, 0, 814, 815, 5, 108, 0, 0, 815, 816, 5, 97, 0, 0, 816, 817, 5, 115,
		0, 0, 817, 818, 5, 115, 0, 0, 818, 205, 1, 0, 0, 0, 819, 820, 5, 101, 0,
		0, 820, 821, 5, 110, 0, 0, 821, 822, 5, 117, 0, 0, 822, 823, 5, 109, 0,
		0, 823, 207, 1, 0, 0, 0, 824, 825, 5, 101, 0, 0, 825, 826, 5, 120, 0, 0,
		826, 827, 5, 116, 0, 0, 827, 828, 5, 101, 0, 0, 828, 829, 5, 110, 0, 0,
		829, 830, 5, 100, 0, 0, 830, 831, 5, 115, 0, 0, 831, 209, 1, 0, 0, 0, 832,
		833, 5, 115, 0, 0, 833, 834, 5, 117, 0, 0, 834, 835, 5, 112, 0, 0, 835,
		836, 5, 101, 0, 0, 836, 837, 5, 114, 0, 0, 837, 211, 1, 0, 0, 0, 838, 839,
		5, 99, 0, 0, 839, 840, 5, 111, 0, 0, 840, 841, 5, 110, 0, 0, 841, 842,
		5, 115, 0, 0, 842, 843, 5, 116, 0, 0, 843, 213, 1, 0, 0, 0, 844, 845, 5,
		101, 0, 0, 845, 846, 5, 120, 0, 0, 846, 847, 5, 112, 0, 0, 847, 848, 5,
		111, 0, 0, 848, 849, 5, 114, 0, 0, 849, 850, 5, 116, 0, 0, 850, 215, 1,
		0, 0, 0, 851, 852, 5, 105, 0, 0, 852, 853, 5, 109, 0, 0, 853, 854, 5, 112,
		0, 0, 854, 855, 5, 111, 0, 0, 855, 856, 5, 114, 0, 0, 856, 857, 5, 116,
		0, 0, 857, 217, 1, 0, 0, 0, 858, 859, 5, 97, 0, 0, 859, 860, 5, 115, 0,
		0, 860, 861, 5, 121, 0, 0, 861, 862, 5, 110, 0, 0, 862, 863, 5, 99, 0,
		0, 863, 219, 1, 0, 0, 0, 864, 865, 5, 97, 0, 0, 865, 866, 5, 119, 0, 0,
		866, 867, 5, 97, 0, 0, 867, 868, 5, 105, 0, 0, 868, 869, 5, 116, 0, 0,
		869, 221, 1, 0, 0, 0, 870, 871, 5, 121, 0, 0, 871, 872, 5, 105, 0, 0, 872,
		873, 5, 101, 0, 0, 873, 874, 5, 108, 0, 0, 874, 875, 5, 100, 0, 0, 875,
		223, 1, 0, 0, 0, 876, 877, 5, 105, 0, 0, 877, 878, 5, 109, 0, 0, 878, 879,
		5, 112, 0, 0, 879, 880, 5, 108, 0, 0, 880, 881, 5, 101, 0, 0, 881, 882,
		5, 109, 0, 0, 882, 883, 5, 101, 0, 0, 883, 884, 5, 110, 0, 0, 884, 885,
		5, 116, 0, 0, 885, 886, 5, 115, 0, 0, 886, 887, 1, 0, 0, 0, 887, 888, 4,
		111, 3, 0, 888, 225, 1, 0, 0, 0, 889, 890, 5, 108, 0, 0, 890, 891, 5, 101,
		0, 0, 891, 892, 5, 116, 0, 0, 892, 893, 1, 0, 0, 0, 893, 894, 4, 112, 4,
		0, 894, 227, 1, 0, 0, 0, 895, 896, 5, 108, 0, 0, 896, 897, 5, 101, 0, 0,
		897, 898, 5, 116, 0, 0, 898, 899, 1, 0, 0, 0, 899, 900, 4, 113, 5, 0, 900,
		229, 1, 0, 0, 0, 901, 902, 5, 112, 0, 0, 902, 903, 5, 114, 0, 0, 903, 904,
		5, 105, 0, 0, 904, 905, 5, 118, 0, 0, 905, 906, 5, 97, 0, 0, 906, 907,
		5, 116, 0, 0, 907, 908, 5, 101, 0, 0, 908, 909, 1, 0, 0, 0, 909, 910, 4,
		114, 6, 0, 910, 231, 1, 0, 0, 0, 911, 912, 5, 112, 0, 0, 912, 913, 5, 117,
		0, 0, 913, 914, 5, 98, 0, 0, 914, 915, 5, 108, 0, 0, 915, 916, 5, 105,
		0, 0, 916, 917, 5, 99, 0, 0, 917, 918, 1, 0, 0, 0, 918, 919, 4, 115, 7,
		0, 919, 233, 1, 0, 0, 0, 920, 921, 5, 105, 0, 0, 921, 922, 5, 110, 0, 0,
		922, 923, 5, 116, 0, 0, 923, 924, 5, 101, 0, 0, 924, 925, 5, 114, 0, 0,
		925, 926, 5, 102, 0, 0, 926, 927, 5, 97, 0, 0, 927, 928, 5, 99, 0, 0, 928,
		929, 5, 101, 0, 0, 929, 930, 1, 0, 0, 0, 930, 931, 4, 116, 8, 0, 931, 235,
		1, 0, 0, 0, 932, 933, 5, 112, 0, 0, 933, 934, 5, 97, 0, 0, 934, 935, 5,
		99, 0, 0, 935, 936, 5, 107, 0, 0, 936, 937, 5, 97, 0, 0, 937, 938, 5, 103,
		0, 0, 938, 939, 5, 101, 0, 0, 939, 940, 1, 0, 0, 0, 940, 941, 4, 117, 9,
		0, 941, 237, 1, 0, 0, 0, 942, 943, 5, 112, 0, 0, 943, 944, 5, 114, 0, 0,
		944, 945, 5, 111, 0, 0, 945, 946, 5, 116, 0, 0, 946, 947, 5, 101, 0, 0,
		947, 948, 5, 99, 0, 0, 948, 949, 5, 116, 0, 0, 949, 950, 5, 101, 0, 0,
		950, 951, 5, 100, 0, 0, 951, 952, 1, 0, 0, 0, 952, 953, 4, 118, 10, 0,
		953, 239, 1, 0, 0, 0, 954, 955, 5, 115, 0, 0, 955, 956, 5, 116, 0, 0, 956,
		957, 5, 97, 0, 0, 957, 958, 5, 116, 0, 0, 958, 959, 5, 105, 0, 0, 959,
		960, 5, 99, 0, 0, 960, 961, 1, 0, 0, 0, 961, 962, 4, 119, 11, 0, 962, 241,
		1, 0, 0, 0, 963, 967, 3, 296, 147, 0, 964, 966, 3, 294, 146, 0, 965, 964,
		1, 0, 0, 0, 966, 969, 1, 0, 0, 0, 967, 965, 1, 0, 0, 0, 967, 968, 1, 0,
		0, 0, 968, 243, 1, 0, 0, 0, 969, 967, 1, 0, 0, 0, 970, 974, 5, 34, 0, 0,
		971, 973, 3, 266, 132, 0, 972, 971, 1, 0, 0, 0, 973, 976, 1, 0, 0, 0, 974,
		972, 1, 0, 0, 0, 974, 975, 1, 0, 0, 0, 975, 977, 1, 0, 0, 0, 976, 974,
		1, 0, 0, 0, 977, 987, 5, 34, 0, 0, 978, 982, 5, 39, 0, 0, 979, 981, 3,
		268, 133, 0, 980, 979, 1, 0, 0, 0, 981, 984, 1, 0, 0, 0, 982, 980, 1, 0,
		0, 0, 982, 983, 1, 0, 0, 0, 983, 985, 1, 0, 0, 0, 984, 982, 1, 0, 0, 0,
		985, 987, 5, 39, 0, 0, 986, 970, 1, 0, 0, 0, 986, 978, 1, 0, 0, 0, 987,
		988, 1, 0, 0, 0, 988, 989, 6, 121, 5, 0, 989, 245, 1, 0, 0, 0, 990, 991,
		5, 96, 0, 0, 991, 992, 6, 122, 6, 0, 992, 993, 1, 0, 0, 0, 993, 994, 6,
		122, 7, 0, 994, 247, 1, 0, 0, 0, 995, 996, 5, 13, 0, 0, 996, 997, 1, 0,
		0, 0, 997, 998, 6, 123, 8, 0, 998, 249, 1, 0, 0, 0, 999, 1001, 7, 11, 0,
		0, 1000, 999, 1, 0, 0, 0, 1001, 1002, 1, 0, 0, 0, 1002, 1000, 1, 0, 0,
		0, 1002, 1003, 1, 0, 0, 0, 1003, 1004, 1, 0, 0, 0, 1004, 1005, 6, 124,
		8, 0, 1005, 251, 1, 0, 0, 0, 1006, 1007, 7, 12, 0, 0, 1007, 1008, 1, 0,
		0, 0, 1008, 1009, 6, 125, 1, 0, 1009, 253, 1, 0, 0, 0, 1010, 1011, 5, 60,
		0, 0, 1011, 1012, 5, 33, 0, 0, 1012, 1013, 5, 45, 0, 0, 1013, 1014, 5,
		45, 0, 0, 1014, 1018, 1, 0, 0, 0, 1015, 1017, 9, 0, 0, 0, 1016, 1015, 1,
		0, 0, 0, 1017, 1020, 1, 0, 0, 0, 1018, 1019, 1, 0, 0, 0, 1018, 1016, 1,
		0, 0, 0, 1019, 1021, 1, 0, 0, 0, 1020, 1018, 1, 0, 0, 0, 1021, 1022, 5,
		45, 0, 0, 1022, 1023, 5, 45, 0, 0, 1023, 1024, 5, 62, 0, 0, 1024, 1025,
		1, 0, 0, 0, 1025, 1026, 6, 126, 8, 0, 1026, 255, 1, 0, 0, 0, 1027, 1028,
		5, 60, 0, 0, 1028, 1029, 5, 33, 0, 0, 1029, 1030, 5, 91, 0, 0, 1030, 1031,
		5, 67, 0, 0, 1031, 1032, 5, 68, 0, 0, 1032, 1033, 5, 65, 0, 0, 1033, 1034,
		5, 84, 0, 0, 1034, 1035, 5, 65, 0, 0, 1035, 1036, 5, 91, 0, 0, 1036, 1040,
		1, 0, 0, 0, 1037, 1039, 9, 0, 0, 0, 1038, 1037, 1, 0, 0, 0, 1039, 1042,
		1, 0, 0, 0, 1040, 1041, 1, 0, 0, 0, 1040, 1038, 1, 0, 0, 0, 1041, 1043,
		1, 0, 0, 0, 1042, 1040, 1, 0, 0, 0, 1043, 1044, 5, 93, 0, 0, 1044, 1045,
		5, 93, 0, 0, 1045, 1046, 5, 62, 0, 0, 1046, 1047, 1, 0, 0, 0, 1047, 1048,
		6, 127, 8, 0, 1048, 257, 1, 0, 0, 0, 1049, 1050, 9, 0, 0, 0, 1050, 1051,
		1, 0, 0, 0, 1051, 1052, 6, 128, 9, 0, 1052, 259, 1, 0, 0, 0, 1053, 1054,
		5, 96, 0, 0, 1054, 1055, 6, 129, 10, 0, 1055, 1056, 1, 0, 0, 0, 1056, 1057,
		6, 129, 11, 0, 1057, 1058, 6, 129, 3, 0, 1058, 261, 1, 0, 0, 0, 1059, 1060,
		5, 36, 0, 0, 1060, 1061, 5, 123, 0, 0, 1061, 1062, 1, 0, 0, 0, 1062, 1063,
		6, 130, 12, 0, 1063, 263, 1, 0, 0, 0, 1064, 1065, 8, 13, 0, 0, 1065, 265,
		1, 0, 0, 0, 1066, 1071, 8, 14, 0, 0, 1067, 1068, 5, 92, 0, 0, 1068, 1071,
		3, 270, 134, 0, 1069, 1071, 3, 286, 142, 0, 1070, 1066, 1, 0, 0, 0, 1070,
		1067, 1, 0, 0, 0, 1070, 1069, 1, 0, 0, 0, 1071, 267, 1, 0, 0, 0, 1072,
		1077, 8, 15, 0, 0, 1073, 1074, 5, 92, 0, 0, 1074, 1077, 3, 270, 134, 0,
		1075, 1077, 3, 286, 142, 0, 1076, 1072, 1, 0, 0, 0, 1076, 1073, 1, 0, 0,
		0, 1076, 1075, 1, 0, 0, 0, 1077, 269, 1, 0, 0, 0, 1078, 1084, 3, 272, 135,
		0, 1079, 1084, 5, 48, 0, 0, 1080, 1084, 3, 274, 136, 0, 1081, 1084, 3,
		276, 137, 0, 1082, 1084, 3, 278, 138, 0, 1083, 1078, 1, 0, 0, 0, 1083,
		1079, 1, 0, 0, 0, 1083, 1080, 1, 0, 0, 0, 1083, 1081, 1, 0, 0, 0, 1083,
		1082, 1, 0, 0, 0, 1084, 271, 1, 0, 0, 0, 1085, 1088, 3, 280, 139, 0, 1086,
		1088, 3, 282, 140, 0, 1087, 1085, 1, 0, 0, 0, 1087, 1086, 1, 0, 0, 0, 1088,
		273, 1, 0, 0, 0, 1089, 1090, 5, 120, 0, 0, 1090, 1091, 3, 288, 143, 0,
		1091, 1092, 3, 288, 143, 0, 1092, 275, 1, 0, 0, 0, 1093, 1094, 5, 117,
		0, 0, 1094, 1095, 3, 288, 143, 0, 1095, 1096, 3, 288, 143, 0, 1096, 1097,
		3, 288, 143, 0, 1097, 1098, 3, 288, 143, 0, 1098, 1110, 1, 0, 0, 0, 1099,
		1100, 5, 117, 0, 0, 1100, 1101, 5, 123, 0, 0, 1101, 1103, 3, 288, 143,
		0, 1102, 1104, 3, 288, 143, 0, 1103, 1102, 1, 0, 0, 0, 1104, 1105, 1, 0,
		0, 0, 1105, 1103, 1, 0, 0, 0, 1105, 1106, 1, 0, 0, 0, 1106, 1107, 1, 0,
		0, 0, 1107, 1108, 5, 125, 0, 0, 1108, 1110, 1, 0, 0, 0, 1109, 1093, 1,
		0, 0, 0, 1109, 1099, 1, 0, 0, 0, 1110, 277, 1, 0, 0, 0, 1111, 1112, 5,
		117, 0, 0, 1112, 1114, 5, 123, 0, 0, 1113, 1115, 3, 288, 143, 0, 1114,
		1113, 1, 0, 0, 0, 1115, 1116, 1, 0, 0, 0, 1116, 1114, 1, 0, 0, 0, 1116,
		1117, 1, 0, 0, 0, 1117, 1118, 1, 0, 0, 0, 1118, 1119, 5, 125, 0, 0, 1119,
		279, 1, 0, 0, 0, 1120, 1121, 7, 16, 0, 0, 1121, 281, 1, 0, 0, 0, 1122,
		1123, 8, 17, 0, 0, 1123, 283, 1, 0, 0, 0, 1124, 1127, 3, 280, 139, 0, 1125,
		1127, 7, 18, 0, 0, 1126, 1124, 1, 0, 0, 0, 1126, 1125, 1, 0, 0, 0, 1127,
		285, 1, 0, 0, 0, 1128, 1129, 5, 92, 0, 0, 1129, 1130, 7, 0, 0, 0, 1130,
		287, 1, 0, 0, 0, 1131, 1132, 7, 19, 0, 0, 1132, 289, 1, 0, 0, 0, 1133,
		1142, 5, 48, 0, 0, 1134, 1138, 7, 20, 0, 0, 1135, 1137, 7, 2, 0, 0, 1136,
		1135, 1, 0, 0, 0, 1137, 1140, 1, 0, 0, 0, 1138, 1136, 1, 0, 0, 0, 1138,
		1139, 1, 0, 0, 0, 1139, 1142, 1, 0, 0, 0, 1140, 1138, 1, 0, 0, 0, 1141,
		1133, 1, 0, 0, 0, 1141, 1134, 1, 0, 0, 0, 1142, 291, 1, 0, 0, 0, 1143,
		1145, 7, 21, 0, 0, 1144, 1146, 7, 22, 0, 0, 1145, 1144, 1, 0, 0, 0, 1145,
		1146, 1, 0, 0, 0, 1146, 1148, 1, 0, 0, 0, 1147, 1149, 7, 2, 0, 0, 1148,
		1147, 1, 0, 0, 0, 1149, 1150, 1, 0, 0, 0, 1150, 1148, 1, 0, 0, 0, 1150,
		1151, 1, 0, 0, 0, 1151, 293, 1, 0, 0, 0, 1152, 1155, 3, 296, 147, 0, 1153,
		1155, 7, 23, 0, 0, 1154, 1152, 1, 0, 0, 0, 1154, 1153, 1, 0, 0, 0, 1155,
		295, 1, 0, 0, 0, 1156, 1160, 7, 24, 0, 0, 1157, 1158, 5, 92, 0, 0, 1158,
		1160, 3, 276, 137, 0, 1159, 1156, 1, 0, 0, 0, 1159, 1157, 1, 0, 0, 0, 1160,
		297, 1, 0, 0, 0, 1161, 1172, 8, 25, 0, 0, 1162, 1172, 3, 304, 151, 0, 1163,
		1167, 5, 91, 0, 0, 1164, 1166, 3, 302, 150, 0, 1165, 1164, 1, 0, 0, 0,
		1166, 1169, 1, 0, 0, 0, 1167, 1165, 1, 0, 0, 0, 1167, 1168, 1, 0, 0, 0,
		1168, 1170, 1, 0, 0, 0, 1169, 1167, 1, 0, 0, 0, 1170, 1172, 5, 93, 0, 0,
		1171, 1161, 1, 0, 0, 0, 1171, 1162, 1, 0, 0, 0, 1171, 1163, 1, 0, 0, 0,
		1172, 299, 1, 0, 0, 0, 1173, 1184, 8, 26, 0, 0, 1174, 1184, 3, 304, 151,
		0, 1175, 1179, 5, 91, 0, 0, 1176, 1178, 3, 302, 150, 0, 1177, 1176, 1,
		0, 0, 0, 1178, 1181, 1, 0, 0, 0, 1179, 1177, 1, 0, 0, 0, 1179, 1180, 1,
		0, 0, 0, 1180, 1182, 1, 0, 0, 0, 1181, 1179, 1, 0, 0, 0, 1182, 1184, 5,
		93, 0, 0, 1183, 1173, 1, 0, 0, 0, 1183, 1174, 1, 0, 0, 0, 1183, 1175, 1,
		0, 0, 0, 1184, 301, 1, 0, 0, 0, 1185, 1188, 8, 27, 0, 0, 1186, 1188, 3,
		304, 151, 0, 1187, 1185, 1, 0, 0, 0, 1187, 1186, 1, 0, 0, 0, 1188, 303,
		1, 0, 0, 0, 1189, 1190, 5, 92, 0, 0, 1190, 1191, 8, 0, 0, 0, 1191, 305,
		1, 0, 0, 0, 48, 0, 1, 312, 323, 334, 348, 361, 369, 539, 547, 551, 558,
		562, 566, 568, 576, 583, 593, 602, 611, 622, 633, 967, 974, 982, 986, 1002,
		1018, 1040, 1070, 1076, 1083, 1087, 1105, 1109, 1116, 1126, 1138, 1141,
		1145, 1150, 1154, 1159, 1167, 1171, 1179, 1183, 1187, 13, 1, 0, 0, 0, 1,
		0, 1, 9, 1, 4, 0, 0, 1, 11, 2, 1, 121, 3, 1, 122, 4, 5, 1, 0, 6, 0, 0,
		0, 2, 0, 1, 129, 5, 7, 123, 0, 5, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// JavaScriptLexerInit initializes any static state used to implement JavaScriptLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewJavaScriptLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func JavaScriptLexerInit() {
	staticData := &javascriptlexerLexerStaticData
	staticData.once.Do(javascriptlexerLexerInit)
}

// NewJavaScriptLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewJavaScriptLexer(input antlr.CharStream) *JavaScriptLexer {
	JavaScriptLexerInit()
	l := new(JavaScriptLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &javascriptlexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "JavaScriptLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// JavaScriptLexer tokens.
const (
	JavaScriptLexerHashBangLine                  = 1
	JavaScriptLexerSingleLineComment             = 2
	JavaScriptLexerBlockComment                  = 3
	JavaScriptLexerMultiLineComment              = 4
	JavaScriptLexerRegularExpressionLiteral      = 5
	JavaScriptLexerOpenBracket                   = 6
	JavaScriptLexerCloseBracket                  = 7
	JavaScriptLexerOpenParen                     = 8
	JavaScriptLexerCloseParen                    = 9
	JavaScriptLexerOpenBrace                     = 10
	JavaScriptLexerTemplateCloseBrace            = 11
	JavaScriptLexerCloseBrace                    = 12
	JavaScriptLexerSemiColon                     = 13
	JavaScriptLexerComma                         = 14
	JavaScriptLexerAssign                        = 15
	JavaScriptLexerQuestionMark                  = 16
	JavaScriptLexerColon                         = 17
	JavaScriptLexerEllipsis                      = 18
	JavaScriptLexerDot                           = 19
	JavaScriptLexerPlusPlus                      = 20
	JavaScriptLexerMinusMinus                    = 21
	JavaScriptLexerPlus                          = 22
	JavaScriptLexerMinus                         = 23
	JavaScriptLexerBitNot                        = 24
	JavaScriptLexerNot                           = 25
	JavaScriptLexerMultiply                      = 26
	JavaScriptLexerDivide                        = 27
	JavaScriptLexerModulus                       = 28
	JavaScriptLexerPower                         = 29
	JavaScriptLexerNullCoalesce                  = 30
	JavaScriptLexerHashtag                       = 31
	JavaScriptLexerRightShiftArithmetic          = 32
	JavaScriptLexerLeftShiftArithmetic           = 33
	JavaScriptLexerRightShiftLogical             = 34
	JavaScriptLexerLessThan                      = 35
	JavaScriptLexerMoreThan                      = 36
	JavaScriptLexerLessThanEquals                = 37
	JavaScriptLexerGreaterThanEquals             = 38
	JavaScriptLexerEquals_                       = 39
	JavaScriptLexerNotEquals                     = 40
	JavaScriptLexerIdentityEquals                = 41
	JavaScriptLexerIdentityNotEquals             = 42
	JavaScriptLexerBitAnd                        = 43
	JavaScriptLexerBitXOr                        = 44
	JavaScriptLexerBitOr                         = 45
	JavaScriptLexerAnd                           = 46
	JavaScriptLexerOr                            = 47
	JavaScriptLexerMultiplyAssign                = 48
	JavaScriptLexerDivideAssign                  = 49
	JavaScriptLexerModulusAssign                 = 50
	JavaScriptLexerPlusAssign                    = 51
	JavaScriptLexerMinusAssign                   = 52
	JavaScriptLexerLeftShiftArithmeticAssign     = 53
	JavaScriptLexerRightShiftArithmeticAssign    = 54
	JavaScriptLexerRightShiftLogicalAssign       = 55
	JavaScriptLexerBitAndAssign                  = 56
	JavaScriptLexerBitXorAssign                  = 57
	JavaScriptLexerBitOrAssign                   = 58
	JavaScriptLexerPowerAssign                   = 59
	JavaScriptLexerARROW                         = 60
	JavaScriptLexerNullLiteral                   = 61
	JavaScriptLexerBooleanLiteral                = 62
	JavaScriptLexerDecimalLiteral                = 63
	JavaScriptLexerHexIntegerLiteral             = 64
	JavaScriptLexerOctalIntegerLiteral           = 65
	JavaScriptLexerOctalIntegerLiteral2          = 66
	JavaScriptLexerBinaryIntegerLiteral          = 67
	JavaScriptLexerBigHexIntegerLiteral          = 68
	JavaScriptLexerBigOctalIntegerLiteral        = 69
	JavaScriptLexerBigBinaryIntegerLiteral       = 70
	JavaScriptLexerBigDecimalIntegerLiteral      = 71
	JavaScriptLexerBreak                         = 72
	JavaScriptLexerDo                            = 73
	JavaScriptLexerInstanceof                    = 74
	JavaScriptLexerTypeof                        = 75
	JavaScriptLexerCase                          = 76
	JavaScriptLexerElse                          = 77
	JavaScriptLexerNew                           = 78
	JavaScriptLexerVar                           = 79
	JavaScriptLexerCatch                         = 80
	JavaScriptLexerFinally                       = 81
	JavaScriptLexerReturn                        = 82
	JavaScriptLexerVoid                          = 83
	JavaScriptLexerContinue                      = 84
	JavaScriptLexerFor                           = 85
	JavaScriptLexerSwitch                        = 86
	JavaScriptLexerWhile                         = 87
	JavaScriptLexerDebugger                      = 88
	JavaScriptLexerFunction_                     = 89
	JavaScriptLexerThis                          = 90
	JavaScriptLexerWith                          = 91
	JavaScriptLexerDefault                       = 92
	JavaScriptLexerIf                            = 93
	JavaScriptLexerThrow                         = 94
	JavaScriptLexerDelete                        = 95
	JavaScriptLexerIn                            = 96
	JavaScriptLexerTry                           = 97
	JavaScriptLexerAs                            = 98
	JavaScriptLexerFrom                          = 99
	JavaScriptLexerGet                           = 100
	JavaScriptLexerSet                           = 101
	JavaScriptLexerClass                         = 102
	JavaScriptLexerEnum                          = 103
	JavaScriptLexerExtends                       = 104
	JavaScriptLexerSuper                         = 105
	JavaScriptLexerConst                         = 106
	JavaScriptLexerExport                        = 107
	JavaScriptLexerImport                        = 108
	JavaScriptLexerAsync                         = 109
	JavaScriptLexerAwait                         = 110
	JavaScriptLexerYield                         = 111
	JavaScriptLexerImplements                    = 112
	JavaScriptLexerStrictLet                     = 113
	JavaScriptLexerNonStrictLet                  = 114
	JavaScriptLexerPrivate                       = 115
	JavaScriptLexerPublic                        = 116
	JavaScriptLexerInterface                     = 117
	JavaScriptLexerPackage                       = 118
	JavaScriptLexerProtected                     = 119
	JavaScriptLexerStatic                        = 120
	JavaScriptLexerIdentifier                    = 121
	JavaScriptLexerStringLiteral                 = 122
	JavaScriptLexerBackTick                      = 123
	JavaScriptLexerCR                            = 124
	JavaScriptLexerWS                            = 125
	JavaScriptLexerLineTerminator                = 126
	JavaScriptLexerHtmlComment                   = 127
	JavaScriptLexerCDataComment                  = 128
	JavaScriptLexerUnexpectedCharacter           = 129
	JavaScriptLexerTemplateStringStartExpression = 130
	JavaScriptLexerTemplateStringAtom            = 131
)

// JavaScriptLexerERROR is the JavaScriptLexer channel.
const JavaScriptLexerERROR = 2

// JavaScriptLexerTEMPLATE is the JavaScriptLexer mode.
const JavaScriptLexerTEMPLATE = 1

func (l *JavaScriptLexer) Action(localctx antlr.RuleContext, ruleIndex, actionIndex int) {
	switch ruleIndex {
	case 0:
		l.HashBangLine_Action(localctx, actionIndex)

	case 9:
		l.OpenBrace_Action(localctx, actionIndex)

	case 11:
		l.CloseBrace_Action(localctx, actionIndex)

	case 121:
		l.StringLiteral_Action(localctx, actionIndex)

	case 122:
		l.BackTick_Action(localctx, actionIndex)

	case 129:
		l.BackTickInside_Action(localctx, actionIndex)

	default:
		panic("No registered action for: " + fmt.Sprint(ruleIndex))
	}
}

func (l *JavaScriptLexer) HashBangLine_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 0:
		l.IsStartOfFile()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *JavaScriptLexer) OpenBrace_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 1:
		l.ProcessOpenBrace()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *JavaScriptLexer) CloseBrace_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 2:
		l.ProcessCloseBrace()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *JavaScriptLexer) StringLiteral_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 3:
		l.ProcessStringLiteral()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *JavaScriptLexer) BackTick_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 4:
		l.IncreaseTemplateDepth()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *JavaScriptLexer) BackTickInside_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 5:
		l.DecreaseTemplateDepth()

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}

func (l *JavaScriptLexer) Sempred(localctx antlr.RuleContext, ruleIndex, predIndex int) bool {
	switch ruleIndex {
	case 4:
		return l.RegularExpressionLiteral_Sempred(localctx, predIndex)

	case 10:
		return l.TemplateCloseBrace_Sempred(localctx, predIndex)

	case 64:
		return l.OctalIntegerLiteral_Sempred(localctx, predIndex)

	case 111:
		return l.Implements_Sempred(localctx, predIndex)

	case 112:
		return l.StrictLet_Sempred(localctx, predIndex)

	case 113:
		return l.NonStrictLet_Sempred(localctx, predIndex)

	case 114:
		return l.Private_Sempred(localctx, predIndex)

	case 115:
		return l.Public_Sempred(localctx, predIndex)

	case 116:
		return l.Interface_Sempred(localctx, predIndex)

	case 117:
		return l.Package_Sempred(localctx, predIndex)

	case 118:
		return l.Protected_Sempred(localctx, predIndex)

	case 119:
		return l.Static_Sempred(localctx, predIndex)

	default:
		panic("No registered predicate for: " + fmt.Sprint(ruleIndex))
	}
}

func (p *JavaScriptLexer) RegularExpressionLiteral_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	this := p
	_ = this

	switch predIndex {
	case 0:
		return this.IsRegexPossible()

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (p *JavaScriptLexer) TemplateCloseBrace_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	this := p
	_ = this

	switch predIndex {
	case 1:
		return this.IsInTemplateString()

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (p *JavaScriptLexer) OctalIntegerLiteral_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	this := p
	_ = this

	switch predIndex {
	case 2:
		return !this.IsStrictMode()

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (p *JavaScriptLexer) Implements_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	this := p
	_ = this

	switch predIndex {
	case 3:
		return this.IsStrictMode()

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (p *JavaScriptLexer) StrictLet_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	this := p
	_ = this

	switch predIndex {
	case 4:
		return this.IsStrictMode()

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (p *JavaScriptLexer) NonStrictLet_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	this := p
	_ = this

	switch predIndex {
	case 5:
		return !this.IsStrictMode()

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (p *JavaScriptLexer) Private_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	this := p
	_ = this

	switch predIndex {
	case 6:
		return this.IsStrictMode()

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (p *JavaScriptLexer) Public_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	this := p
	_ = this

	switch predIndex {
	case 7:
		return this.IsStrictMode()

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (p *JavaScriptLexer) Interface_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	this := p
	_ = this

	switch predIndex {
	case 8:
		return this.IsStrictMode()

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (p *JavaScriptLexer) Package_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	this := p
	_ = this

	switch predIndex {
	case 9:
		return this.IsStrictMode()

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (p *JavaScriptLexer) Protected_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	this := p
	_ = this

	switch predIndex {
	case 10:
		return this.IsStrictMode()

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (p *JavaScriptLexer) Static_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	this := p
	_ = this

	switch predIndex {
	case 11:
		return this.IsStrictMode()

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

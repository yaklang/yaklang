// Code generated by "stringer -type=Kind -output=kind_stringer_generated.go"; DO NOT EDIT.

package ast

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[KindUnknown-0]
	_ = x[KindEndOfFile-1]
	_ = x[KindSingleLineCommentTrivia-2]
	_ = x[KindMultiLineCommentTrivia-3]
	_ = x[KindNewLineTrivia-4]
	_ = x[KindWhitespaceTrivia-5]
	_ = x[KindConflictMarkerTrivia-6]
	_ = x[KindNonTextFileMarkerTrivia-7]
	_ = x[KindNumericLiteral-8]
	_ = x[KindBigIntLiteral-9]
	_ = x[KindStringLiteral-10]
	_ = x[KindJsxText-11]
	_ = x[KindJsxTextAllWhiteSpaces-12]
	_ = x[KindRegularExpressionLiteral-13]
	_ = x[KindNoSubstitutionTemplateLiteral-14]
	_ = x[KindTemplateHead-15]
	_ = x[KindTemplateMiddle-16]
	_ = x[KindTemplateTail-17]
	_ = x[KindOpenBraceToken-18]
	_ = x[KindCloseBraceToken-19]
	_ = x[KindOpenParenToken-20]
	_ = x[KindCloseParenToken-21]
	_ = x[KindOpenBracketToken-22]
	_ = x[KindCloseBracketToken-23]
	_ = x[KindDotToken-24]
	_ = x[KindDotDotDotToken-25]
	_ = x[KindSemicolonToken-26]
	_ = x[KindCommaToken-27]
	_ = x[KindQuestionDotToken-28]
	_ = x[KindLessThanToken-29]
	_ = x[KindLessThanSlashToken-30]
	_ = x[KindGreaterThanToken-31]
	_ = x[KindLessThanEqualsToken-32]
	_ = x[KindGreaterThanEqualsToken-33]
	_ = x[KindEqualsEqualsToken-34]
	_ = x[KindExclamationEqualsToken-35]
	_ = x[KindEqualsEqualsEqualsToken-36]
	_ = x[KindExclamationEqualsEqualsToken-37]
	_ = x[KindEqualsGreaterThanToken-38]
	_ = x[KindPlusToken-39]
	_ = x[KindMinusToken-40]
	_ = x[KindAsteriskToken-41]
	_ = x[KindAsteriskAsteriskToken-42]
	_ = x[KindSlashToken-43]
	_ = x[KindPercentToken-44]
	_ = x[KindPlusPlusToken-45]
	_ = x[KindMinusMinusToken-46]
	_ = x[KindLessThanLessThanToken-47]
	_ = x[KindGreaterThanGreaterThanToken-48]
	_ = x[KindGreaterThanGreaterThanGreaterThanToken-49]
	_ = x[KindAmpersandToken-50]
	_ = x[KindBarToken-51]
	_ = x[KindCaretToken-52]
	_ = x[KindExclamationToken-53]
	_ = x[KindTildeToken-54]
	_ = x[KindAmpersandAmpersandToken-55]
	_ = x[KindBarBarToken-56]
	_ = x[KindQuestionToken-57]
	_ = x[KindColonToken-58]
	_ = x[KindAtToken-59]
	_ = x[KindQuestionQuestionToken-60]
	_ = x[KindBacktickToken-61]
	_ = x[KindHashToken-62]
	_ = x[KindEqualsToken-63]
	_ = x[KindPlusEqualsToken-64]
	_ = x[KindMinusEqualsToken-65]
	_ = x[KindAsteriskEqualsToken-66]
	_ = x[KindAsteriskAsteriskEqualsToken-67]
	_ = x[KindSlashEqualsToken-68]
	_ = x[KindPercentEqualsToken-69]
	_ = x[KindLessThanLessThanEqualsToken-70]
	_ = x[KindGreaterThanGreaterThanEqualsToken-71]
	_ = x[KindGreaterThanGreaterThanGreaterThanEqualsToken-72]
	_ = x[KindAmpersandEqualsToken-73]
	_ = x[KindBarEqualsToken-74]
	_ = x[KindBarBarEqualsToken-75]
	_ = x[KindAmpersandAmpersandEqualsToken-76]
	_ = x[KindQuestionQuestionEqualsToken-77]
	_ = x[KindCaretEqualsToken-78]
	_ = x[KindIdentifier-79]
	_ = x[KindPrivateIdentifier-80]
	_ = x[KindJSDocCommentTextToken-81]
	_ = x[KindBreakKeyword-82]
	_ = x[KindCaseKeyword-83]
	_ = x[KindCatchKeyword-84]
	_ = x[KindClassKeyword-85]
	_ = x[KindConstKeyword-86]
	_ = x[KindContinueKeyword-87]
	_ = x[KindDebuggerKeyword-88]
	_ = x[KindDefaultKeyword-89]
	_ = x[KindDeleteKeyword-90]
	_ = x[KindDoKeyword-91]
	_ = x[KindElseKeyword-92]
	_ = x[KindEnumKeyword-93]
	_ = x[KindExportKeyword-94]
	_ = x[KindExtendsKeyword-95]
	_ = x[KindFalseKeyword-96]
	_ = x[KindFinallyKeyword-97]
	_ = x[KindForKeyword-98]
	_ = x[KindFunctionKeyword-99]
	_ = x[KindIfKeyword-100]
	_ = x[KindImportKeyword-101]
	_ = x[KindInKeyword-102]
	_ = x[KindInstanceOfKeyword-103]
	_ = x[KindNewKeyword-104]
	_ = x[KindNullKeyword-105]
	_ = x[KindReturnKeyword-106]
	_ = x[KindSuperKeyword-107]
	_ = x[KindSwitchKeyword-108]
	_ = x[KindThisKeyword-109]
	_ = x[KindThrowKeyword-110]
	_ = x[KindTrueKeyword-111]
	_ = x[KindTryKeyword-112]
	_ = x[KindTypeOfKeyword-113]
	_ = x[KindVarKeyword-114]
	_ = x[KindVoidKeyword-115]
	_ = x[KindWhileKeyword-116]
	_ = x[KindWithKeyword-117]
	_ = x[KindImplementsKeyword-118]
	_ = x[KindInterfaceKeyword-119]
	_ = x[KindLetKeyword-120]
	_ = x[KindPackageKeyword-121]
	_ = x[KindPrivateKeyword-122]
	_ = x[KindProtectedKeyword-123]
	_ = x[KindPublicKeyword-124]
	_ = x[KindStaticKeyword-125]
	_ = x[KindYieldKeyword-126]
	_ = x[KindAbstractKeyword-127]
	_ = x[KindAccessorKeyword-128]
	_ = x[KindAsKeyword-129]
	_ = x[KindAssertsKeyword-130]
	_ = x[KindAssertKeyword-131]
	_ = x[KindAnyKeyword-132]
	_ = x[KindAsyncKeyword-133]
	_ = x[KindAwaitKeyword-134]
	_ = x[KindBooleanKeyword-135]
	_ = x[KindConstructorKeyword-136]
	_ = x[KindDeclareKeyword-137]
	_ = x[KindGetKeyword-138]
	_ = x[KindImmediateKeyword-139]
	_ = x[KindInferKeyword-140]
	_ = x[KindIntrinsicKeyword-141]
	_ = x[KindIsKeyword-142]
	_ = x[KindKeyOfKeyword-143]
	_ = x[KindModuleKeyword-144]
	_ = x[KindNamespaceKeyword-145]
	_ = x[KindNeverKeyword-146]
	_ = x[KindOutKeyword-147]
	_ = x[KindReadonlyKeyword-148]
	_ = x[KindRequireKeyword-149]
	_ = x[KindNumberKeyword-150]
	_ = x[KindObjectKeyword-151]
	_ = x[KindSatisfiesKeyword-152]
	_ = x[KindSetKeyword-153]
	_ = x[KindStringKeyword-154]
	_ = x[KindSymbolKeyword-155]
	_ = x[KindTypeKeyword-156]
	_ = x[KindUndefinedKeyword-157]
	_ = x[KindUniqueKeyword-158]
	_ = x[KindUnknownKeyword-159]
	_ = x[KindUsingKeyword-160]
	_ = x[KindFromKeyword-161]
	_ = x[KindGlobalKeyword-162]
	_ = x[KindBigIntKeyword-163]
	_ = x[KindOverrideKeyword-164]
	_ = x[KindOfKeyword-165]
	_ = x[KindQualifiedName-166]
	_ = x[KindComputedPropertyName-167]
	_ = x[KindTypeParameter-168]
	_ = x[KindParameter-169]
	_ = x[KindDecorator-170]
	_ = x[KindPropertySignature-171]
	_ = x[KindPropertyDeclaration-172]
	_ = x[KindMethodSignature-173]
	_ = x[KindMethodDeclaration-174]
	_ = x[KindClassStaticBlockDeclaration-175]
	_ = x[KindConstructor-176]
	_ = x[KindGetAccessor-177]
	_ = x[KindSetAccessor-178]
	_ = x[KindCallSignature-179]
	_ = x[KindConstructSignature-180]
	_ = x[KindIndexSignature-181]
	_ = x[KindTypePredicate-182]
	_ = x[KindTypeReference-183]
	_ = x[KindFunctionType-184]
	_ = x[KindConstructorType-185]
	_ = x[KindTypeQuery-186]
	_ = x[KindTypeLiteral-187]
	_ = x[KindArrayType-188]
	_ = x[KindTupleType-189]
	_ = x[KindOptionalType-190]
	_ = x[KindRestType-191]
	_ = x[KindUnionType-192]
	_ = x[KindIntersectionType-193]
	_ = x[KindConditionalType-194]
	_ = x[KindInferType-195]
	_ = x[KindParenthesizedType-196]
	_ = x[KindThisType-197]
	_ = x[KindTypeOperator-198]
	_ = x[KindIndexedAccessType-199]
	_ = x[KindMappedType-200]
	_ = x[KindLiteralType-201]
	_ = x[KindNamedTupleMember-202]
	_ = x[KindTemplateLiteralType-203]
	_ = x[KindTemplateLiteralTypeSpan-204]
	_ = x[KindImportType-205]
	_ = x[KindObjectBindingPattern-206]
	_ = x[KindArrayBindingPattern-207]
	_ = x[KindBindingElement-208]
	_ = x[KindArrayLiteralExpression-209]
	_ = x[KindObjectLiteralExpression-210]
	_ = x[KindPropertyAccessExpression-211]
	_ = x[KindElementAccessExpression-212]
	_ = x[KindCallExpression-213]
	_ = x[KindNewExpression-214]
	_ = x[KindTaggedTemplateExpression-215]
	_ = x[KindTypeAssertionExpression-216]
	_ = x[KindParenthesizedExpression-217]
	_ = x[KindFunctionExpression-218]
	_ = x[KindArrowFunction-219]
	_ = x[KindDeleteExpression-220]
	_ = x[KindTypeOfExpression-221]
	_ = x[KindVoidExpression-222]
	_ = x[KindAwaitExpression-223]
	_ = x[KindPrefixUnaryExpression-224]
	_ = x[KindPostfixUnaryExpression-225]
	_ = x[KindBinaryExpression-226]
	_ = x[KindConditionalExpression-227]
	_ = x[KindTemplateExpression-228]
	_ = x[KindYieldExpression-229]
	_ = x[KindSpreadElement-230]
	_ = x[KindClassExpression-231]
	_ = x[KindOmittedExpression-232]
	_ = x[KindExpressionWithTypeArguments-233]
	_ = x[KindAsExpression-234]
	_ = x[KindNonNullExpression-235]
	_ = x[KindMetaProperty-236]
	_ = x[KindSyntheticExpression-237]
	_ = x[KindSatisfiesExpression-238]
	_ = x[KindTemplateSpan-239]
	_ = x[KindSemicolonClassElement-240]
	_ = x[KindBlock-241]
	_ = x[KindEmptyStatement-242]
	_ = x[KindVariableStatement-243]
	_ = x[KindExpressionStatement-244]
	_ = x[KindIfStatement-245]
	_ = x[KindDoStatement-246]
	_ = x[KindWhileStatement-247]
	_ = x[KindForStatement-248]
	_ = x[KindForInStatement-249]
	_ = x[KindForOfStatement-250]
	_ = x[KindContinueStatement-251]
	_ = x[KindBreakStatement-252]
	_ = x[KindReturnStatement-253]
	_ = x[KindWithStatement-254]
	_ = x[KindSwitchStatement-255]
	_ = x[KindLabeledStatement-256]
	_ = x[KindThrowStatement-257]
	_ = x[KindTryStatement-258]
	_ = x[KindDebuggerStatement-259]
	_ = x[KindVariableDeclaration-260]
	_ = x[KindVariableDeclarationList-261]
	_ = x[KindFunctionDeclaration-262]
	_ = x[KindClassDeclaration-263]
	_ = x[KindInterfaceDeclaration-264]
	_ = x[KindTypeAliasDeclaration-265]
	_ = x[KindEnumDeclaration-266]
	_ = x[KindModuleDeclaration-267]
	_ = x[KindModuleBlock-268]
	_ = x[KindCaseBlock-269]
	_ = x[KindNamespaceExportDeclaration-270]
	_ = x[KindImportEqualsDeclaration-271]
	_ = x[KindImportDeclaration-272]
	_ = x[KindImportClause-273]
	_ = x[KindNamespaceImport-274]
	_ = x[KindNamedImports-275]
	_ = x[KindImportSpecifier-276]
	_ = x[KindExportAssignment-277]
	_ = x[KindExportDeclaration-278]
	_ = x[KindNamedExports-279]
	_ = x[KindNamespaceExport-280]
	_ = x[KindExportSpecifier-281]
	_ = x[KindMissingDeclaration-282]
	_ = x[KindExternalModuleReference-283]
	_ = x[KindJsxElement-284]
	_ = x[KindJsxSelfClosingElement-285]
	_ = x[KindJsxOpeningElement-286]
	_ = x[KindJsxClosingElement-287]
	_ = x[KindJsxFragment-288]
	_ = x[KindJsxOpeningFragment-289]
	_ = x[KindJsxClosingFragment-290]
	_ = x[KindJsxAttribute-291]
	_ = x[KindJsxAttributes-292]
	_ = x[KindJsxSpreadAttribute-293]
	_ = x[KindJsxExpression-294]
	_ = x[KindJsxNamespacedName-295]
	_ = x[KindCaseClause-296]
	_ = x[KindDefaultClause-297]
	_ = x[KindHeritageClause-298]
	_ = x[KindCatchClause-299]
	_ = x[KindImportAttributes-300]
	_ = x[KindImportAttribute-301]
	_ = x[KindPropertyAssignment-302]
	_ = x[KindShorthandPropertyAssignment-303]
	_ = x[KindSpreadAssignment-304]
	_ = x[KindEnumMember-305]
	_ = x[KindSourceFile-306]
	_ = x[KindBundle-307]
	_ = x[KindJSDocTypeExpression-308]
	_ = x[KindJSDocNameReference-309]
	_ = x[KindJSDocMemberName-310]
	_ = x[KindJSDocAllType-311]
	_ = x[KindJSDocNullableType-312]
	_ = x[KindJSDocNonNullableType-313]
	_ = x[KindJSDocOptionalType-314]
	_ = x[KindJSDocVariadicType-315]
	_ = x[KindJSDoc-316]
	_ = x[KindJSDocText-317]
	_ = x[KindJSDocTypeLiteral-318]
	_ = x[KindJSDocSignature-319]
	_ = x[KindJSDocLink-320]
	_ = x[KindJSDocLinkCode-321]
	_ = x[KindJSDocLinkPlain-322]
	_ = x[KindJSDocTag-323]
	_ = x[KindJSDocAugmentsTag-324]
	_ = x[KindJSDocImplementsTag-325]
	_ = x[KindJSDocDeprecatedTag-326]
	_ = x[KindJSDocPublicTag-327]
	_ = x[KindJSDocPrivateTag-328]
	_ = x[KindJSDocProtectedTag-329]
	_ = x[KindJSDocReadonlyTag-330]
	_ = x[KindJSDocOverrideTag-331]
	_ = x[KindJSDocCallbackTag-332]
	_ = x[KindJSDocOverloadTag-333]
	_ = x[KindJSDocParameterTag-334]
	_ = x[KindJSDocReturnTag-335]
	_ = x[KindJSDocThisTag-336]
	_ = x[KindJSDocTypeTag-337]
	_ = x[KindJSDocTemplateTag-338]
	_ = x[KindJSDocTypedefTag-339]
	_ = x[KindJSDocSeeTag-340]
	_ = x[KindJSDocPropertyTag-341]
	_ = x[KindJSDocSatisfiesTag-342]
	_ = x[KindJSDocImportTag-343]
	_ = x[KindSyntaxList-344]
	_ = x[KindJSTypeAliasDeclaration-345]
	_ = x[KindNotEmittedStatement-346]
	_ = x[KindPartiallyEmittedExpression-347]
	_ = x[KindCommaListExpression-348]
	_ = x[KindSyntheticReferenceExpression-349]
	_ = x[KindCount-350]
}

const _Kind_name = "KindUnknownKindEndOfFileKindSingleLineCommentTriviaKindMultiLineCommentTriviaKindNewLineTriviaKindWhitespaceTriviaKindConflictMarkerTriviaKindNonTextFileMarkerTriviaKindNumericLiteralKindBigIntLiteralKindStringLiteralKindJsxTextKindJsxTextAllWhiteSpacesKindRegularExpressionLiteralKindNoSubstitutionTemplateLiteralKindTemplateHeadKindTemplateMiddleKindTemplateTailKindOpenBraceTokenKindCloseBraceTokenKindOpenParenTokenKindCloseParenTokenKindOpenBracketTokenKindCloseBracketTokenKindDotTokenKindDotDotDotTokenKindSemicolonTokenKindCommaTokenKindQuestionDotTokenKindLessThanTokenKindLessThanSlashTokenKindGreaterThanTokenKindLessThanEqualsTokenKindGreaterThanEqualsTokenKindEqualsEqualsTokenKindExclamationEqualsTokenKindEqualsEqualsEqualsTokenKindExclamationEqualsEqualsTokenKindEqualsGreaterThanTokenKindPlusTokenKindMinusTokenKindAsteriskTokenKindAsteriskAsteriskTokenKindSlashTokenKindPercentTokenKindPlusPlusTokenKindMinusMinusTokenKindLessThanLessThanTokenKindGreaterThanGreaterThanTokenKindGreaterThanGreaterThanGreaterThanTokenKindAmpersandTokenKindBarTokenKindCaretTokenKindExclamationTokenKindTildeTokenKindAmpersandAmpersandTokenKindBarBarTokenKindQuestionTokenKindColonTokenKindAtTokenKindQuestionQuestionTokenKindBacktickTokenKindHashTokenKindEqualsTokenKindPlusEqualsTokenKindMinusEqualsTokenKindAsteriskEqualsTokenKindAsteriskAsteriskEqualsTokenKindSlashEqualsTokenKindPercentEqualsTokenKindLessThanLessThanEqualsTokenKindGreaterThanGreaterThanEqualsTokenKindGreaterThanGreaterThanGreaterThanEqualsTokenKindAmpersandEqualsTokenKindBarEqualsTokenKindBarBarEqualsTokenKindAmpersandAmpersandEqualsTokenKindQuestionQuestionEqualsTokenKindCaretEqualsTokenKindIdentifierKindPrivateIdentifierKindJSDocCommentTextTokenKindBreakKeywordKindCaseKeywordKindCatchKeywordKindClassKeywordKindConstKeywordKindContinueKeywordKindDebuggerKeywordKindDefaultKeywordKindDeleteKeywordKindDoKeywordKindElseKeywordKindEnumKeywordKindExportKeywordKindExtendsKeywordKindFalseKeywordKindFinallyKeywordKindForKeywordKindFunctionKeywordKindIfKeywordKindImportKeywordKindInKeywordKindInstanceOfKeywordKindNewKeywordKindNullKeywordKindReturnKeywordKindSuperKeywordKindSwitchKeywordKindThisKeywordKindThrowKeywordKindTrueKeywordKindTryKeywordKindTypeOfKeywordKindVarKeywordKindVoidKeywordKindWhileKeywordKindWithKeywordKindImplementsKeywordKindInterfaceKeywordKindLetKeywordKindPackageKeywordKindPrivateKeywordKindProtectedKeywordKindPublicKeywordKindStaticKeywordKindYieldKeywordKindAbstractKeywordKindAccessorKeywordKindAsKeywordKindAssertsKeywordKindAssertKeywordKindAnyKeywordKindAsyncKeywordKindAwaitKeywordKindBooleanKeywordKindConstructorKeywordKindDeclareKeywordKindGetKeywordKindImmediateKeywordKindInferKeywordKindIntrinsicKeywordKindIsKeywordKindKeyOfKeywordKindModuleKeywordKindNamespaceKeywordKindNeverKeywordKindOutKeywordKindReadonlyKeywordKindRequireKeywordKindNumberKeywordKindObjectKeywordKindSatisfiesKeywordKindSetKeywordKindStringKeywordKindSymbolKeywordKindTypeKeywordKindUndefinedKeywordKindUniqueKeywordKindUnknownKeywordKindUsingKeywordKindFromKeywordKindGlobalKeywordKindBigIntKeywordKindOverrideKeywordKindOfKeywordKindQualifiedNameKindComputedPropertyNameKindTypeParameterKindParameterKindDecoratorKindPropertySignatureKindPropertyDeclarationKindMethodSignatureKindMethodDeclarationKindClassStaticBlockDeclarationKindConstructorKindGetAccessorKindSetAccessorKindCallSignatureKindConstructSignatureKindIndexSignatureKindTypePredicateKindTypeReferenceKindFunctionTypeKindConstructorTypeKindTypeQueryKindTypeLiteralKindArrayTypeKindTupleTypeKindOptionalTypeKindRestTypeKindUnionTypeKindIntersectionTypeKindConditionalTypeKindInferTypeKindParenthesizedTypeKindThisTypeKindTypeOperatorKindIndexedAccessTypeKindMappedTypeKindLiteralTypeKindNamedTupleMemberKindTemplateLiteralTypeKindTemplateLiteralTypeSpanKindImportTypeKindObjectBindingPatternKindArrayBindingPatternKindBindingElementKindArrayLiteralExpressionKindObjectLiteralExpressionKindPropertyAccessExpressionKindElementAccessExpressionKindCallExpressionKindNewExpressionKindTaggedTemplateExpressionKindTypeAssertionExpressionKindParenthesizedExpressionKindFunctionExpressionKindArrowFunctionKindDeleteExpressionKindTypeOfExpressionKindVoidExpressionKindAwaitExpressionKindPrefixUnaryExpressionKindPostfixUnaryExpressionKindBinaryExpressionKindConditionalExpressionKindTemplateExpressionKindYieldExpressionKindSpreadElementKindClassExpressionKindOmittedExpressionKindExpressionWithTypeArgumentsKindAsExpressionKindNonNullExpressionKindMetaPropertyKindSyntheticExpressionKindSatisfiesExpressionKindTemplateSpanKindSemicolonClassElementKindBlockKindEmptyStatementKindVariableStatementKindExpressionStatementKindIfStatementKindDoStatementKindWhileStatementKindForStatementKindForInStatementKindForOfStatementKindContinueStatementKindBreakStatementKindReturnStatementKindWithStatementKindSwitchStatementKindLabeledStatementKindThrowStatementKindTryStatementKindDebuggerStatementKindVariableDeclarationKindVariableDeclarationListKindFunctionDeclarationKindClassDeclarationKindInterfaceDeclarationKindTypeAliasDeclarationKindEnumDeclarationKindModuleDeclarationKindModuleBlockKindCaseBlockKindNamespaceExportDeclarationKindImportEqualsDeclarationKindImportDeclarationKindImportClauseKindNamespaceImportKindNamedImportsKindImportSpecifierKindExportAssignmentKindExportDeclarationKindNamedExportsKindNamespaceExportKindExportSpecifierKindMissingDeclarationKindExternalModuleReferenceKindJsxElementKindJsxSelfClosingElementKindJsxOpeningElementKindJsxClosingElementKindJsxFragmentKindJsxOpeningFragmentKindJsxClosingFragmentKindJsxAttributeKindJsxAttributesKindJsxSpreadAttributeKindJsxExpressionKindJsxNamespacedNameKindCaseClauseKindDefaultClauseKindHeritageClauseKindCatchClauseKindImportAttributesKindImportAttributeKindPropertyAssignmentKindShorthandPropertyAssignmentKindSpreadAssignmentKindEnumMemberKindSourceFileKindBundleKindJSDocTypeExpressionKindJSDocNameReferenceKindJSDocMemberNameKindJSDocAllTypeKindJSDocNullableTypeKindJSDocNonNullableTypeKindJSDocOptionalTypeKindJSDocVariadicTypeKindJSDocKindJSDocTextKindJSDocTypeLiteralKindJSDocSignatureKindJSDocLinkKindJSDocLinkCodeKindJSDocLinkPlainKindJSDocTagKindJSDocAugmentsTagKindJSDocImplementsTagKindJSDocDeprecatedTagKindJSDocPublicTagKindJSDocPrivateTagKindJSDocProtectedTagKindJSDocReadonlyTagKindJSDocOverrideTagKindJSDocCallbackTagKindJSDocOverloadTagKindJSDocParameterTagKindJSDocReturnTagKindJSDocThisTagKindJSDocTypeTagKindJSDocTemplateTagKindJSDocTypedefTagKindJSDocSeeTagKindJSDocPropertyTagKindJSDocSatisfiesTagKindJSDocImportTagKindSyntaxListKindJSTypeAliasDeclarationKindNotEmittedStatementKindPartiallyEmittedExpressionKindCommaListExpressionKindSyntheticReferenceExpressionKindCount"

var _Kind_index = [...]uint16{0, 11, 24, 51, 77, 94, 114, 138, 165, 183, 200, 217, 228, 253, 281, 314, 330, 348, 364, 382, 401, 419, 438, 458, 479, 491, 509, 527, 541, 561, 578, 600, 620, 643, 669, 690, 716, 743, 775, 801, 814, 828, 845, 870, 884, 900, 917, 936, 961, 992, 1034, 1052, 1064, 1078, 1098, 1112, 1139, 1154, 1171, 1185, 1196, 1221, 1238, 1251, 1266, 1285, 1305, 1328, 1359, 1379, 1401, 1432, 1469, 1517, 1541, 1559, 1580, 1613, 1644, 1664, 1678, 1699, 1724, 1740, 1755, 1771, 1787, 1803, 1822, 1841, 1859, 1876, 1889, 1904, 1919, 1936, 1954, 1970, 1988, 2002, 2021, 2034, 2051, 2064, 2085, 2099, 2114, 2131, 2147, 2164, 2179, 2195, 2210, 2224, 2241, 2255, 2270, 2286, 2301, 2322, 2342, 2356, 2374, 2392, 2412, 2429, 2446, 2462, 2481, 2500, 2513, 2531, 2548, 2562, 2578, 2594, 2612, 2634, 2652, 2666, 2686, 2702, 2722, 2735, 2751, 2768, 2788, 2804, 2818, 2837, 2855, 2872, 2889, 2909, 2923, 2940, 2957, 2972, 2992, 3009, 3027, 3043, 3058, 3075, 3092, 3111, 3124, 3141, 3165, 3182, 3195, 3208, 3229, 3252, 3271, 3292, 3323, 3338, 3353, 3368, 3385, 3407, 3425, 3442, 3459, 3475, 3494, 3507, 3522, 3535, 3548, 3564, 3576, 3589, 3609, 3628, 3641, 3662, 3674, 3690, 3711, 3725, 3740, 3760, 3783, 3810, 3824, 3848, 3871, 3889, 3915, 3942, 3970, 3997, 4015, 4032, 4060, 4087, 4114, 4136, 4153, 4173, 4193, 4211, 4230, 4255, 4281, 4301, 4326, 4348, 4367, 4384, 4403, 4424, 4455, 4471, 4492, 4508, 4531, 4554, 4570, 4595, 4604, 4622, 4643, 4666, 4681, 4696, 4714, 4730, 4748, 4766, 4787, 4805, 4824, 4841, 4860, 4880, 4898, 4914, 4935, 4958, 4985, 5008, 5028, 5052, 5076, 5095, 5116, 5131, 5144, 5174, 5201, 5222, 5238, 5257, 5273, 5292, 5312, 5333, 5349, 5368, 5387, 5409, 5436, 5450, 5475, 5496, 5517, 5532, 5554, 5576, 5592, 5609, 5631, 5648, 5669, 5683, 5700, 5718, 5733, 5753, 5772, 5794, 5825, 5845, 5859, 5873, 5883, 5906, 5928, 5947, 5963, 5984, 6008, 6029, 6050, 6059, 6072, 6092, 6110, 6123, 6140, 6158, 6170, 6190, 6212, 6234, 6252, 6271, 6292, 6312, 6332, 6352, 6372, 6393, 6411, 6427, 6443, 6463, 6482, 6497, 6517, 6538, 6556, 6570, 6596, 6619, 6649, 6672, 6704, 6713}

func (i Kind) String() string {
	if i < 0 || i >= Kind(len(_Kind_index)-1) {
		return "Kind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Kind_name[_Kind_index[i]:_Kind_index[i+1]]
}

__DESC__ = "一个用于查看ZIP压缩包内部文件列表的工具，支持通过设置偏移量(offset)和限制数量(limit)进行分页阅览，适合处理包含大量文件的压缩包。"

__KEYWORDS__ = "file management,限制数量,zip,pagination,data retrieval,view files,文件列表,分页查询,file list,limit,archive,文件阅览,offset,files,zip解压,压缩文件管理,偏移量"

yakit.AutoInitYakit()
zipfile = cli.String("filepath", cli.setRequired(true), cli.setDefault("zip filepath u want to check"))
// zipfile = "/tmp/aaa.zip"
limit = cli.Int("limit", cli.setRequired(true), cli.setDefault(100), cli.setHelp("limited to view chunk in zipfile"))
offset = cli.Int("offset", cli.setRequired(true), cli.setDefault(0), cli.setHelp("if the zip if too large(have many files), change offset and chunk to view partially"))
cli.check()

if limit < 0 {
    limit = 100
    yakit.Info("limit cannot be zero, auto set to 100")
}

if offset < 0 {
    yakit.Error("offset cannot below zero")
    return
}

m = sync.NewMutex()

count = 0
err = zip.Recursive(zipfile, (isDir, name, info) => {
    if isDir {return nil}

    m.Lock()
    defer m.Unlock()
    defer recover()
    count++
    if count < offset {
        return
    }
    if count > offset + limit {
        return
    }
    yakit.Info("Find: %v - %v", name, info)
})
if err != nil {
    yakit.Error("ZIP Recursive failed: %v", err)
}
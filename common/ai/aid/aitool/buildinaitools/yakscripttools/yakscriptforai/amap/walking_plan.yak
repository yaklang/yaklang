__DESC__ = "一个基于高德地图API进行步行路径规划的工具，用户可以指定起点、终点和城市，工具将返回规划的多条步行路线及每条路线的总距离、总时长以及分步指南。"

__KEYWORDS__ = "步行导航,路径规划,高德地图,地图工具,导航工具,路线查询,出行助手"

ori = cli.String("origin",cli.setHelp("Starting point of the route planning"), cli.setRequired(true))
dst = cli.String("destination",cli.setHelp("Ending point of the route planning"), cli.setRequired(true))
city = cli.String("city",cli.setHelp("City where the route is located"))
cli.check()

res = amap.GetWalkingPlan(ori,dst,amap.city(city))~
route = res.Route

formatDistance = (meters) => {
    if meters == ""{
        return ""
    }
    meters = int(meters)
	if meters >= 1000 {
		return "%dkm" % (meters/1000)
	}
	return "%dm" % meters
}
formatDuration = (seconds) => {
    if seconds == ""{
        return ""
    }
    du = time.ParseDuration(seconds+"s")~
    return du.String()
}

log.Info("Found paths count: %d", len(route.Paths))

for i, path := range route.Paths {
    log.Info("Path %d - Distance: %s, Duration: %s", 
        i+1, formatDistance(path.Distance), formatDuration(path.Cost.Duration))
    
    log.Info("Path %d - Steps count: %d", i+1, len(path.Steps))
    
    for j, step := range path.Steps {
        log.Info("  Step %d - Instruction: %s, Distance: %s", 
            j+1, step.Instruction, formatDistance(step.StepDistance))
    }
}
headerKey = cli.String("key", cli.setRequired(true), cli.setVerboseName("Header Key"))
headerVal = cli.String("val", cli.setRequired(true), cli.setVerboseName("Header Value"))

keyword = cli.String("url-keyword", cli.setRequired(false), cli.setCliGroup("前提条件"), cli.setVerboseName("URL 前提条件"))

cli.check()

m = {}
lock = sync.NewRWMutex()

hijackHTTPRequest = func(isHttps, url, req, forward, drop) {
   if !url.Contains(keyword) {
         return
    }
    lock.Lock()
    m[PLUGIN_RUNTIME_ID] = true 
    lock.Unlock()
    forward(poc.ReplaceHTTPPacketHeader(req, headerKey, headerVal))
}
hijackSaveHTTPFlow = func(flow , modify, drop) {
    lock.RLock()
    ok = PLUGIN_RUNTIME_ID in m
    lock.RUnlock()
    if !ok {
        return 
    }
    flow.FromPlugin="修改 HTTP 请求 Header"
}

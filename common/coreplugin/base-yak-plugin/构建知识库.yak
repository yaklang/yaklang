yakit.AutoInitYakit()

# Input your code!

filePath := cli.FileNames("files", cli.setVerboseName("分析文件"),cli.setRequired(true))
kbName := cli.String("kbName", cli.setVerboseName("知识库名"),cli.setDefault("default"),cli.setRequired(true))
prompt := cli.String("prompt", cli.setVerboseName("补充提示词"))
entryLength := cli.Int("entrylen", cli.setVerboseName("知识条目长度限制"),cli.setDefault(1000))
khoplimit := cli.Int("klimit", cli.setVerboseName("实体子图数量限制"),cli.setDefault(300))
k := cli.Int("k", cli.setVerboseName("实体子图跳数"))
kmin := cli.Int("kmin",cli.setVerboseName("实体子图最小跳数"),cli.setDefault(2))
kmax := cli.Int("kmax", cli.setVerboseName("实体子图最大跳数"),cli.setDefault(4))
cli.check()

options := [
    rag.ctx(context.Background()),
    rag.statusCard(yakit.StatusCard),
    rag.entryLength(entryLength),
    rag.extraPrompt(prompt),
    rag.log(yakit.Info),
    rag.khopkMin(kmin),
    rag.khopLimit(khoplimit),
]

if kmax > kmin {
    options = append(options, rag.khopkMax(kmax))
}

if k > 0 {
    options = append(options, rag.khopk(k))
}

for path in filePath {
    yakit.StatusCard("building target", path)
    for i in rag.BuildCollectionFromFile(kbName, path,options...)~ {
        yakit.Output(i.KnowledgeTitle)
    }
}
yakit.AutoInitYakit()


ProgramName := cli.String("programName", 
    cli.setRequired(true),
    cli.setVerboseName("项目名"),
)

ruleContext := cli.Text("ruleContext", 
    cli.setRequired(true),
)

useCache := cli.Bool("useCache", cli.setDefault("false"))

cli.check()


prog, err := ssa.NewProgramFromDB(ProgramName)
if err !=nil{
    yakit.Error("load program %s from db err: %s",ProgramName, err)
    return 
}
opt = [
    syntaxflow.withContext(context.Background()), 
    syntaxflow.withProcess((f, s)=>{
        yakit.SetProgress(f)
        yakit.Info("%s",s)
    }), 
    syntaxflow.withSave(), 
]
if useCache {
    opt.Append(syntaxflow.withCache())
}
res, err := prog.SyntaxFlowWithError(ruleContext, opt...)

if err != nil {
    yakit.Error("exec syntaxflow rule:%s", err)
    return 
}
yakit.Output(res.GetResultID()) 
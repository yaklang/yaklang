key = cli.String("key", cli.setRequired(true), cli.setVerboseName("Cookie Key"))
value = cli.Text("value", cli.setRequired(true), cli.setVerboseName("水平权限"))
limitedDomain = cli.String("domain", cli.setRequired(false), cli.setVerboseName("域名"), cli.setCliGroup("限制条件（可选）"))


cli.check()

yakit.AutoInitYakit()
mirrorHTTPFlow = (https, url, req, rsp, body) => {
    skipped = false

    if limitedDomain != "" {
        host, _, _ = str.ParseStringToHostPort(url)
        skipped = !str.MatchAnyOfGlob(host, limitedDomain)
    }

    // if !skipped {
    //     //
    // }

    if skipped {
        return
    }

    freq = fuzz.MustHTTPRequest(req, fuzz.https(https))
    for i in str.ParseStringToLines(value) {
        reqBytes = freq.FuzzCookie(key, i).FirstHTTPRequestBytes()
        poc.HTTP(reqBytes, poc.https(true), poc.saveHandler(response => {
            response.Tags = append(response.Tags, "Cookie: " + i)
        }))
    }

}



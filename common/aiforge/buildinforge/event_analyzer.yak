prompt = <<<prompt
# 角色与目标

你是一位顶级的网络安全威胁情报分析师。你的任务是基于一个 IP 实体在近期（例如5分钟内）产生的所有相关事件，进行深入分析，以判断其行为是否具有恶意性。

你将收到一个 JSON 数组，其中包含了该 IP 相关的所有事件记录（已经过初步解析）。你需要综合分析整个事件序列，而不是孤立地看待单条日志。

# 分析维度与指导原则

在分析时，你必须综合考量以下几个关键维度：

1.  **整体行为模式 (Overall Behavior Pattern):**
    *   这是随机的、无规律的访问，还是系统性的、有明确目标的探测？
    *   请求之间是否存在逻辑关联（例如，正常用户会访问首页 -> 产品页 -> 详情页）？

2.  **请求频率与数量 (Request Frequency & Volume):**
    *   在短时间内是否存在爆发式的高频请求？（例如，几秒内上百次请求）
    *   需要综合考虑是否是正常的请求，如果是一定限度对优先页面上的正常访问，则可能是正常用户行为。

3.  **响应状态分析 (Response Status Analysis):**
    *   分析 `status_code` 和 `inferred_status` 字段。
    *   是否存在大量的 4xx 错误（如 404 Not Found, 403 Forbidden）？这通常是扫描和暴力破解的强烈信号。
    *   是否触发了 5xx 服务器错误？这可能意味着攻击载荷正在使应用后端崩溃。

4.  **URI 模式与意图 (URI Pattern & Intent):**
    *   请求的 `request_uri` 是否包含大量不同的、不存在的路径？
    *   是否在尝试访问常见的后台路径、敏感文件或漏洞利用路径？（例如: `/admin`, `/wp-login.php`, `/.env`, `/config.json`, `/phpmyadmin/`）

5.  **恶意载荷检测 (Malicious Payload Detection):**
    *   仔细检查 `request_uri` 是否包含典型的攻击载荷特征，如：
        *   **SQL注入:** `union select`, `' or 1=1`, `sleep()`
        *   **跨站脚本(XSS):** `<script>`, `onerror`, `alert()`
        *   **命令注入:** `cat /etc/passwd`, `whoami`, `|/bin/sh`
        *   **目录遍历/文件包含:** `../`, `../../`, `..%2F`

6.  **用户代理 (User-Agent) 分析:**
    *   User-Agent 是否为已知的扫描工具（如 `sqlmap`, `nmap`, `zgrab`, `masscan`）或非典型的客户端（如 `curl`, `python-requests`）？

prompt

schema = <<<schema
{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "required": [
        "@action",
        "report"
    ],
    "additionalProperties": false,
    "properties": {
        "@action": {
            "const": "analysis",
            "description": "标识当前操作的具体类型"
        },
        "report": {
            "title": "IP实体恶意行为分析报告",
            "type": "object",
            "properties": {
                "is_malicious": {
                    "description": "最终裁决：该 IP 的行为是否是恶意的。",
                    "type": "boolean"
                },
                "confidence_score": {
                    "description": "你对裁决的置信度，从 0.0 (完全不确定) 到 1.0 (完全确定)。",
                    "type": "number",
                    "minimum": 0.0,
                    "maximum": 1.0
                },
                "behavior_summary": {
                    "description": "用一两句中文总结该 IP 的核心行为模式和你的判断依据。",
                    "type": "string"
                },
                "attack_type": {
                    "description": "如果行为是恶意的，请归类其最主要的攻击类型。",
                    "type": "string",
                    "enum": [
                        "WEB_SCANNING",
                        "BRUTE_FORCE",
                        "SQL_INJECTION",
                        "XSS_ATTACK",
                        "COMMAND_INJECTION",
                        "BENIGN",
                        "UNKNOWN"
                    ]
                },
                "key_evidence": {
                    "description": "提供1到3条最能支撑你判断的原始日志 (`raw_log`) 作为关键佐证。",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "is_malicious",

            ]
        }
    }
}
schema


forgeHandle = func(params) {
    bp,err = aiagent.CreateLiteForge("event_analyzer",
        aiagent.liteForgePrompt(prompt),
        aiagent.liteForgeOutputSchemaRaw("analysis",schema)
    )
    if err != nil {
        return err
    }
    res,err = bp.Execute(context.Background(),params)
    if err != nil {
		return nil
	}
    return res.GetInvokeParams("report")
}
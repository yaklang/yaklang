__DESC__ = "根据用户输入的文本片段生成简洁的总结文本，可以限制总结的字数。"

__KEYWORDS__ = "文本总结,内容提炼,信息提取,字数限制,文本处理,片段总结"

textSnippent = cli.String("textSnippet", cli.setRequired(true), cli.setHelp("文本片段内容"))
limit = cli.Int("limit",cli.setDefault("50"),cli.setHelp("字数限制"))
cli.check()


prompt = <<<prompt
你是一个简单文本片段总结器，你正在总结一个文本片段。请遵循以下规则：
1. **信息完整**：用户输入必须全部总结，包括前情提要等信息，在不超过字数限制的情况下尽可能详细的总结信息。
2. **保持中立**：不添加原文未明确提及的推断。
3. **字数限制**：不超过 [%d] 字
prompt

schema = <<<schema
{
"$schema": "http://json-schema.org/draft-07/schema#",
"type": "object",
"required": ["@action", "summary"],
"additionalProperties": false,
"properties": {
    "@action": {
    "const": "summarize",
    "description": "标识当前操作的具体类型"
    },
    "summary": {
    "type": "string",
    "description": "总结的文本"
    }
}
}
schema


forgeHandle = func(params) {
    bp,err = aiagent.CreateLiteForge("fragment-summarizer",
        aiagent.liteForgePrompt(sprintf(prompt, limit)),
        aiagent.liteForgeOutputSchemaRaw("summarize",schema)
    )
    if err != nil {
        return err
    }
    res,err = bp.Execute(context.Background(),params)
    if err != nil {
		return nil
	}
	a = res.GetString("summary")
	println(a)
    return a
}
```json
{
  "@action": "plan",
  "query": "-",
  "main_task": "执行全面的主机体检扫描，发现系统健康问题、安全风险和性能瓶颈。",
  "main_task_goal": "通过系统化的检查方法，全面评估主机系统的健康状态，识别潜在问题并提供修复建议。",
  "tasks": [
    {
      "subtask_name": "获取操作系统类型",
      "subtask_goal": "使用 `ostype` 工具获取目标主机的操作系统类型。"
    },
    {
      "subtask_name": "系统配置检查",
      "subtask_goal": "检查目标主机的基本系统配置，包括操作系统类型、版本、架构、主机名、运行时间等基础信息，识别系统配置异常、版本过旧、架构不匹配等问题，为后续检查提供基础数据。"
    },
    {
      "subtask_name": "进程检查",
      "subtask_goal": "检查系统当前运行的进程状态，包括进程ID、进程名称、CPU和内存占用、启动时间、用户权限、进程状态等，识别异常进程、僵尸进程、高资源占用进程、可疑进程和未授权服务，评估进程安全性和系统性能影响。"
    },
    {
      "subtask_name": "网络连接检查",
      "subtask_goal": "检查系统当前的网络连接状态，包括TCP/UDP连接状态、本地地址、远程地址、连接状态、进程关联、网络接口信息等，识别异常连接、未授权连接、可疑外连、后门连接和潜在的网络安全隐患，评估网络安全风险。"
    },
    {
      "subtask_name": "文件系统检查",
      "subtask_goal": "检查系统文件系统状态，包括磁盘使用率、文件权限、关键文件完整性、敏感文件访问权限、文件系统类型、挂载点配置等，识别磁盘空间不足、权限配置不当、敏感文件暴露、文件系统异常等问题，评估文件系统安全性和存储性能。"
    },
    {
      "subtask_name": "Web服务配置检查",
      "subtask_goal": "检查系统Web服务配置，专注于nginx、java的web程序(如spring、weblogic)、apache三种主流Web服务。通过前面获取到的端口信息或进程信息，配合系统命令找出项目目录，检查Web服务器类型、版本、配置参数、虚拟主机设置、SSL/TLS配置、访问控制、日志配置等，识别配置不当、版本过旧、安全配置缺失、权限配置错误等问题，评估Web服务安全性和配置合规性。如果没有任何web服务则跳过检查"
    },
    {
      "subtask_name": "安全风险分析",
      "subtask_goal": "对主机的开放端口和Web服务进行全面的漏洞扫描，识别常见的安全漏洞、弱密码、配置缺陷、服务版本漏洞等，评估系统的安全风险等级，发现潜在的攻击面和安全隐患，为后续的安全加固和风险修复提供具体的目标。"
    },
    {
      "subtask_name": "体检报告生成",
      "subtask_goal": "汇总所有检查结果，按严重程度分类问题，评估系统整体健康状态，确定修复优先级。生成专业的主机体检报告，包含检查结果、问题分析、修复建议、优化方案等，为后续系统维护提供指导。"
    }
  ]
}
``` 
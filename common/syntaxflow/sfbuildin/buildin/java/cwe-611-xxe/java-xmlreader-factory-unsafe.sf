desc(
	title: "Check Java XMLReaderFactory.createXMLReader() Unsafe Use"
	title_zh: "检查 XMLReaderFactory.createXMLReader() 不安全使用",
	type: security
	risk: XXE
	reference: <<<URL
    https://docs.oracle.com/javase/8/docs/api/org/xml/sax/helpers/XMLReaderFactory.html
    https://cwe.mitre.org/data/definitions/611.html
URL
	desc: <<<TEXT
使用 `XMLReaderFactory.createXMLReader()` 而不设置适当的安全特性或属性可能会使应用程序容易受到 XML 外部实体 (XXE) 攻击。XXE 攻击允许攻击者访问本地文件系统、执行服务器上的任意代码或进行网络攻击。为了确保安全性，应当禁用外部实体解析，并限制对系统资源的访问。
TEXT
	rule_id: "310b2358-73f4-4be5-863c-0acbcf06c66b"
)

XMLReaderFactory?{<typeName>?{have:'org.xml.sax.helpers.XMLReaderFactory'}} as $factory;
$factory.createXMLReader() as $reader;
$reader./((parse*)|(read*))/() as $allCall;

$reader?{!.setFeature* && !.setProp* && !.allowT* }./((parse*)|(read*))/() as $vulCall;
// 有setFeature但是不是禁用dtd
$allCall - $vulCall as $toCheckCall
$reader?{./(setFeature|setProperty)/?(,*?{=="http://xml.org/sax/features/external-general-entities"},*?{==false})}as $excludeReader;
$reader?{./(setFeature|setProperty)/?(,*?{=="http://xml.org/sax/features/external-parameter-entities"},*?{==false})} as $excludeReader;
$reader?{./(setFeature|setProperty)/?(,*?{=="http://apache.org/xml/features/disallow-doctype-decl"},*?{==true})}  as $excludeReader;
$reader?{.setEntityResolver?(,* ?{!any:"DTDEntityResolver","ResourceEntityResolver","DefaultHandler","JBossEntityResolver"})}  as $excludeReader;
$excludeReader./((parse*)|(read*))/() as $excludeCall

$toCheckCall - $excludeCall as $vulCall;
alert $vulCall for {
    message: "检测到不安全的 XMLReaderFactory.createXMLReader() 使用，可能导致 XXE 漏洞。",
    level: "warning",
}

desc(
	lang: "java"
	alert_num: 1
	"file://unsafe.java": <<<UNSAFE
import org.xml.sax.SAXException;
import org.xml.sax.XMLReader;
import org.xml.sax.helpers.XMLReaderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;
import org.xml.sax.helpers.DefaultHandler;

public class XMLReaderFactoryUnsafe {
    public void parseXml(String xml) {
        try {
            XMLReader reader = XMLReaderFactory.createXMLReader();
            reader.setContentHandler(new DefaultHandler());
            reader.parse(xml);
        } catch (SAXException | ParserConfigurationException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
UNSAFE
)

desc(
	lang: "java"
	"safefile://safe.java": <<<SAFE
import org.xml.sax.SAXException;
import org.xml.sax.XMLReader;
import org.xml.sax.helpers.XMLReaderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;
import org.xml.sax.helpers.DefaultHandler;

public class XMLReaderFactorySafe {
    public void parseXml(String xml) {
        try {
            XMLReader reader = XMLReaderFactory.createXMLReader();
            reader.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
            reader.setContentHandler(new DefaultHandler());
            reader.parse(xml);
        } catch (SAXException | ParserConfigurationException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }

    }
}
SAFE
)

desc(
	lang: "java"
	"safefile://safe2.java": <<<SAFE
import org.xml.sax.SAXException;
import org.xml.sax.XMLReader;
import org.xml.sax.helpers.XMLReaderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;
import org.xml.sax.helpers.DefaultHandler;

public class XMLReaderFactorySafe {
    public void parseXml(String xml) {
        try {
            XMLReader reader = XMLReaderFactory.createXMLReader();
            reader.setFeature("http://xml.org/sax/features/external-general-entities", false);
            reader.setContentHandler(new DefaultHandler());
            reader.parse(xml);
        } catch (SAXException | ParserConfigurationException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }

    }
}
SAFE
)

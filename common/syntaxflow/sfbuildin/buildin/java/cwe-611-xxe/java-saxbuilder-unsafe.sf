desc(
    title: "Find SAXBuilder() Unsafe Use in Context Sink",
    title_zh: "SAXBuilder 未明确设置安全策略（.setFeature(...)）",
    type: vuln,
    desc: <<<TEXT
SAXBuilder 类在未明确设置安全策略的情况下使用，可能会导致 XML 外部实体（XXE）漏洞。XXE 漏洞允许攻击者利用漏洞应用程序解析外部实体，从而可能导致信息泄露、服务器资源消耗、远程代码执行等风险。建议在使用 SAXBuilder 时，通过调用 `.setFeature` 方法明确禁用外部实体解析，例如 `saxBuilder.setFeature("http://xml.org/sax/features/external-general-entities", false)` 和 `saxBuilder.setFeature("http://xml.org/sax/features/external-parameter-entities", false)`，以确保解析器的安全性。
TEXT
)

.build?{<getObject>}<getObject> as $builder
check $builder;

$builder?{<typeName>?{have: SAXBuilder} && !.setFeature* }./((build*)|(parse*))/() as $vulnCall;
check $vulnCall;

alert $vulnCall for {
    message: "SAXBuilder() Unsafe Use in Context Sink",
    risk: "xxe",
    level: "warning",
}

desc(
    lang: "java",
    alert_num:1,
    "file://unsafe.java": <<<UNSAFE
package com.example.sax;
public class SAXBuilderUnsafe {
    public void parseXml(String xml) {
        SAXBuilder builder = new SAXBuilder();
        try {
            Document doc = builder.build(new StringReader(xml));
            Element root = doc.getRootElement();
            System.out.println(root.getName());
        } catch (JDOMException | IOException e) {
            e.printStackTrace();
        }
    }
}
UNSAFE
)

desc(
    lang: "java",
    "file://safefile.java": <<<SAFE
import org.jdom2.Document;
import org.jdom2.Element;
import org.jdom2.input.SAXBuilder;
import org.xml.sax.XMLReader;
import javax.xml.parsers.SAXParserFactory;
import org.xml.sax.Attributes;
import org.xml.sax.helpers.XMLFilterImpl;

public class SafeSAXBuilderExample {
    public static void main(String[] args) {
        try {
            SAXBuilder saxBuilder = new SAXBuilder();
            saxBuilder.setFeature("http://xml.org/sax/features/external-general-entities", false);
            saxBuilder.setFeature("http://xml.org/sax/features/external-parameter-entities", false);
            Document document = saxBuilder.build("example.xml");
            Element root = document.getRootElement();
            System.out.println(root.getName());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
SAFE
)
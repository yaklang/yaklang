desc(
	title: "Find Java Weak Encryption Insufficient Key Size"
	title_zh: "查找Java弱加密 - 密钥长度不足",
	type: security
	risk: 'risky_crypt'
	level: low
	desc: <<<TEXT
   该规则是用于检测Java代码中使用RSAKeyGenParameterSpec类初始化RSA密钥时，如果密钥长度小于2048位，就会告警。这是为了防止使用不足的密钥长度导致加密强度不足，从而容易受到暴力破解攻击。开发者应该确保遵循推荐的密钥长度，以保障加密安全。
TEXT
	rule_id: "238e7158-0746-4178-9d00-36ff473eeafd"
)

RSAKeyGenParameterSpec?{<typeName>?{have:'java.security.spec.RSAKeyGenParameterSpec'}}(,* as $keySize);
$keySize#{
    include:`* ?{opcode:const}`
}-> as $size;
$size in (,2048) as $risk;
alert $risk for{
    message:"发现Java代码中使用不足2048位的RSA密钥长度",
    solution:"当前密码学指南建议，使用RSA算法时，密钥长度至少应为2048位。开发者应该确保遵循推荐的密钥长度，以保障加密安全。",
}

desc(
	lang:java
	alert_num:1
	'file://unsafe.java': <<<EOF
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.NoSuchAlgorithmException;
import java.security.spec.RSAKeyGenParameterSpec;
import java.math.BigInteger;

public class InsecureRSAKeyGeneration {
    public static void main(String[] args) {
        try {
            // 使用1024位的密钥长度生成RSA密钥对
            KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("RSA");
            RSAKeyGenParameterSpec spec = new RSAKeyGenParameterSpec(1024, BigInteger.valueOf(65537));
            keyPairGenerator.initialize(spec); // 不安全的密钥长度

            KeyPair keyPair = keyPairGenerator.generateKeyPair();

            // 这里可以继续使用生成的密钥对进行加密操作
            // ...

        } catch (NoSuchAlgorithmException | InvalidAlgorithmParameterException e) {
            e.printStackTrace();
        }
    }
}
EOF
)

desc(
	lang:java
	'safefile://safe.java': <<<EOF
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.NoSuchAlgorithmException;
import java.security.spec.RSAKeyGenParameterSpec;
import java.math.BigInteger;

public class SecureRSAKeyGeneration {
    public static void main(String[] args) {
        try {
            // 使用2048位的密钥长度生成RSA密钥对
            KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("RSA");
            RSAKeyGenParameterSpec spec = new RSAKeyGenParameterSpec(2048, BigInteger.valueOf(65537));
            keyPairGenerator.initialize(spec); // 安全的密钥长度

            KeyPair keyPair = keyPairGenerator.generateKeyPair();

            // 这里可以继续使用生成的密钥对进行加密操作
            // ...

        } catch (NoSuchAlgorithmException | InvalidAlgorithmParameterException e) {
            e.printStackTrace();
        }
    }
}
EOF
)

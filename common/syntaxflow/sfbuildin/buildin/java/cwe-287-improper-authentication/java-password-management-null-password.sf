desc(
    title:'Check Java Password Management Using Null Password',
    title_zh:'检测Java密码管理中使用空密码',
    type: security,
    desc: <<<TEXT
该审计规则旨在识别Java代码中使用空密码的情况。在密码管理中，空密码是指没有设置密码或者密码为空的情况。使用空密码可能会导致安全漏洞，因为攻击者可以直接登录系统或者获取敏感信息。建议开发者在密码管理中避免使用空密码。
TEXT
)

// new PasswordCredential(null, "user_password");
PasswordCredential?{<typeName>?{have:'javax.security.auth.callback.PasswordCredential'}}(*<slice(index=2)> as $password);

// System.setProperty("password", null);
System.setProperty?{<typeName>?{have:'java.lang'}}(*<slice(index=2)> as $password);

// new PasswordAuthentication(null, "user_password");
PasswordAuthentication?{<typeName>?{have:'java.net.PasswordAuthentication'}}(*<slice(index=2)> as $password);

// PasswordCallback.setPassword(null);
PasswordCallback.setPassword?{<typeName>?{have:'javax.security.auth.callback.PasswordCallback'}}(*<slice(index=1)> as $password);

// KeyStore.getKey("password", null);
// KeyStore.engineGetKey("password", null);
.engineGetKey?{<typeName>?{have:'java.security'}}(*<slice(index=2)> as $password);
.getKey?{<typeName>?{have:'java.security'}}(*<slice(index=2)> as $password);

// KeyStore.load(inputStream, null);
// KeyStore.engineLoad(inputStream, null);
.engineLoad?{<typeName>?{have:'java.security'}}(*<slice(index=1)> as $password);
.load?{<typeName>?{have:'java.security'}}(*<slice(index=2)> as $password);

// KeyStore.store(outputStream, null);
// KeyStore.engineStore(outputStream, null);
.engineStore?{<typeName>?{have:'java.security'}}(*<slice(index=2)> as $password);
.store?{<typeName>?{have:'java.security'}}(*<slice(index=2)> as $password);

// KeyStore.setKeyEntry("alias", null, null);
// KeyStore.engineSetKeyEntry("alias", null, null);
.engineSetKeyEntry?{<typeName>?{have:'java.security'}}(*<slice(index=2)> as $password);
.setKeyEntry?{<typeName>?{have:'java.security'}}(*<slice(index=2)> as $password);

// KeyStore.getInstance(new File("path/to/keystore"), null);
.getInstance?{<typeName>?{have:'java.security'}}(*<slice(index=2)> as $password)

$password ?{*#{
    include:`*?{opcode:const}?{have:'nil'}`
}->} as $risk;

alert $risk for {
    message:"发现Java代码中使用空密码",
    risk:'auth-bypass',
    level:middle,
}

desc{
    lang:'java',
    alert_num:13,
    "file://unsafe.java":<<<EOF
package com.example;
import javax.security.auth.callback.PasswordCallback;
import javax.security.auth.callback.PasswordCredential;
import java.net.PasswordAuthentication;
import java.security.KeyStore;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;

class Demo{
    public void test(){
        // 漏洞点：明文传递 null 作为密码
        new PasswordCredential("a", null);
        System.setProperty("password", null);
        new PasswordAuthentication("a", null);
        PasswordCallback.setPassword(null);
        KeyStore keyStore = KeyStore.getInstance("JKS");
        keyStore.getKey("password", null);
        keyStore.engineGetKey("password", null);
        keyStore.load(new FileInputStream("keystore"), null);
        keyStore.engineLoad(new FileInputStream("keystore"), null);
        keyStore.store(new FileOutputStream("keystore"), null);
        keyStore.engineStore(new FileOutputStream("keystore"), null);
        keyStore.setKeyEntry("alias", null, null);
        keyStore.engineSetKeyEntry("alias", null, null);
        keyStore.getInstance(new File("path/to/keystore"), null);
    }
}
EOF
}
desc(
	title: "Check Java EE's XSS Vulnerability"
	title_zh: "检测Java EE的XSS漏洞",
	type: vuln
	risk: XSS
	level: high
	desc: <<<TEXT
跨站脚本攻击（XSS）是一种常见的安全漏洞，攻击者通过在应用程序中注入恶意脚本，能够在其他用户的浏览器中执行这些脚本。在Java EE应用程序中，如果开发者未对用户输入进行适当的转义处理，直接将其输出到HTML页面中，就会导致XSS漏洞。攻击者可以利用这个漏洞窃取用户的敏感信息、进行会话劫持或执行其他恶意操作。因此，开发人员应该对用户输入进行严格的验证和转义，以防止XSS攻击。
TEXT
	rule_id: "00b097ac-f408-4a9b-b2e3-88b5c2a0fe3e"
)

<javaUnescapeOutput> as $sink;
check $sink then "发现JSP中存在未转义的输出"
<include("java-servlet-param")> as $source;
<include('java-escape-method')> as $filter

$source<getCallee()><getObject()>as $req;
$sink #{
    include: `* & $req`,
    include:`*...setAttribute(,* as $attribute)`,
    exclude:`* <getCallee> & $filter`
}-> as $result;
alert $result for {
    message: "Find Java EE's XSS Vulnerability",
    type: vuln,
    level: high,
};

desc(
	alert_min:1
	lang: "java"
	'file://xss-vulnerable.jsp': <<<EOF
<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<html>
<head>
    <title>XSS Vulnerability Example</title>
</head>
<body>
    <h2>User Input:</h2>
    <div>${sessionScope.userInput}</div>
</body>
</html>
EOF
	'file://servletDemo.java': <<<EOF
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;

public class XSSVulnerableServlet extends HttpServlet {
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String userInput = request.getParameter("input");
        request.setAttribute("userInput", userInput);
       request.getRequestDispatcher("/xss-vulnerable.jsp").forward(request, response);
    }
}
EOF
)



desc(
	alert_num:1
	lang: "java"
	'file://web/jsp/messages/seemessages.jsp': <<<EOF
<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<%@page import="java.util.Iterator" %>
<%@page import="java.util.ArrayList" %>
<%@page import="entity.Message" %>
<%@page import="java.util.ArrayList" %>
<html>
<head>
    <title>showmessages</title>
</head>
<body>
<h2>Show Messages</h2>
<table border=1 cellspacing="0">
    <tr>
        <th>留言人姓名</th>
        <th>留言时间</th>
        <th>留言标题</th>
        <th>留言内容</th>
    </tr>
    <%
        ArrayList<Message> all = new ArrayList();
        all = (ArrayList) session.getAttribute("all_messages");
        if (all != null) {
            Iterator it = all.iterator();
            while (it.hasNext()) {
                Message ms = (Message) it.next();
    %>
    <tr>
        <td><%= ms.getUsername() %>
        </td>
        <td><%= ms.getTime().toString() %>
        </td>
        <td><%= ms.getTitle() %>
        </td>
        <td><%= ms.getMessage() %>
        </td>
    </tr>
    <%
            }
        }
    %>
</table>
</body>
</html>
EOF
	'file://web/servlet/ShowMessagesServlet.java': <<<EOF
 package org.example;


 import dao.MessagesDao;
 import entity.Message;

 import javax.servlet.ServletException;
 import javax.servlet.annotation.WebServlet;
 import javax.servlet.http.HttpServlet;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
 import javax.servlet.http.HttpSession;
 import java.io.IOException;
 import java.util.ArrayList;

 @WebServlet(name = "ShowMessagesServlet")
 public class ShowMessagesServlet extends HttpServlet {
     protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
         // 解决乱码
         request.setCharacterEncoding("UTF-8");
         response.setContentType("text/html;charset=UTF-8");

         // 创建session Dao模型
         HttpSession session = request.getSession();
         MessagesDao messagesDao = new MessagesDao();

         //获取留言板表中全部数据 装在list里面，并放到Session中
         ArrayList<Message> all_messages = messagesDao.getAllMessages();
         session.setAttribute("all_messages", all_messages);


         //get path
         String servletPath = request.getServletPath();

         if(servletPath.equals("/ShowMessagesServlet")){
             request.getRequestDispatcher("/jsp/messages/seemessages.jsp").forward(request, response);
         }else if(servletPath.equals("/ShowMessagesServlet2")){
             request.getRequestDispatcher("/jsp/messages/seemessages2.jsp").forward(request, response);
         }
     }
     protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
         doPost(request,response);
     }
 }
EOF
)


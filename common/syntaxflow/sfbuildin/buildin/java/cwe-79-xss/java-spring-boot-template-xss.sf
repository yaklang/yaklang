desc(
    title: "Check Java Spring Boot's Template Language XSS Vulnerability",
    title_zh: "检测Java Spring Boot框架模板语言XSS漏洞",
    type: vuln,
    risk: "xss",
    desc: <<<TEXT
跨站脚本攻击（XSS）是一种安全漏洞，允许攻击者将恶意脚本注入到其他用户查看的页面中。在Java Spring Boot应用程序中，如果模板语言（如Freemarker、Thymeleaf等）的输出未进行适当转义，攻击者可以利用此漏洞注入恶意脚本，从而窃取用户数据、劫持用户会话或执行其他恶意操作。建议对模板语言中的输出进行严格的转义处理，以防止XSS攻击。
TEXT
)

<javaUnescapeOutput> as $sink;
check $sink then "发现模板语言中存在未转义的输出"
<include('java-spring-param')>?{!<typeName>?{have:'org.springframework.ui.Model'}} as $input;
Model?{opcode:param  && <typeName>?{have:'org.springframework.ui.Model'}} as $model;
$sink #{
    until: `<self> & $model`,
}->as $sinkModel;

$sinkModel.addAttribute(,,* as $attribute);
$attribute & $input ->as $res;

alert $res for {
    message: "Find Java Spring Boot's Template Language XSS Vulnerability",
    type: vuln,
    level: high,
};

desc(
    alert_min:1,
    lang: "java",
    'file://src/main/resource/greeting.ftl': <<<EOF
    <!DOCTYPE html>
    <html>
    <head>
        <title>Greeting</title>
    </head>
    <body>
        <h1>Hello, ${name}!</h1>
    </body>
    </html>
    EOF,
    'file://application.properties': <<<EOF
spring.freemarker.enabled=true
spring.freemarker.suffix=.ftl
spring.freemarker.charset=UTF-8
spring.freemarker.content-type=text/html
spring.freemarker.check-template-location=true
spring.freemarker.cache=false
EOF,
    'file://controller.java': <<<EOF
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;

@Controller
public class GreetingController {

    @GetMapping("/greeting")
       public String submit(@RequestParam("input") String input, Model model) {
           model.addAttribute("userInput", input);
           return "greeting";
       }
}
EOF,
);
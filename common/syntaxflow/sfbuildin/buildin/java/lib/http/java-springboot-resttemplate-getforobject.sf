desc(
    title: "Find Java SpringBoot new RestTemplate().getForObject",
    type: audit,
    level: low,
    lib: 'java-spring-rest-template-use',
    desc: <<<TEXT
使用 `new RestTemplate().getForObject` 方法可能会导致安全漏洞，尤其是当传入的URL参数未经充分验证时，可能会引发服务器端请求伪造（SSRF）攻击。SSRF漏洞允许攻击者通过应用服务器向内部或受限资源发起请求，从而可能暴露敏感信息或进行进一步攻击。建议对传入的URL参数进行严格的验证和清理，或使用更安全的替代方案，如使用Spring Cloud OpenFeign。
TEXT
)

RestTemplate?{<fullTypeName>?{have: 'springframework.web.client'}}().getForObject(,* as $output);
alert $output;

desc(
lang: java,
'file://a.java': <<<CODE
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

@RestController
public class SsrfVulnerableController {

    @GetMapping("/fetch-url")
    public String fetchUrl(@RequestParam("url") String url) {
        try {
            RestTemplate restTemplate = new RestTemplate();
            String result = restTemplate.getForObject(url, String.class);
            return result;
        } catch (Exception e) {
            return "Error: " + e.getMessage();
        }
    }
}
CODE
)
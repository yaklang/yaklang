desc(
	title_zh: "检测Java java.net.InetAddress 进行DNS查询"
	title: "Check Java java.net.InetAddress DNS Lookup"
	risk:"api-abuse"
	reference: <<<REFERENCE
[CWE-247: Reliance on DNS Lookups in a Security Decision](https://cwe.mitre.org/data/definitions/247.html)
[Oracle JavaDocs: java.net.InetAddress](https://docs.oracle.com/javase/8/docs/api/java/net/InetAddress.html)
REFERENCE
	description: <<<DESCRIPTION

DESCRIPTION
	solution: <<<SOLUTION
### 修复建议

1. **避免在安全决策中依赖DNS查找结果**
   不要使用`java.net.InetAddress`的`getHostName()`、`getCanonicalHostName()`等方法的结果来作为认证或授权的依据。IP地址本身也可能因网络配置或转发而存在不确定性。

2. **使用更安全的身份验证和授权机制**
   - 考虑使用基于证书的身份验证（如SSL/TLS客户端证书）。
   - Implement robust user authentication mechanisms (e.g., username/password, OAuth, SAML).
   - 基于来源IP的限制，应谨慎使用，并结合其他安全措施。

3. **进行适当的输入验证**
   对所有用户提供的输入（包括IP地址或主机名）进行严格的验证和清理，以免被用于其他漏洞利用。

4. **修复代码示例（针对上述触发场景）**
   避免依赖主机名进行认证。如果必须限制来自特定网络的访问，考虑使用更可靠的IP地址范围限制，而不是依赖反向DNS。

   ```java
   import java.net.InetAddress;
   import java.net.UnknownHostException;
   import java.io.IOException;

   public class SaferAuthExample {
       public void authenticateClient(String clientIP) {
           try {
               InetAddress addr = InetAddress.getByName(clientIP);
               if (isInInternalNetwork(addr)) {
                   System.out.println("认证成功！来源IP在内部网段。");
                   grantAccess();
               } else {
                   System.out.println("认证失败！来源IP不在内部网段。");
                   denyAccess();
               }
           } catch (UnknownHostException e) {
               System.out.println("认证失败！无法解析IP。");
               denyAccess();
           } catch (IOException e) {
               e.printStackTrace();
               denyAccess();
           }
       }

       private boolean isInInternalNetwork(InetAddress addr) {
           return addr.isSiteLocalAddress();
       }

       private void grantAccess() { /* ... */ }
       private void denyAccess() { /* ... */ }
   }
   ```
   **请注意**：仅仅基于IP地址进行认证也不总是完全安全的，因为IP地址可以被欺骗或通过代理转发。最安全的做法是结合多种认证和授权机制。
SOLUTION
	rule_id: "7501f545-a313-4bb7-b6bb-48aab80cb284"
)

InetAddress?{<typeName>?{have:'java.net'}}./(get.*By.*|getLocalHost|getLoopbackAddress)/ as $weak;
alert $weak for {
	title: "Check Java java.net.InetAddress DNS Lookup",
	title_zh: "检测Java java.net.InetAddress 进行DNS查询",
	level: "low",
	message: "发现Java java.net.InetAddress 进行DNS查询",
	risk: "api-abuse",
}


desc(
	lang:java
	alert_num:1
	"file://demo.java":<<<CODE
    import java.net.InetAddress;
    import java.io.IOException;

    public class UnsafeAuthExample {
        public void authenticateClient(String clientIP) {
            try {
                // 根据客户端 IP 获取主机名
                InetAddress addr = InetAddress.getByName(clientIP);
                String hostname = addr.getHostName();

                // 基于主机名进行认证（不安全）
                if (hostname.endsWith(".trusted-domain.com")) {
                    System.out.println("认证成功！");
                    grantAccess();
                } else {
                    System.out.println("认证失败！");
                    denyAccess();
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

    }
CODE
)

desc(
	title: "Audit Java Thymeleaf Application Config"
	type: audit
	severity: low
	desc: <<<DESC
### 规则目的
该规则用于审计Spring Boot应用程序配置文件中是否存在Thymeleaf模板引擎的配置。Thymeleaf是一种用于Web和独立环境的现代服务器端Java模板引擎，能够处理HTML、XML、JavaScript、CSS甚至纯文本。

### 规则详细
1. **检测目标**
   规则主要检测`application.properties`或其他Spring Boot配置文件中与`spring.thymeleaf.*`相关的配置项。

2. **审计目的**
   审计这些配置的目的是确保Thymeleaf的使用符合安全最佳实践和性能要求，例如：
    - **缓存管理 (`spring.thymeleaf.cache`)**: 在生产环境中应启用缓存以提高性能，但在开发环境中可能需要禁用以便实时查看修改。不当的缓存配置可能导致部署后的模板更新不生效或开发阶段性能低下。
    - **模板路径 (`spring.thymeleaf.prefix`, `spring.thymeleaf.suffix`)**: 配置模板文件的查找路径和文件后缀。错误的路径配置可能导致模板无法加载，甚至暴露敏感文件系统结构（尽管这种风险相对较低）。应将模板文件放在安全的、不可直接访问的目录下，例如`classpath:/templates/`。
    - **模式 (`spring.thymeleaf.mode`)**: 指定模板解析的模式（如 `HTML`, `XML`, `TEXT`, `JAVASCRIPT`, `CSS`, `RAW`）。根据内容选择正确的模式非常重要，特别是对于 `JAVASCRIPT` 和 `CSS` 模式，Thymeleaf 提供了特定的处理以防止潜在的注入问题。
    - **编码 (`spring.thymeleaf.encoding`)**: 设置模板文件的编码。一致的编码设置可以避免乱码问题。
    - **内容类型 (`spring.thymeleaf.content-type`)**: 设置响应头的 `Content-Type`。正确的 `Content-Type` 有助于浏览器正确解析内容。

尽管本规则标记为低严重度，因为它本身不直接指示一个漏洞，但正确的Thymeleaf配置对于维护应用程序的安全性和性能至关重要。审计这些配置项有助于识别潜在的配置错误，预防未来的漏洞或性能瓶颈。
DESC
	rule_id: "d2434f8f-e41c-447d-a900-3823e56248c8"
	title_zh: "审计Java Thymeleaf应用程序配置"
	solution: <<<SOLUTION
### 修复建议

#### 1. 确保缓存配置正确
在生产环境中启用缓存以提高性能，在开发环境中禁用缓存以便实时查看修改。
```java
// application.properties示例
spring.thymeleaf.cache=true
```

#### 2. 配置安全的模板路径
确保模板文件放在安全的、不可直接访问的目录下，例如`classpath:/templates/`。
```java
// application.properties示例
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
```

#### 3. 选择正确的模板解析模式
根据内容选择正确的模式，特别是对于`JAVASCRIPT`和`CSS`模式，使用Thymeleaf提供的特定处理以防止潜在的注入问题。
```java
// application.properties示例
spring.thymeleaf.mode=HTML
```

#### 4. 设置一致的编码
确保模板文件的编码一致，避免乱码问题。
```java
// application.properties示例
spring.thymeleaf.encoding=UTF-8
```

#### 5. 设置正确的Content-Type
确保响应头的`Content-Type`正确，有助于浏览器正确解析内容。
```java
// application.properties示例
spring.thymeleaf.content-type=text/html
```

通过以上步骤，可以确保Thymeleaf配置的安全性和性能，预防潜在的配置错误和未来的漏洞或性能瓶颈。
SOLUTION
	reference: <<<REFERENCE
none
REFERENCE
)

// // TODO: check cache=true when product 
// ${*.properties}.regexp(/spring\.thymeleaf\.cache=\S+/) as $cache;
// 
// 
// // TODO: check must set prefix and suffix 
// ${*.properties}.regexp(/spring\.thymeleaf\.prefix=\S+/) as $prefix;
// ${*.properties}.regexp(/spring\.thymeleaf\.suffix=\S+/) as $suffix;
// 
// 
// 
// desc(
// 	lang: java
// 	alert_min: 0
// 	'file://application.properties': <<<EOF
// spring.thymeleaf.cache=false
// spring.thymeleaf.prefix=classpath:/templates/
// spring.thymeleaf.suffix=.html
// spring.thymeleaf.mode=HTML
// spring.thymeleaf.encoding=UTF-8
// spring.thymeleaf.content-type=text/html
// EOF
// )
// 
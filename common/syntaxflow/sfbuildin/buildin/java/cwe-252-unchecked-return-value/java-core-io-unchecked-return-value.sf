desc(
    title:'Check Java IO Unchecked Return Value',
    title_zh:'检测Java IO库未检查返回值的API',
    type:security,
    desc:<<<TEXT
Java的java.io库中某些方法会返回一个值，但是调用者没有检查这个返回值。这可能导致一些潜在的安全风险，例如资源泄露、内存泄露、数据泄露等。因此，建议在调用这些方法时，检查返回值并根据需要进行处理。
TEXT,
)

/^(read|skip|skipBytes|implies|delete|canRead|canWrite|exists|isAbsolute|isDirectory|isFile|isHidden|mkdir|mkdirs|renameTo)$/<getCall> as $toCheck;
$toCheck?{<typeName>?{have:'java.io'}}?{!<getUsers>} as $weak;
alert $weak for {
    message: "发现Java IO库未检查返回值的API",
    risk:'api-abuse',
    level:info,
};

desc{
    lang:'java',
    alert_num:10,
    'file://demo.java':<<<TEXT
package org.example;

import java.io.*;
import java.security.Permission;
import java.util.Iterator;

public class Demo {
    public static void main(String[] args) throws IOException {
        //Demo 1
        File file = new File("a");
        file.delete();
        file.canWrite();

        //Demo 2
        FilePermission filePermission = new FilePermission(file.getAbsolutePath(), "read");
        Permission permission = new RuntimePermission("accessClassInherited");
        filePermission.implies(permission);

        //Demo3
        try{
            FileInputStream fis2 = new FileInputStream("ss");
            InputStreamReader isr = new InputStreamReader(fis2);
            isr.read();
        }catch(Exception e){
            throw new IOException(e.getMessage());
        }

        //Demo4
        RandomAccessFile raf = new RandomAccessFile("ss", "rw");
        raf.read();
        raf.skipBytes(1);


        //Demo5
        Reader reader = new InputStreamReader(new FileInputStream("ss"));
        reader.read();

        //Demo6
        InputStreamReader isr2 = new InputStreamReader(new FileInputStream("ss"));
        isr2.skip(2);


        //Demo7
        DataInputStream  dataInputStream = new DataInputStream(new FileInputStream("ss"));
        dataInputStream.skipBytes(2);

        //Demo8
        ObjectInputStream objectInputStream = new ObjectInputStream(new FileInputStream("ss"));
        objectInputStream.skipBytes(10);
    }
}
TEXT
}



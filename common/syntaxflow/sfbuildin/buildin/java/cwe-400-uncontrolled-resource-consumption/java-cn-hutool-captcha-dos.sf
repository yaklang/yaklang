desc(
	title_zh:"检测Java cn.hutool.captcha验证码拒绝服务漏洞",
	title: "Check Java cn.hutool.captcha DDoS"
	type: vuln
	risk:DDOS
	reference:<<<URL
    https://plus.hutool.cn/apidocs/cn/hutool/captcha/generator/class-use/CodeGenerator.html
URL
	desc: <<<TEXT
    该规则用于检测cn.hutool.captcha生成验证码的时候，验证码大小可控造成的拒绝服务攻击漏洞。
    规则审计的类:
    - cn.hutool.captcha.CaptchaUtil
    - cn.hutool.captcha.AbstractCaptcha
    - cn.hutool.captcha.CircleCaptcha
    - cn.hutool.captcha.GifCaptcha
    - cn.hutool.captcha.LineCaptcha
    - cn.hutool.captcha.ShearCaptcha
    规则审计的方法:
    - AbstractCaptcha(int width, int height, CodeGenerator generator, int interfereCount)
    - AbstractCaptcha(int width, int height, CodeGenerator generator, int interfereCount, float size)
    - CircleCaptcha(int width, int height, CodeGenerator generator, int interfereCount)
    - GifCaptcha(int width, int height, CodeGenerator generator, int interfereCount)
    - LineCaptcha(int width, int height, CodeGenerator generator, int interfereCount)
    - ShearCaptcha(int width, int height, CodeGenerator generator, int interfereCount)
    - CaptchaUtil.createCircleCaptcha(int width, int height, CodeGenerator generator, int circleCount)
    - CaptchaUtil.createGifCaptcha(int width, int height, CodeGenerator generator, int thickness)
    - CaptchaUtil.createShearCaptcha(int width, int height, CodeGenerator generator, int thickness)
TEXT
	rule_id: "5a737536-4f00-45e7-aa92-75ab7f4bd971"
)

// AbstractCaptcha(int width, int height, CodeGenerator generator, int interfereCount)
// AbstractCaptcha(int width, int height, CodeGenerator generator, int interfereCount, float size)
// CircleCaptcha(int width, int height, CodeGenerator generator, int interfereCount)
// GifCaptcha(int width, int height, CodeGenerator generator, int interfereCount)
// LineCaptcha(int width, int height, CodeGenerator generator, int interfereCount)
*Captcha?{<typeName>?{have:'cn.hutool.captcha'}}(* <slice(index=1)> as $sink);
// CaptchaUtil.createCircleCaptcha(int width, int height, CodeGenerator generator, int circleCount)
// CaptchaUtil.createGifCaptcha(int width, int height, CodeGenerator generator, int thickness)
// CaptchaUtil.createShearCaptcha(int width, int height, CodeGenerator generator, int thickness)
.create*Captcha?{<typeName>?{have:'cn.hutool.captcha.CaptchaUtil'}}(* <slice(index=1)> as $sink);

<include('java-servlet-param')> as $source;
<include('java-spring-mvc-param')> as $source;

$sink #{
    until: `* & $source`,
    exclude: `*?{opcode:call}?{!* & $source}?{!* & $sink}`,
}-> as $mid;

alert $mid for {
    message: "发现Java cn.hutool.captcha验证码拒绝服务漏洞。",
    level: mid,
}

$sink #{
    until: `* & $source`,
}-> as $result;

$result - $mid as $low;
alert $low for {
    message: "发现可能存在Java cn.hutool.captcha验证码拒绝服务漏洞。",
    level: low,
}

desc(
	lang:java
	alert_num:1
	'file://demo.java':<<<TEXT
package org.example.Dos;
import cn.hutool.captcha.AbstractCaptcha;
import cn.hutool.captcha.CaptchaUtil;
import cn.hutool.captcha.ShearCaptcha;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;


@Slf4j
@Api(value = "DosController", tags = "其他漏洞-Dos攻击")
@Controller
@CrossOrigin(origins = "*")
@RequestMapping("/other/dos")
    public class DosController {
        @RequestMapping("/vul")
        public void vul(@RequestParam Integer width, @RequestParam Integer height, HttpServletResponse response) throws IOException {
            response.setContentType("image/jpeg");
            response.setHeader("Pragma", "no-cache");
            response.setHeader("Cache-Control", "no-cache");
            // 验证码参数可控 造成拒绝服务攻击
            ShearCaptcha shearCaptcha = CaptchaUtil.createShearCaptcha(width, height,4,3);
            try {
                shearCaptcha.write(response.getOutputStream());
            } catch (IOException e) {
                throw new RuntimeException(e);
            }
        }
    }
TEXT
)




desc(
	title: "SCA: Check Java shiro-core Vulnerability"
	type: vuln
	risk: sca
	desc: <<<DESC
### 漏洞描述

1. **漏洞原理**
Apache Shiro 是一个广泛使用的 Java 安全框架，提供认证、授权、加密和会话管理等功能。在 shiro-core 的 1.10.0 和 1.10.1 版本中，存在一个经过身份认证绕过即可触发的漏洞（CVE-2023-22602）。该漏洞是由于 Shiro 在处理某些精心构造的请求时，未能正确验证用户身份，导致攻击者可以在未授权的情况下访问受保护的资源。

2. **触发场景**
攻击者构造特定的请求，绕过 shiro 的认证机制，直接访问应用程序中需要身份认证才能访问的功能或数据。这通常发生在攻击者能够发送恶意构造的 HTTP 请求到受 shiro 保护的 Web 应用程序时。

3. **潜在影响**
利用此漏洞，攻击者可能：
- 未经授权访问敏感数据。
- 执行敏感操作，如修改配置、删除数据等。
- 绕过内部访问控制策略，对系统造成更严重的破坏。

例如，攻击者可以通过以下方式尝试发起攻击：
```http
GET /protected-resource HTTP/1.1
Host: vulnerable-app.com
Authorization: Bearer <malicious-payload>
```
通过上述伪造的认证信息，攻击者可以获取未授权的资源访问权限。
DESC
	rule_id: "e39dd33c-1224-4b9c-b8c9-06c5a3fa6251"
	title_zh: "SCA: 检测Java shiro-core 依赖漏洞"
	solution: <<<SOLUTION
### 修复建议

1. **升级 shiro-core 版本**
尽快将 Apache Shiro 的 shiro-core 依赖升级到不受 CVE-2023-22602 影响的版本。根据官方公告，1.10.2 及更高版本已经修复了此漏洞。建议升级到最新的稳定版本。

**Maven 示例:**
```xml
<dependency>
    <groupId>org.apache.shiro</groupId>
    <artifactId>shiro-core</artifactId>
    <version>1.10.2</version> <!-- 升级到1.10.2或更高版本 -->
</dependency>
```

**Gradle 示例:**
```gradle
implementation 'org.apache.shiro:shiro-core:1.10.2' // 升级到1.10.2或更高版本
```

2. **审查和加强访问控制策略**
虽然升级版本是首要措施，但排查受影响的版本。同时，建议仔细审查应用程序的访问控制配置，确保关键功能和数据都有严格的访问限制，并且依赖于 shiro 的正确认证和授权机制。

3. **监控异常行为**
加强对应用程序日志和安全事件的监控，及时发现和响应潜在的攻击行为或异常访问尝试。
SOLUTION
	reference: <<<REFERENCE
[CVE-2023-22602 - Apache Shiro authentication bypass vulnerability](https://www.schneier.com/blog/archives/2023/01/apache-shiro-authentication-bypass-vulnerability.html)
REFERENCE
)

__dependency__.*shiro*core.version as $ver;
__dependency__.*shiro*spring.version as $ver;
$ver in (,1.10.1] as $vuln_shiro_core;
alert $vuln_shiro_core	for {
	desc: <<<CODE
### 漏洞描述

1. **漏洞原理**
Apache Shiro 是一个广泛使用的 Java 安全框架，提供认证、授权、加密和会话管理等功能。在 shiro-core 的 1.10.0 和 1.10.1 版本中，存在一个经过身份认证绕过即可触发的漏洞（CVE-2023-22602）。该漏洞是由于 Shiro 在处理某些精心构造的请求时，未能正确验证用户身份，导致攻击者可以在未授权的情况下访问受保护的资源。

2. **触发场景**
攻击者构造特定的请求，绕过 shiro 的认证机制，直接访问应用程序中需要身份认证才能访问的功能或数据。这通常发生在攻击者能够发送恶意构造的 HTTP 请求到受 shiro 保护的 Web 应用程序时。

3. **潜在影响**
利用此漏洞，攻击者可能：
- 未经授权访问敏感数据。
- 执行敏感操作，如修改配置、删除数据等。
- 绕过内部访问控制策略，对系统造成更严重的破坏。
CODE
	level: "high",
	message: "SCA: shiro-core versions between 1.10.0 and 1.10.1 have an authentication bypass vulnerability",
	cve: "CVE-2023-22602",
	title: "SCA: Check Java shiro-core Vulnerability",
	title_zh: "SCA: 检测Java shiro-core 依赖漏洞",
	solution: <<<CODE
### 修复建议

1. **升级 shiro-core 版本**
尽快将 Apache Shiro 的 shiro-core 依赖升级到不受 CVE-2023-22602 影响的版本。根据官方公告，1.10.2 及更高版本已经修复了此漏洞。建议升级到最新的稳定版本。

**Maven 示例:**
```xml
<dependency>
    <groupId>org.apache.shiro</groupId>
    <artifactId>shiro-core</artifactId>
    <version>1.10.2</version> <!-- 升级到1.10.2或更高版本 -->
</dependency>
```

**Gradle 示例:**
```gradle
implementation 'org.apache.shiro:shiro-core:1.10.2' // 升级到1.10.2或更高版本
```

2. **审查和加强访问控制策略**
虽然升级版本是首要措施，但排查受影响的版本。同时，建议仔细审查应用程序的访问控制配置，确保关键功能和数据都有严格的访问限制，并且依赖于 shiro 的正确认证和授权机制。

3. **监控异常行为**
加强对应用程序日志和安全事件的监控，及时发现和响应潜在的攻击行为或异常访问尝试。
CODE
}

desc(
	lang: java
	'file://pom.xml': <<<CODE
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>ymd-mzf</artifactId>
        <groupId>com.ymd.mzf</groupId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>ymd-mzf-system</artifactId>
    <packaging>jar</packaging>
    <name>ymd-mzf-system</name>
    <description>Demo project for Spring Boot</description>

    <!-- 依赖声明 -->
    <dependencies>
        <!-- 基础依赖 -->
        <dependency>
            <groupId>com.ymd.mzf</groupId>
            <artifactId>ymd-mzf-common</artifactId>
        </dependency>
        <!-- Shiro 核心依赖 -->
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-spring</artifactId>
            <version>1.4.0</version>
        </dependency>
        <!-- Shiro-redis插件 -->
        <dependency>
            <groupId>org.crazycake</groupId>
            <artifactId>shiro-redis</artifactId>
            <version>3.1.0</version>
        </dependency>
        <!-- thymeleaf模板引擎和shiro框架的整合 -->
        <dependency>
            <groupId>com.github.theborakompanioni</groupId>
            <artifactId>thymeleaf-extras-shiro</artifactId>
            <version>2.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.github.whvcse</groupId>
            <artifactId>easy-captcha</artifactId>
            <version>1.6.2</version>
        </dependency>
        <!--thymeleaf 模板依赖-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <!--thymeleaf 布局依赖-->
        <dependency>
            <groupId>nz.net.ultraq.thymeleaf</groupId>
            <artifactId>thymeleaf-layout-dialect</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
    </dependencies>
</project>
CODE
)

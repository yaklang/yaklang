desc(
    title: "LDAP Injection PHP checking",
    type: vuln,
    severity: mid,
    risk:'ldap-injection'
)

ldap_search(*<slice(start=1)> as $query);
ldap_list(*<slice(start=1)> as $query);
ldap_read(*<slice(start=1)> as $query)
ldap_compare(,* as $query);

<include('php-param')> as $params;
<include('php-filter-function')> as $filter;
$query #{
    until: `* & $params`,
}-> as $root;
$root?{!<dataflow(<<<CODE
*?{opcode: call && <getCaller><name>?{have: ldap_escape}} as $__next__;
CODE)>} as $result;
alert $result for {
    title: 'php ldap direct injection without filter',
    type: 'vuln',
    level: 'high'
};

$root?{<dataflow(<<<CODE
*?{opcode: call && !(have: ldap_escape)} as $__next__;
CODE)>} as $filter_result;

alert $filter_result for {
    title: 'php ldap direct injection have filter,but not match this filter function',
    type: 'mid',
    level: 'mid'
};

$root?{<dataflow(<<<CODE
*?{opcode: call && (<self> & $filter || have: ldap_escape)} as $__next__;
CODE)>} as $info;

alert $info for {
    title: 'php ldap inject have filter and match this filter function',
    type: 'info',
    level: 'info'
};

desc(

language: php,
alert_min: 1,
alert_mid: 1,

'file:///list3.php': <<<CODE
<?php

$ldapconn = ldap_connect("localhost");

if($ldapconn){
  $user2 = $_GET["user2"];

  $filter = "(&(objectClass=user)(uid=" . $user2. "))";
  $dn = "dc=example,dc=org";

  ldap_list($ldapconn, $dn, $filter); // Noncompliant
}
CODE,

'file:///list2.php': <<<CODE
<?php

$username = $_POST['username'];
$password = $_POST['password'];
// without_pass
$escaped_username = pass($username, '', LDAP_ESCAPE_FILTER);
$dn = "cn={$escaped_username},ou=users,dc=example,dc=com";
$is_valid = ldap_compare($ldap_conn, $dn, "userPassword", $password);
CODE, 


'safefile:///save.php':<<<CODE
// no php-param
$escaped_username = pass($username, '', LDAP_ESCAPE_FILTER);
$dn = "cn={$escaped_username},ou=users,dc=example,dc=com";
$is_valid = ldap_compare($ldap_conn, $dn, "userPassword", $password);
CODE
)
desc(
	title: "Audit PHP File Read Functions"
	type: audit
	level: info
	lib: 'php-file-read'
	desc: <<<DESC
### 规则目的
该规则用于审计PHP代码中是否存在不安全的文件读取函数使用。文件读取函数如`file_get_contents`、`file`、`readfile`、`fgetss`、`fgets`、`fread`、`fgetc`、`stream_get_line`、`fscanf`和`fopen`等，如果未对输入进行严格的验证和过滤，可能会被恶意用户利用来读取服务器上的敏感文件，导致信息泄露。

### 规则详细
1. **作为基础审计库**
   属于`php-file-read`库规则（`lib`类型），主要用于识别PHP代码中可能导致敏感信息泄露的文件读取函数调用。这些函数本身不构成漏洞，但作为用户输入不当处理的后门，可能被利用进行目录遍历或文件读取攻击。
2. **覆盖高危文件读取函数**
   规则覆盖了PHP中常见的文件读取以及文件打开函数，包括但不限于：
   - `file_get_contents()`: 读取文件内容到字符串。
   - `file()`: 将整个文件读入一个数组。
   - `readfile()`: 读取文件并写入输出缓冲。
   - `fgetss()`: 从文件指针中读取一行并过滤掉HTML和PHP标记。
   - `fgets()`: 从文件指针中读取一行。
   - `fread()`: 从文件指针中读取指定长度。
   - `fgetc()`: 从文件指针中读取单个字符。
   - `stream_get_line()`:从资源中获取一行直到达到终止符。
   - `fscanf()`: 从文件中根据指定的格式进行解析。
   - `fopen()`: 打开文件或 URL。打开文件后，后续的读取操作（如`fread`）也可能存在风险。
DESC
	rule_id: "7d0ddbae-c283-456e-94d3-2ede4b4865ac"
	title_zh: "审计PHP文件读取函数"
	solution: <<<SOLUTION
### 修复建议

#### 1. 严格验证和过滤用户输入
 对传递给文件操作函数的任何用户提供的输入进行严格的合法性验证和过滤。不允许用户输入包含特殊字符，特别是用于目录遍历的字符序列（如`../`或`.\`）。可以采用白名单机制，只允许访问特定类型或特定路径的文件。

#### 2. 使用安全的文件操作函数
 考虑使用更安全或限制性更强的函数，或者在调用文件操作函数前，对文件路径进行规范化处理，确保路径不会超出预期目录范围。

#### 3. 权限控制
 限制PHP脚本的执行权限，确保即使发生了文件读取漏洞，也无法访问系统敏感文件。

#### 4. 文件路径的硬编码或配置
 对于需要读取的配置文件或其他固定文件，尽量避免直接将用户输入用于构造文件路径，而是采用硬编码或从配置文件中读取路径。
SOLUTION
	reference: <<<REFERENCE
[PHP文件系统函数](https://www.php.net/manual/zh/book.filesystem.php)
[OWASP File Read vulnerability](https://owasp.org/www-community/vulnerabilities/File_read)
REFERENCE
)

/^(file_get_contents|file|readfile|fgetss|fgets|fread|fgetc|stream_get_line|fscanf|fopen)$/ as $output

alert $output

desc(
	lang: php
	alert_min: '1'
	'file://fileRead.php': <<<PARAM
<?php
$tpl_name = !empty($_POST['tpl_name']) ? trim($_POST['tpl_name']) : '';
 	$tpl_content = !empty($_POST['tpl_content']) ? deep_stripslashes($_POST['tpl_content']) : '';
 	if(empty($tpl_name)){
 		return false;
 	}
 	$tpl = BLUE_ROOT.'templates/default/'.$tpl_name;
    $handle = @fopen($tpl,"rb");
    $content = @fread($handle,1024);
 	fclose($handle);
PARAM
)

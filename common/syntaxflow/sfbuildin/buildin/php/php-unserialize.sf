desc(
    title: 'check php function unserialize',
    type: audit,
    level: low,
)

<include('php-param')> as $params
<include('php-filter-function')> as $filter
unserialize(* as $param)
$param#{until: `* & $params`}-> as $root
$root?{!<dataflow(<<<CODE
*?{opcode: call && <self> & $filter} as $__next__
CODE)>} as $result
alert(
    title: 'php deserialization is not filtered',
    type: 'vuln',
    level: 'high'
) $result

$root?{<dataflow(<<<CODE
*?{opcode: call && !<self> & $filter} as $__next__
CODE)>} as $mid

alert(
    title: 'php deserialization has function calls, but no filter function is checked out',
    title_zh: 'php反序列化中有函数调用，但未检出过滤函数',
    type: 'mid',
    level: 'mid'
) $mid

$root?{<dataflow(<<<CODE
*?{opcode: call && <self> & $filter} as $__next__
CODE)>} as $low

alert(
    title: 'php deserialization has function calls that check out filter functions',
    title_zh: 'php反序列化中有函数调用，检出过滤函数',
    type: 'low',
    level: 'low'
) $low
desc(
    lang: php,
    'file:///unsafe.php': <<<UNSAFE
<?php
function __unserialize($a){
    unserialize("$a");
}
$a = $_GET["1"];
__unserialize($a);
UNSAFE
)
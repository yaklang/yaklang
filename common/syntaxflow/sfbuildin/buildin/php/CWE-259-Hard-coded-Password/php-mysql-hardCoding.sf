desc(
	title: "Audit PHP Hard-coded Password"
	title_zh: "审计PHP硬编码密码"
	risk: "audit"
	level: "low"
	desc: <<<DESC
### 1.规则目的

此规则旨在识别PHP源代码中直接硬编码数据库（特别是MySQL）密码的安全风险。将敏感凭证直接嵌入代码中会显著增加泄露的风险，例如通过代码版本管理系统泄露、或攻击者通过其他漏洞获取webshell后直接读取源码。

### 2.风险原理

硬编码密码使得攻击者一旦获取到源代码，即可直接获取数据库访问凭证，从而绕过应用程序的认证机制，直接访问、篡改或删除数据库中的敏感数据。此外，当需要更改数据库密码时，必须修改并重新部署代码，不仅效率低下，也增加了出错的概率和系统的停机时间。

### 3.触发场景

任何在PHP代码中使用`mysql_connect()`、`mysql_pconnect()`或其他数据库连接函数时，将数据库用户名和密码以字符串字面量的形式直接写在函数参数中，都会触发此规则。

例如：

```php
<?php
// 不安全示例：密码直接明文写入代码
$servername = "localhost";
$username = "username";
$password = "password"; // 硬编码的密码
$conn = mysql_connect($servername, $username, $password);
?>
```

### 4.潜在影响

- **数据库泄露**：攻击者获取硬编码密码后，可直接连接数据库，窃取用户数据、配置信息等敏感信息。
- **数据篡改/删除**：攻击者可以修改或删除数据库中的数据，造成业务中断或数据完整性问题。
- **权限提升**：如果数据库用户权限过高，攻击者可能利用数据库功能进一步渗透到服务器操作系统。
- **维护困难**：更改密码需要修改代码并重新部署，流程繁琐且容易出错。
- **安全合规问题**：违反许多安全标准和法规关于敏感信息存储的要求。
DESC
	rule_id: "fa195860-525b-4e35-b2a1-358f76db51ad"
	solution: <<<SOLUTION
### 修复建议

#### 1. 使用配置文件或环境变量

将数据库凭据从代码中移除，存储在应用程序外部的配置文件中（如 `.env` 文件、INI 文件等），并通过环境变量在应用程序启动时加载。

```php
<?php
// 修复示例：从配置文件加载凭据（假设使用dotenv库）
require __DIR__ . '/vendor/autoload.php';
$dotenv = Dotenv\Dotenv::createImmutable(__DIR__);
$dotenv->load();

$servername = $_ENV['DB_SERVER'];
$username = $_ENV['DB_USERNAME'];
$password = $_ENV['DB_PASSWORD'];

$conn = mysql_connect($servername, $username, $password);
?>
```

#### 2. 使用密钥管理服务

对于云部署或企业应用，考虑使用云服务提供商的密钥管理服务（KMS）或HashiCorp Vault等工具，以加密和安全地存储敏感信息。

#### 3. 限制数据库用户权限

为应用程序创建专属的数据库用户，并只赋予其业务所需的最低权限，即使密码泄露也能限制攻击者的操作范围。

#### 4.定期轮换密码

即使使用了安全存储方式，也应定期更改数据库密码，以降低长期暴露的风险。

#### 5. 避免使用废弃的数据库连接函数

`mysql_*` 函数在PHP 5.5之后已被废弃并在PHP 7.0中移除。应优先使用PDO（PHP Data Objects）或MySQLi扩展进行数据库连接和操作，这些扩展提供更好的安全特性（如预处理语句）。
SOLUTION
	reference: <<<REFERENCE
[CWE-259: Use of Hard-Coded Password](https://cwe.mitre.org/data/definitions/259.html)
REFERENCE
)

/mysql_connect|mysql_pconnect/?(,,*?{opcode: const} as $sink,)

alert $sink for {
	title: "Hardcoded MySQL Credentials Detected",
	title_zh: "检测到MySQL凭据硬编码",
	solution: <<<CODE

CODE
	desc: <<<CODE

CODE
	level: "low",
}
desc(
	lang: "php"
	alert_min: 1
	'file:///unsafe.php': <<<CODE
    <?php
    // 不安全示例：密码直接明文写入代码
    $servername = "localhost";
    $username = "username";
    $password = "password"; // 硬编码的密码
    $conn = mysql_connect($servername, $username, $password);
CODE
)

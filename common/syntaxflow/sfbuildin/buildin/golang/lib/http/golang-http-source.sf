desc(
	title: "Audit Golang HTTP Source"
	type: audit
	level: info
	lib: "golang-http-source"
	desc: <<<DESC
### 规则目的

该规则旨在审计Golang应用程序中与处理HTTP响应输出相关的代码。

### 规则详细

1.  **作为基础审计库**
    属于 `golang-http-source` 库规则（`lib` 类型），通常配合其他规则（如数据源跟踪规则）共同审计潜在的Web漏洞，提供关键HTTP请求输入的识别能力。
DESC
	title_zh: "审计Golang HTTP输入点"
	solution: <<<SOLUTION
none
SOLUTION
	reference: <<<REFERENCE
none
REFERENCE
	rule_id: "e5a96a40-e3fb-4903-8d27-281d77a5b753"
)



http.Request.URL.Query().Get() as $output 


alert $output


desc(
	lang: golang
	alert_min: 1
	'file://http_net.go': <<<PARAM
package main

import (
	"net/http"
	"html/template"
)

func handler(w http.ResponseWriter, r *http.Request) {
	// 从查询参数中获取用户输入
	name := r.URL.Query().Get("name")

	// 直接将用户输入插入到 HTML 中
	tmpl := "<h1>Hello," + name + "!</h1>"
	w.Write([]byte(tmpl))
}

func main() {
	http.HandleFunc("/", handler)
	http.ListenAndServe(":8080", nil)
}

PARAM
)

desc(
    title: "Find Executing Request",
    type: audit,
    level: low,
    lib: "golang-http-sink",
    desc: <<<TEXT
此规则旨在审计Golang应用程序中潜在的反射型XSS（跨站脚本攻击）漏洞。当应用程序直接从HTTP请求中获取用户输入，并未经适当的过滤或编码，便将其嵌入到HTML页面中时，便可能发生此类攻击。攻击者可以通过构造恶意的URL或表单输入，向受害者注入恶意脚本，从而窃取数据、劫持会话或执行其他恶意操作。
TEXT
)

<include('golang-http-gin')> as $output;
<include('golang-http-net')> as $output;

alert $output

desc(
    lang: golang,
    alert_min: 2,
    'file://http_net.go': <<<PARAM
package main

import (
	"net/http"
	"html/template"
)

func handler(w http.ResponseWriter, r *http.Request) {
	// 从查询参数中获取用户输入
	name := r.URL.Query().Get("name")

	// 直接将用户输入插入到 HTML 中
	tmpl := "<h1>Hello," + name + "!</h1>"
	w.Write([]byte(tmpl))
}

func main() {
	http.HandleFunc("/", handler)
	http.ListenAndServe(":8080", nil)
}

PARAM
)
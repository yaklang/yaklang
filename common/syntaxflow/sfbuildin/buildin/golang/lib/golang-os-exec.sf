desc(
    title: "check execution input variable",
    type: audit,
    level: info,
    lib: 'golang-os-exec',
    desc: <<<TEXT
此规则旨在审计Go语言代码中`os/exec`包的使用情况，特别是关注于命令执行时输入变量的处理。不安全的命令执行可能导致任意代码执行漏洞，如果攻击者能够控制传递给`exec.Command`的输入，那么他们可能会执行恶意命令，进而危害系统的安全性。建议开发者在使用`os/exec`包时，确保所有输入都经过严格的验证和清理，以防止命令注入攻击。
TEXT
)

exec?{<fullTypeName>?{have: 'os/exec'}} as $entry
$entry.Command(* as $output) 

alert $output

desc(
    lang: golang,
    alert_min: 2,
    'file://exec.go': <<<PARAM
package main

import (
	"fmt"
	"os/exec"
)

func main() {
	// 创建一个命令
	cmd := exec.Command("ls", "-l") // 在 Unix/Linux 系统中，使用 "dir" 对于 Windows 系统

	// 执行命令并获取输出
	output, err := cmd.Output()
	if err != nil {
		fmt.Println("Error:", err)
		return
	}

	// 打印输出
	fmt.Println(string(output))
}

PARAM
)
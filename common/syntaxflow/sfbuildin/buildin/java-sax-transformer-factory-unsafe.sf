desc(
    lang: java,
    "file:///unsafe.java": <<<UNSAFE
import javax.xml.transform.*;
import javax.xml.transform.sax.SAXTransformerFactory;
import javax.xml.transform.stream.StreamSource;
import org.xml.sax.InputSource;
import org.xml.sax.XMLReader;
import org.xml.sax.helpers.XMLReaderFactory;

public class VulnerableSAXTransformer {
    public static void main(String[] args) {
        try {
            // 创建 SAXTransformerFactory 实例
            SAXTransformerFactory sf = (SAXTransformerFactory) SAXTransformerFactory.newInstance();

            // 创建 XMLReader
            XMLReader xmlReader = XMLReaderFactory.createXMLReader();
            // 创建 StreamSource
            StreamSource source = new StreamSource(new InputSource("input.xml"));

            // 创建 TransformerHandler
            TransformerHandler handler = sf.newTransformerHandler(source);
            // 设置结果输出
            handler.setResult(new StreamResult(System.out));

            // 解析 XML
            xmlReader.setContentHandler(handler);
            xmlReader.parse(new InputSource("input.xml"));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
UNSAFE,
    "safefile:///safe.java": <<<SAFE
import javax.xml.XMLConstants;
import javax.xml.transform.*;
import javax.xml.transform.sax.SAXTransformerFactory;
import javax.xml.transform.stream.StreamSource;
import org.xml.sax.InputSource;
import org.xml.sax.XMLReader;
import org.xml.sax.helpers.XMLReaderFactory;

public class SecureSAXTransformer {
    public static void main(String[] args) {
        try {
            // 创建 SAXTransformerFactory 实例
            SAXTransformerFactory sf = (SAXTransformerFactory) SAXTransformerFactory.newInstance();
            sf.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, ""); // 禁止外部 DTD
            sf.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, ""); // 禁止外部样式表

            // 创建 XMLReader
            XMLReader xmlReader = XMLReaderFactory.createXMLReader();
            // 创建 StreamSource
            StreamSource source = new StreamSource(new InputSource("input.xml"));

            // 创建 TransformerHandler
            TransformerHandler handler = sf.newTransformerHandler(source);
            // 设置结果输出
            handler.setResult(new StreamResult(System.out));

            // 解析 XML
            xmlReader.setContentHandler(handler);
            xmlReader.parse(new InputSource("input.xml"));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
SAFE
)


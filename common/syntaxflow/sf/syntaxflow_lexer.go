// Code generated from java-escape by ANTLR 4.11.1. DO NOT EDIT.

package sf

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr/v4"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type SyntaxFlowLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var syntaxflowlexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func syntaxflowlexerLexerInit() {
	staticData := &syntaxflowlexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "';'", "'\\n'", "'->'", "'-->'", "'-<'", "'>-'", "'+'", "'==>'",
		"'...'", "'%%'", "'..'", "'<='", "'>='", "'>>'", "'=>'", "'=='", "'=~'",
		"'!~'", "'&&'", "'||'", "'!='", "'?{'", "'-{'", "'}->'", "'#{'", "'#>'",
		"'#->'", "'>'", "'.'", "'<'", "'='", "'?'", "'('", "','", "')'", "'['",
		"']'", "'{'", "'}'", "'#'", "'$'", "':'", "'%'", "'!'", "'*'", "'-'",
		"'as'", "'`'", "'''", "'\"'", "", "", "", "", "", "'str'", "'list'",
		"'dict'", "", "'bool'", "", "'alert'", "'check'", "'then'", "", "'else'",
		"'type'", "'in'", "'call'", "", "'phi'", "", "", "'opcode'", "'have'",
		"'any'", "'not'",
	}
	staticData.symbolicNames = []string{
		"", "", "", "", "", "", "", "", "DeepFilter", "Deep", "Percent", "DeepDot",
		"LtEq", "GtEq", "DoubleGt", "Filter", "EqEq", "RegexpMatch", "NotRegexpMatch",
		"And", "Or", "NotEq", "ConditionStart", "DeepNextStart", "DeepNextEnd",
		"TopDefStart", "DefStart", "TopDef", "Gt", "Dot", "Lt", "Eq", "Question",
		"OpenParen", "Comma", "CloseParen", "ListSelectOpen", "ListSelectClose",
		"MapBuilderOpen", "MapBuilderClose", "ListStart", "DollarOutput", "Colon",
		"Search", "Bang", "Star", "Minus", "As", "Backtick", "SingleQuote",
		"DoubleQuote", "WhiteSpace", "Number", "OctalNumber", "BinaryNumber",
		"HexNumber", "StringType", "ListType", "DictType", "NumberType", "BoolType",
		"BoolLiteral", "Alert", "Check", "Then", "Desc", "Else", "Type", "In",
		"Call", "Constant", "Phi", "FormalParam", "Return", "Opcode", "Have",
		"HaveAny", "Not", "Identifier", "IdentifierChar", "QuotedStringLiteral",
		"RegexpLiteral", "WS",
	}
	staticData.ruleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "DeepFilter",
		"Deep", "Percent", "DeepDot", "LtEq", "GtEq", "DoubleGt", "Filter",
		"EqEq", "RegexpMatch", "NotRegexpMatch", "And", "Or", "NotEq", "ConditionStart",
		"DeepNextStart", "DeepNextEnd", "TopDefStart", "DefStart", "TopDef",
		"Gt", "Dot", "Lt", "Eq", "Question", "OpenParen", "Comma", "CloseParen",
		"ListSelectOpen", "ListSelectClose", "MapBuilderOpen", "MapBuilderClose",
		"ListStart", "DollarOutput", "Colon", "Search", "Bang", "Star", "Minus",
		"As", "Backtick", "SingleQuote", "DoubleQuote", "WhiteSpace", "Number",
		"OctalNumber", "BinaryNumber", "HexNumber", "StringType", "ListType",
		"DictType", "NumberType", "BoolType", "BoolLiteral", "Alert", "Check",
		"Then", "Desc", "Else", "Type", "In", "Call", "Constant", "Phi", "FormalParam",
		"Return", "Opcode", "Have", "HaveAny", "Not", "Identifier", "IdentifierChar",
		"QuotedStringLiteral", "IdentifierCharStart", "HexDigit", "Digit", "OctalDigit",
		"RegexpLiteral", "RegexpLiteralChar", "WS",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 82, 562, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67,
		2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 2, 71, 7, 71, 2, 72, 7, 72, 2,
		73, 7, 73, 2, 74, 7, 74, 2, 75, 7, 75, 2, 76, 7, 76, 2, 77, 7, 77, 2, 78,
		7, 78, 2, 79, 7, 79, 2, 80, 7, 80, 2, 81, 7, 81, 2, 82, 7, 82, 2, 83, 7,
		83, 2, 84, 7, 84, 2, 85, 7, 85, 2, 86, 7, 86, 1, 0, 1, 0, 1, 1, 1, 1, 1,
		2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1,
		5, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1,
		9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12,
		1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 16, 1,
		16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19,
		1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 23, 1,
		23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26,
		1, 26, 1, 26, 1, 27, 1, 27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 30, 1, 30, 1,
		31, 1, 31, 1, 32, 1, 32, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 36,
		1, 36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 39, 1, 39, 1, 40, 1, 40, 1, 41, 1,
		41, 1, 42, 1, 42, 1, 43, 1, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 46, 1, 46,
		1, 46, 1, 47, 1, 47, 1, 48, 1, 48, 1, 49, 1, 49, 1, 50, 1, 50, 1, 50, 1,
		50, 1, 51, 4, 51, 311, 8, 51, 11, 51, 12, 51, 312, 1, 52, 1, 52, 1, 52,
		1, 52, 4, 52, 319, 8, 52, 11, 52, 12, 52, 320, 1, 53, 1, 53, 1, 53, 1,
		53, 4, 53, 327, 8, 53, 11, 53, 12, 53, 328, 1, 54, 1, 54, 1, 54, 1, 54,
		4, 54, 335, 8, 54, 11, 54, 12, 54, 336, 1, 55, 1, 55, 1, 55, 1, 55, 1,
		56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 57, 1, 57, 1, 57, 1, 57, 1, 57, 1, 58,
		1, 58, 1, 58, 1, 58, 1, 58, 1, 58, 1, 58, 1, 58, 3, 58, 361, 8, 58, 1,
		59, 1, 59, 1, 59, 1, 59, 1, 59, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60,
		1, 60, 1, 60, 1, 60, 3, 60, 377, 8, 60, 1, 61, 1, 61, 1, 61, 1, 61, 1,
		61, 1, 61, 1, 62, 1, 62, 1, 62, 1, 62, 1, 62, 1, 62, 1, 63, 1, 63, 1, 63,
		1, 63, 1, 63, 1, 64, 1, 64, 1, 64, 1, 64, 1, 64, 1, 64, 1, 64, 1, 64, 3,
		64, 404, 8, 64, 1, 65, 1, 65, 1, 65, 1, 65, 1, 65, 1, 66, 1, 66, 1, 66,
		1, 66, 1, 66, 1, 67, 1, 67, 1, 67, 1, 68, 1, 68, 1, 68, 1, 68, 1, 68, 1,
		69, 1, 69, 1, 69, 1, 69, 1, 69, 1, 69, 1, 69, 1, 69, 1, 69, 1, 69, 1, 69,
		1, 69, 1, 69, 3, 69, 437, 8, 69, 1, 70, 1, 70, 1, 70, 1, 70, 1, 71, 1,
		71, 1, 71, 1, 71, 1, 71, 1, 71, 1, 71, 1, 71, 1, 71, 1, 71, 1, 71, 1, 71,
		1, 71, 1, 71, 1, 71, 1, 71, 1, 71, 3, 71, 460, 8, 71, 1, 72, 1, 72, 1,
		72, 1, 72, 1, 72, 1, 72, 1, 72, 1, 72, 1, 72, 3, 72, 471, 8, 72, 1, 73,
		1, 73, 1, 73, 1, 73, 1, 73, 1, 73, 1, 73, 1, 74, 1, 74, 1, 74, 1, 74, 1,
		74, 1, 75, 1, 75, 1, 75, 1, 75, 1, 76, 1, 76, 1, 76, 1, 76, 1, 77, 1, 77,
		5, 77, 495, 8, 77, 10, 77, 12, 77, 498, 9, 77, 1, 78, 1, 78, 3, 78, 502,
		8, 78, 1, 79, 1, 79, 1, 79, 1, 79, 1, 79, 1, 79, 1, 79, 5, 79, 511, 8,
		79, 10, 79, 12, 79, 514, 9, 79, 1, 79, 1, 79, 1, 79, 1, 79, 1, 79, 1, 79,
		1, 79, 1, 79, 1, 79, 5, 79, 525, 8, 79, 10, 79, 12, 79, 528, 9, 79, 1,
		79, 1, 79, 3, 79, 532, 8, 79, 1, 80, 3, 80, 535, 8, 80, 1, 81, 1, 81, 1,
		82, 1, 82, 1, 83, 1, 83, 1, 84, 1, 84, 4, 84, 545, 8, 84, 11, 84, 12, 84,
		546, 1, 84, 1, 84, 1, 85, 1, 85, 1, 85, 3, 85, 554, 8, 85, 1, 86, 4, 86,
		557, 8, 86, 11, 86, 12, 86, 558, 1, 86, 1, 86, 0, 0, 87, 1, 1, 3, 2, 5,
		3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25,
		13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43,
		22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61,
		31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79,
		40, 81, 41, 83, 42, 85, 43, 87, 44, 89, 45, 91, 46, 93, 47, 95, 48, 97,
		49, 99, 50, 101, 51, 103, 52, 105, 53, 107, 54, 109, 55, 111, 56, 113,
		57, 115, 58, 117, 59, 119, 60, 121, 61, 123, 62, 125, 63, 127, 64, 129,
		65, 131, 66, 133, 67, 135, 68, 137, 69, 139, 70, 141, 71, 143, 72, 145,
		73, 147, 74, 149, 75, 151, 76, 153, 77, 155, 78, 157, 79, 159, 80, 161,
		0, 163, 0, 165, 0, 167, 0, 169, 81, 171, 0, 173, 82, 1, 0, 9, 3, 0, 10,
		10, 13, 13, 32, 32, 1, 0, 48, 57, 4, 0, 10, 10, 13, 13, 39, 39, 92, 92,
		4, 0, 10, 10, 13, 13, 34, 34, 92, 92, 4, 0, 42, 42, 65, 90, 95, 95, 97,
		122, 3, 0, 48, 57, 65, 70, 97, 102, 1, 0, 48, 55, 1, 0, 47, 47, 3, 0, 9,
		9, 13, 13, 32, 32, 580, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0,
		0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1,
		0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21,
		1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0,
		29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0,
		0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0,
		0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0,
		0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1,
		0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67,
		1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0,
		75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0,
		0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0,
		0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1, 0,
		0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1, 0, 0, 0, 0, 105,
		1, 0, 0, 0, 0, 107, 1, 0, 0, 0, 0, 109, 1, 0, 0, 0, 0, 111, 1, 0, 0, 0,
		0, 113, 1, 0, 0, 0, 0, 115, 1, 0, 0, 0, 0, 117, 1, 0, 0, 0, 0, 119, 1,
		0, 0, 0, 0, 121, 1, 0, 0, 0, 0, 123, 1, 0, 0, 0, 0, 125, 1, 0, 0, 0, 0,
		127, 1, 0, 0, 0, 0, 129, 1, 0, 0, 0, 0, 131, 1, 0, 0, 0, 0, 133, 1, 0,
		0, 0, 0, 135, 1, 0, 0, 0, 0, 137, 1, 0, 0, 0, 0, 139, 1, 0, 0, 0, 0, 141,
		1, 0, 0, 0, 0, 143, 1, 0, 0, 0, 0, 145, 1, 0, 0, 0, 0, 147, 1, 0, 0, 0,
		0, 149, 1, 0, 0, 0, 0, 151, 1, 0, 0, 0, 0, 153, 1, 0, 0, 0, 0, 155, 1,
		0, 0, 0, 0, 157, 1, 0, 0, 0, 0, 159, 1, 0, 0, 0, 0, 169, 1, 0, 0, 0, 0,
		173, 1, 0, 0, 0, 1, 175, 1, 0, 0, 0, 3, 177, 1, 0, 0, 0, 5, 179, 1, 0,
		0, 0, 7, 182, 1, 0, 0, 0, 9, 186, 1, 0, 0, 0, 11, 189, 1, 0, 0, 0, 13,
		192, 1, 0, 0, 0, 15, 194, 1, 0, 0, 0, 17, 198, 1, 0, 0, 0, 19, 202, 1,
		0, 0, 0, 21, 205, 1, 0, 0, 0, 23, 208, 1, 0, 0, 0, 25, 211, 1, 0, 0, 0,
		27, 214, 1, 0, 0, 0, 29, 217, 1, 0, 0, 0, 31, 220, 1, 0, 0, 0, 33, 223,
		1, 0, 0, 0, 35, 226, 1, 0, 0, 0, 37, 229, 1, 0, 0, 0, 39, 232, 1, 0, 0,
		0, 41, 235, 1, 0, 0, 0, 43, 238, 1, 0, 0, 0, 45, 241, 1, 0, 0, 0, 47, 244,
		1, 0, 0, 0, 49, 248, 1, 0, 0, 0, 51, 251, 1, 0, 0, 0, 53, 254, 1, 0, 0,
		0, 55, 258, 1, 0, 0, 0, 57, 260, 1, 0, 0, 0, 59, 262, 1, 0, 0, 0, 61, 264,
		1, 0, 0, 0, 63, 266, 1, 0, 0, 0, 65, 268, 1, 0, 0, 0, 67, 270, 1, 0, 0,
		0, 69, 272, 1, 0, 0, 0, 71, 274, 1, 0, 0, 0, 73, 276, 1, 0, 0, 0, 75, 278,
		1, 0, 0, 0, 77, 280, 1, 0, 0, 0, 79, 282, 1, 0, 0, 0, 81, 284, 1, 0, 0,
		0, 83, 286, 1, 0, 0, 0, 85, 288, 1, 0, 0, 0, 87, 290, 1, 0, 0, 0, 89, 292,
		1, 0, 0, 0, 91, 294, 1, 0, 0, 0, 93, 296, 1, 0, 0, 0, 95, 299, 1, 0, 0,
		0, 97, 301, 1, 0, 0, 0, 99, 303, 1, 0, 0, 0, 101, 305, 1, 0, 0, 0, 103,
		310, 1, 0, 0, 0, 105, 314, 1, 0, 0, 0, 107, 322, 1, 0, 0, 0, 109, 330,
		1, 0, 0, 0, 111, 338, 1, 0, 0, 0, 113, 342, 1, 0, 0, 0, 115, 347, 1, 0,
		0, 0, 117, 360, 1, 0, 0, 0, 119, 362, 1, 0, 0, 0, 121, 376, 1, 0, 0, 0,
		123, 378, 1, 0, 0, 0, 125, 384, 1, 0, 0, 0, 127, 390, 1, 0, 0, 0, 129,
		403, 1, 0, 0, 0, 131, 405, 1, 0, 0, 0, 133, 410, 1, 0, 0, 0, 135, 415,
		1, 0, 0, 0, 137, 418, 1, 0, 0, 0, 139, 436, 1, 0, 0, 0, 141, 438, 1, 0,
		0, 0, 143, 459, 1, 0, 0, 0, 145, 470, 1, 0, 0, 0, 147, 472, 1, 0, 0, 0,
		149, 479, 1, 0, 0, 0, 151, 484, 1, 0, 0, 0, 153, 488, 1, 0, 0, 0, 155,
		492, 1, 0, 0, 0, 157, 501, 1, 0, 0, 0, 159, 531, 1, 0, 0, 0, 161, 534,
		1, 0, 0, 0, 163, 536, 1, 0, 0, 0, 165, 538, 1, 0, 0, 0, 167, 540, 1, 0,
		0, 0, 169, 542, 1, 0, 0, 0, 171, 553, 1, 0, 0, 0, 173, 556, 1, 0, 0, 0,
		175, 176, 5, 59, 0, 0, 176, 2, 1, 0, 0, 0, 177, 178, 5, 10, 0, 0, 178,
		4, 1, 0, 0, 0, 179, 180, 5, 45, 0, 0, 180, 181, 5, 62, 0, 0, 181, 6, 1,
		0, 0, 0, 182, 183, 5, 45, 0, 0, 183, 184, 5, 45, 0, 0, 184, 185, 5, 62,
		0, 0, 185, 8, 1, 0, 0, 0, 186, 187, 5, 45, 0, 0, 187, 188, 5, 60, 0, 0,
		188, 10, 1, 0, 0, 0, 189, 190, 5, 62, 0, 0, 190, 191, 5, 45, 0, 0, 191,
		12, 1, 0, 0, 0, 192, 193, 5, 43, 0, 0, 193, 14, 1, 0, 0, 0, 194, 195, 5,
		61, 0, 0, 195, 196, 5, 61, 0, 0, 196, 197, 5, 62, 0, 0, 197, 16, 1, 0,
		0, 0, 198, 199, 5, 46, 0, 0, 199, 200, 5, 46, 0, 0, 200, 201, 5, 46, 0,
		0, 201, 18, 1, 0, 0, 0, 202, 203, 5, 37, 0, 0, 203, 204, 5, 37, 0, 0, 204,
		20, 1, 0, 0, 0, 205, 206, 5, 46, 0, 0, 206, 207, 5, 46, 0, 0, 207, 22,
		1, 0, 0, 0, 208, 209, 5, 60, 0, 0, 209, 210, 5, 61, 0, 0, 210, 24, 1, 0,
		0, 0, 211, 212, 5, 62, 0, 0, 212, 213, 5, 61, 0, 0, 213, 26, 1, 0, 0, 0,
		214, 215, 5, 62, 0, 0, 215, 216, 5, 62, 0, 0, 216, 28, 1, 0, 0, 0, 217,
		218, 5, 61, 0, 0, 218, 219, 5, 62, 0, 0, 219, 30, 1, 0, 0, 0, 220, 221,
		5, 61, 0, 0, 221, 222, 5, 61, 0, 0, 222, 32, 1, 0, 0, 0, 223, 224, 5, 61,
		0, 0, 224, 225, 5, 126, 0, 0, 225, 34, 1, 0, 0, 0, 226, 227, 5, 33, 0,
		0, 227, 228, 5, 126, 0, 0, 228, 36, 1, 0, 0, 0, 229, 230, 5, 38, 0, 0,
		230, 231, 5, 38, 0, 0, 231, 38, 1, 0, 0, 0, 232, 233, 5, 124, 0, 0, 233,
		234, 5, 124, 0, 0, 234, 40, 1, 0, 0, 0, 235, 236, 5, 33, 0, 0, 236, 237,
		5, 61, 0, 0, 237, 42, 1, 0, 0, 0, 238, 239, 5, 63, 0, 0, 239, 240, 5, 123,
		0, 0, 240, 44, 1, 0, 0, 0, 241, 242, 5, 45, 0, 0, 242, 243, 5, 123, 0,
		0, 243, 46, 1, 0, 0, 0, 244, 245, 5, 125, 0, 0, 245, 246, 5, 45, 0, 0,
		246, 247, 5, 62, 0, 0, 247, 48, 1, 0, 0, 0, 248, 249, 5, 35, 0, 0, 249,
		250, 5, 123, 0, 0, 250, 50, 1, 0, 0, 0, 251, 252, 5, 35, 0, 0, 252, 253,
		5, 62, 0, 0, 253, 52, 1, 0, 0, 0, 254, 255, 5, 35, 0, 0, 255, 256, 5, 45,
		0, 0, 256, 257, 5, 62, 0, 0, 257, 54, 1, 0, 0, 0, 258, 259, 5, 62, 0, 0,
		259, 56, 1, 0, 0, 0, 260, 261, 5, 46, 0, 0, 261, 58, 1, 0, 0, 0, 262, 263,
		5, 60, 0, 0, 263, 60, 1, 0, 0, 0, 264, 265, 5, 61, 0, 0, 265, 62, 1, 0,
		0, 0, 266, 267, 5, 63, 0, 0, 267, 64, 1, 0, 0, 0, 268, 269, 5, 40, 0, 0,
		269, 66, 1, 0, 0, 0, 270, 271, 5, 44, 0, 0, 271, 68, 1, 0, 0, 0, 272, 273,
		5, 41, 0, 0, 273, 70, 1, 0, 0, 0, 274, 275, 5, 91, 0, 0, 275, 72, 1, 0,
		0, 0, 276, 277, 5, 93, 0, 0, 277, 74, 1, 0, 0, 0, 278, 279, 5, 123, 0,
		0, 279, 76, 1, 0, 0, 0, 280, 281, 5, 125, 0, 0, 281, 78, 1, 0, 0, 0, 282,
		283, 5, 35, 0, 0, 283, 80, 1, 0, 0, 0, 284, 285, 5, 36, 0, 0, 285, 82,
		1, 0, 0, 0, 286, 287, 5, 58, 0, 0, 287, 84, 1, 0, 0, 0, 288, 289, 5, 37,
		0, 0, 289, 86, 1, 0, 0, 0, 290, 291, 5, 33, 0, 0, 291, 88, 1, 0, 0, 0,
		292, 293, 5, 42, 0, 0, 293, 90, 1, 0, 0, 0, 294, 295, 5, 45, 0, 0, 295,
		92, 1, 0, 0, 0, 296, 297, 5, 97, 0, 0, 297, 298, 5, 115, 0, 0, 298, 94,
		1, 0, 0, 0, 299, 300, 5, 96, 0, 0, 300, 96, 1, 0, 0, 0, 301, 302, 5, 39,
		0, 0, 302, 98, 1, 0, 0, 0, 303, 304, 5, 34, 0, 0, 304, 100, 1, 0, 0, 0,
		305, 306, 7, 0, 0, 0, 306, 307, 1, 0, 0, 0, 307, 308, 6, 50, 0, 0, 308,
		102, 1, 0, 0, 0, 309, 311, 3, 165, 82, 0, 310, 309, 1, 0, 0, 0, 311, 312,
		1, 0, 0, 0, 312, 310, 1, 0, 0, 0, 312, 313, 1, 0, 0, 0, 313, 104, 1, 0,
		0, 0, 314, 315, 5, 48, 0, 0, 315, 316, 5, 111, 0, 0, 316, 318, 1, 0, 0,
		0, 317, 319, 3, 167, 83, 0, 318, 317, 1, 0, 0, 0, 319, 320, 1, 0, 0, 0,
		320, 318, 1, 0, 0, 0, 320, 321, 1, 0, 0, 0, 321, 106, 1, 0, 0, 0, 322,
		323, 5, 48, 0, 0, 323, 324, 5, 98, 0, 0, 324, 326, 1, 0, 0, 0, 325, 327,
		2, 48, 49, 0, 326, 325, 1, 0, 0, 0, 327, 328, 1, 0, 0, 0, 328, 326, 1,
		0, 0, 0, 328, 329, 1, 0, 0, 0, 329, 108, 1, 0, 0, 0, 330, 331, 5, 48, 0,
		0, 331, 332, 5, 120, 0, 0, 332, 334, 1, 0, 0, 0, 333, 335, 3, 163, 81,
		0, 334, 333, 1, 0, 0, 0, 335, 336, 1, 0, 0, 0, 336, 334, 1, 0, 0, 0, 336,
		337, 1, 0, 0, 0, 337, 110, 1, 0, 0, 0, 338, 339, 5, 115, 0, 0, 339, 340,
		5, 116, 0, 0, 340, 341, 5, 114, 0, 0, 341, 112, 1, 0, 0, 0, 342, 343, 5,
		108, 0, 0, 343, 344, 5, 105, 0, 0, 344, 345, 5, 115, 0, 0, 345, 346, 5,
		116, 0, 0, 346, 114, 1, 0, 0, 0, 347, 348, 5, 100, 0, 0, 348, 349, 5, 105,
		0, 0, 349, 350, 5, 99, 0, 0, 350, 351, 5, 116, 0, 0, 351, 116, 1, 0, 0,
		0, 352, 353, 5, 105, 0, 0, 353, 354, 5, 110, 0, 0, 354, 361, 5, 116, 0,
		0, 355, 356, 5, 102, 0, 0, 356, 357, 5, 108, 0, 0, 357, 358, 5, 111, 0,
		0, 358, 359, 5, 97, 0, 0, 359, 361, 5, 116, 0, 0, 360, 352, 1, 0, 0, 0,
		360, 355, 1, 0, 0, 0, 361, 118, 1, 0, 0, 0, 362, 363, 5, 98, 0, 0, 363,
		364, 5, 111, 0, 0, 364, 365, 5, 111, 0, 0, 365, 366, 5, 108, 0, 0, 366,
		120, 1, 0, 0, 0, 367, 368, 5, 116, 0, 0, 368, 369, 5, 114, 0, 0, 369, 370,
		5, 117, 0, 0, 370, 377, 5, 101, 0, 0, 371, 372, 5, 102, 0, 0, 372, 373,
		5, 97, 0, 0, 373, 374, 5, 108, 0, 0, 374, 375, 5, 115, 0, 0, 375, 377,
		5, 101, 0, 0, 376, 367, 1, 0, 0, 0, 376, 371, 1, 0, 0, 0, 377, 122, 1,
		0, 0, 0, 378, 379, 5, 97, 0, 0, 379, 380, 5, 108, 0, 0, 380, 381, 5, 101,
		0, 0, 381, 382, 5, 114, 0, 0, 382, 383, 5, 116, 0, 0, 383, 124, 1, 0, 0,
		0, 384, 385, 5, 99, 0, 0, 385, 386, 5, 104, 0, 0, 386, 387, 5, 101, 0,
		0, 387, 388, 5, 99, 0, 0, 388, 389, 5, 107, 0, 0, 389, 126, 1, 0, 0, 0,
		390, 391, 5, 116, 0, 0, 391, 392, 5, 104, 0, 0, 392, 393, 5, 101, 0, 0,
		393, 394, 5, 110, 0, 0, 394, 128, 1, 0, 0, 0, 395, 396, 5, 100, 0, 0, 396,
		397, 5, 101, 0, 0, 397, 398, 5, 115, 0, 0, 398, 404, 5, 99, 0, 0, 399,
		400, 5, 110, 0, 0, 400, 401, 5, 111, 0, 0, 401, 402, 5, 116, 0, 0, 402,
		404, 5, 101, 0, 0, 403, 395, 1, 0, 0, 0, 403, 399, 1, 0, 0, 0, 404, 130,
		1, 0, 0, 0, 405, 406, 5, 101, 0, 0, 406, 407, 5, 108, 0, 0, 407, 408, 5,
		115, 0, 0, 408, 409, 5, 101, 0, 0, 409, 132, 1, 0, 0, 0, 410, 411, 5, 116,
		0, 0, 411, 412, 5, 121, 0, 0, 412, 413, 5, 112, 0, 0, 413, 414, 5, 101,
		0, 0, 414, 134, 1, 0, 0, 0, 415, 416, 5, 105, 0, 0, 416, 417, 5, 110, 0,
		0, 417, 136, 1, 0, 0, 0, 418, 419, 5, 99, 0, 0, 419, 420, 5, 97, 0, 0,
		420, 421, 5, 108, 0, 0, 421, 422, 5, 108, 0, 0, 422, 138, 1, 0, 0, 0, 423,
		424, 5, 99, 0, 0, 424, 425, 5, 111, 0, 0, 425, 426, 5, 110, 0, 0, 426,
		427, 5, 115, 0, 0, 427, 437, 5, 116, 0, 0, 428, 429, 5, 99, 0, 0, 429,
		430, 5, 111, 0, 0, 430, 431, 5, 110, 0, 0, 431, 432, 5, 115, 0, 0, 432,
		433, 5, 116, 0, 0, 433, 434, 5, 97, 0, 0, 434, 435, 5, 110, 0, 0, 435,
		437, 5, 116, 0, 0, 436, 423, 1, 0, 0, 0, 436, 428, 1, 0, 0, 0, 437, 140,
		1, 0, 0, 0, 438, 439, 5, 112, 0, 0, 439, 440, 5, 104, 0, 0, 440, 441, 5,
		105, 0, 0, 441, 142, 1, 0, 0, 0, 442, 443, 5, 112, 0, 0, 443, 444, 5, 97,
		0, 0, 444, 445, 5, 114, 0, 0, 445, 446, 5, 97, 0, 0, 446, 460, 5, 109,
		0, 0, 447, 448, 5, 102, 0, 0, 448, 449, 5, 111, 0, 0, 449, 450, 5, 114,
		0, 0, 450, 451, 5, 109, 0, 0, 451, 452, 5, 97, 0, 0, 452, 453, 5, 108,
		0, 0, 453, 454, 5, 95, 0, 0, 454, 455, 5, 112, 0, 0, 455, 456, 5, 97, 0,
		0, 456, 457, 5, 114, 0, 0, 457, 458, 5, 97, 0, 0, 458, 460, 5, 109, 0,
		0, 459, 442, 1, 0, 0, 0, 459, 447, 1, 0, 0, 0, 460, 144, 1, 0, 0, 0, 461,
		462, 5, 114, 0, 0, 462, 463, 5, 101, 0, 0, 463, 464, 5, 116, 0, 0, 464,
		465, 5, 117, 0, 0, 465, 466, 5, 114, 0, 0, 466, 471, 5, 110, 0, 0, 467,
		468, 5, 114, 0, 0, 468, 469, 5, 101, 0, 0, 469, 471, 5, 116, 0, 0, 470,
		461, 1, 0, 0, 0, 470, 467, 1, 0, 0, 0, 471, 146, 1, 0, 0, 0, 472, 473,
		5, 111, 0, 0, 473, 474, 5, 112, 0, 0, 474, 475, 5, 99, 0, 0, 475, 476,
		5, 111, 0, 0, 476, 477, 5, 100, 0, 0, 477, 478, 5, 101, 0, 0, 478, 148,
		1, 0, 0, 0, 479, 480, 5, 104, 0, 0, 480, 481, 5, 97, 0, 0, 481, 482, 5,
		118, 0, 0, 482, 483, 5, 101, 0, 0, 483, 150, 1, 0, 0, 0, 484, 485, 5, 97,
		0, 0, 485, 486, 5, 110, 0, 0, 486, 487, 5, 121, 0, 0, 487, 152, 1, 0, 0,
		0, 488, 489, 5, 110, 0, 0, 489, 490, 5, 111, 0, 0, 490, 491, 5, 116, 0,
		0, 491, 154, 1, 0, 0, 0, 492, 496, 3, 161, 80, 0, 493, 495, 3, 157, 78,
		0, 494, 493, 1, 0, 0, 0, 495, 498, 1, 0, 0, 0, 496, 494, 1, 0, 0, 0, 496,
		497, 1, 0, 0, 0, 497, 156, 1, 0, 0, 0, 498, 496, 1, 0, 0, 0, 499, 502,
		7, 1, 0, 0, 500, 502, 3, 161, 80, 0, 501, 499, 1, 0, 0, 0, 501, 500, 1,
		0, 0, 0, 502, 158, 1, 0, 0, 0, 503, 512, 3, 97, 48, 0, 504, 511, 8, 2,
		0, 0, 505, 506, 5, 92, 0, 0, 506, 511, 5, 39, 0, 0, 507, 508, 5, 92, 0,
		0, 508, 511, 5, 92, 0, 0, 509, 511, 5, 92, 0, 0, 510, 504, 1, 0, 0, 0,
		510, 505, 1, 0, 0, 0, 510, 507, 1, 0, 0, 0, 510, 509, 1, 0, 0, 0, 511,
		514, 1, 0, 0, 0, 512, 510, 1, 0, 0, 0, 512, 513, 1, 0, 0, 0, 513, 515,
		1, 0, 0, 0, 514, 512, 1, 0, 0, 0, 515, 516, 3, 97, 48, 0, 516, 532, 1,
		0, 0, 0, 517, 526, 3, 99, 49, 0, 518, 525, 8, 3, 0, 0, 519, 520, 5, 92,
		0, 0, 520, 525, 5, 34, 0, 0, 521, 522, 5, 92, 0, 0, 522, 525, 5, 92, 0,
		0, 523, 525, 5, 92, 0, 0, 524, 518, 1, 0, 0, 0, 524, 519, 1, 0, 0, 0, 524,
		521, 1, 0, 0, 0, 524, 523, 1, 0, 0, 0, 525, 528, 1, 0, 0, 0, 526, 524,
		1, 0, 0, 0, 526, 527, 1, 0, 0, 0, 527, 529, 1, 0, 0, 0, 528, 526, 1, 0,
		0, 0, 529, 530, 3, 99, 49, 0, 530, 532, 1, 0, 0, 0, 531, 503, 1, 0, 0,
		0, 531, 517, 1, 0, 0, 0, 532, 160, 1, 0, 0, 0, 533, 535, 7, 4, 0, 0, 534,
		533, 1, 0, 0, 0, 535, 162, 1, 0, 0, 0, 536, 537, 7, 5, 0, 0, 537, 164,
		1, 0, 0, 0, 538, 539, 7, 1, 0, 0, 539, 166, 1, 0, 0, 0, 540, 541, 7, 6,
		0, 0, 541, 168, 1, 0, 0, 0, 542, 544, 5, 47, 0, 0, 543, 545, 3, 171, 85,
		0, 544, 543, 1, 0, 0, 0, 545, 546, 1, 0, 0, 0, 546, 544, 1, 0, 0, 0, 546,
		547, 1, 0, 0, 0, 547, 548, 1, 0, 0, 0, 548, 549, 5, 47, 0, 0, 549, 170,
		1, 0, 0, 0, 550, 551, 5, 92, 0, 0, 551, 554, 5, 47, 0, 0, 552, 554, 8,
		7, 0, 0, 553, 550, 1, 0, 0, 0, 553, 552, 1, 0, 0, 0, 554, 172, 1, 0, 0,
		0, 555, 557, 7, 8, 0, 0, 556, 555, 1, 0, 0, 0, 557, 558, 1, 0, 0, 0, 558,
		556, 1, 0, 0, 0, 558, 559, 1, 0, 0, 0, 559, 560, 1, 0, 0, 0, 560, 561,
		6, 86, 0, 0, 561, 174, 1, 0, 0, 0, 22, 0, 312, 320, 328, 336, 360, 376,
		403, 436, 459, 470, 496, 501, 510, 512, 524, 526, 531, 534, 546, 553, 558,
		1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// SyntaxFlowLexerInit initializes any static state used to implement SyntaxFlowLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewSyntaxFlowLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func SyntaxFlowLexerInit() {
	staticData := &syntaxflowlexerLexerStaticData
	staticData.once.Do(syntaxflowlexerLexerInit)
}

// NewSyntaxFlowLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewSyntaxFlowLexer(input antlr.CharStream) *SyntaxFlowLexer {
	SyntaxFlowLexerInit()
	l := new(SyntaxFlowLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &syntaxflowlexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "SyntaxFlow.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// SyntaxFlowLexer tokens.
const (
	SyntaxFlowLexerT__0                = 1
	SyntaxFlowLexerT__1                = 2
	SyntaxFlowLexerT__2                = 3
	SyntaxFlowLexerT__3                = 4
	SyntaxFlowLexerT__4                = 5
	SyntaxFlowLexerT__5                = 6
	SyntaxFlowLexerT__6                = 7
	SyntaxFlowLexerDeepFilter          = 8
	SyntaxFlowLexerDeep                = 9
	SyntaxFlowLexerPercent             = 10
	SyntaxFlowLexerDeepDot             = 11
	SyntaxFlowLexerLtEq                = 12
	SyntaxFlowLexerGtEq                = 13
	SyntaxFlowLexerDoubleGt            = 14
	SyntaxFlowLexerFilter              = 15
	SyntaxFlowLexerEqEq                = 16
	SyntaxFlowLexerRegexpMatch         = 17
	SyntaxFlowLexerNotRegexpMatch      = 18
	SyntaxFlowLexerAnd                 = 19
	SyntaxFlowLexerOr                  = 20
	SyntaxFlowLexerNotEq               = 21
	SyntaxFlowLexerConditionStart      = 22
	SyntaxFlowLexerDeepNextStart       = 23
	SyntaxFlowLexerDeepNextEnd         = 24
	SyntaxFlowLexerTopDefStart         = 25
	SyntaxFlowLexerDefStart            = 26
	SyntaxFlowLexerTopDef              = 27
	SyntaxFlowLexerGt                  = 28
	SyntaxFlowLexerDot                 = 29
	SyntaxFlowLexerLt                  = 30
	SyntaxFlowLexerEq                  = 31
	SyntaxFlowLexerQuestion            = 32
	SyntaxFlowLexerOpenParen           = 33
	SyntaxFlowLexerComma               = 34
	SyntaxFlowLexerCloseParen          = 35
	SyntaxFlowLexerListSelectOpen      = 36
	SyntaxFlowLexerListSelectClose     = 37
	SyntaxFlowLexerMapBuilderOpen      = 38
	SyntaxFlowLexerMapBuilderClose     = 39
	SyntaxFlowLexerListStart           = 40
	SyntaxFlowLexerDollarOutput        = 41
	SyntaxFlowLexerColon               = 42
	SyntaxFlowLexerSearch              = 43
	SyntaxFlowLexerBang                = 44
	SyntaxFlowLexerStar                = 45
	SyntaxFlowLexerMinus               = 46
	SyntaxFlowLexerAs                  = 47
	SyntaxFlowLexerBacktick            = 48
	SyntaxFlowLexerSingleQuote         = 49
	SyntaxFlowLexerDoubleQuote         = 50
	SyntaxFlowLexerWhiteSpace          = 51
	SyntaxFlowLexerNumber              = 52
	SyntaxFlowLexerOctalNumber         = 53
	SyntaxFlowLexerBinaryNumber        = 54
	SyntaxFlowLexerHexNumber           = 55
	SyntaxFlowLexerStringType          = 56
	SyntaxFlowLexerListType            = 57
	SyntaxFlowLexerDictType            = 58
	SyntaxFlowLexerNumberType          = 59
	SyntaxFlowLexerBoolType            = 60
	SyntaxFlowLexerBoolLiteral         = 61
	SyntaxFlowLexerAlert               = 62
	SyntaxFlowLexerCheck               = 63
	SyntaxFlowLexerThen                = 64
	SyntaxFlowLexerDesc                = 65
	SyntaxFlowLexerElse                = 66
	SyntaxFlowLexerType                = 67
	SyntaxFlowLexerIn                  = 68
	SyntaxFlowLexerCall                = 69
	SyntaxFlowLexerConstant            = 70
	SyntaxFlowLexerPhi                 = 71
	SyntaxFlowLexerFormalParam         = 72
	SyntaxFlowLexerReturn              = 73
	SyntaxFlowLexerOpcode              = 74
	SyntaxFlowLexerHave                = 75
	SyntaxFlowLexerHaveAny             = 76
	SyntaxFlowLexerNot                 = 77
	SyntaxFlowLexerIdentifier          = 78
	SyntaxFlowLexerIdentifierChar      = 79
	SyntaxFlowLexerQuotedStringLiteral = 80
	SyntaxFlowLexerRegexpLiteral       = 81
	SyntaxFlowLexerWS                  = 82
)

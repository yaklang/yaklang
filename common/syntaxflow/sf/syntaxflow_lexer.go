// Code generated from java-escape by ANTLR 4.11.1. DO NOT EDIT.

package sf

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr/v4"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type SyntaxFlowLexer struct {
	SyntaxFlowBaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var syntaxflowlexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func syntaxflowlexerLexerInit() {
	staticData := &syntaxflowlexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "'==>'", "'...'", "'%%'", "'..'", "'<='", "'>='", "'>>'", "'=>'",
		"'=='", "'=~'", "'!~'", "'&&'", "'||'", "'!='", "'${'", "';'", "'?{'",
		"'-{'", "'->'", "'}->'", "'-->'", "'#{'", "'#>'", "'#->'", "'>'", "'.'",
		"'<'", "'='", "'+'", "'&'", "'?'", "'('", "','", "')'", "'['", "']'",
		"'{'", "'}'", "'#'", "'$'", "':'", "'%'", "'!'", "'*'", "'-'", "'as'",
		"'`'", "'''", "'\"'", "", "'\\n'", "", "", "", "", "", "'str'", "'list'",
		"'dict'", "", "'bool'", "", "'alert'", "'check'", "'then'", "", "'else'",
		"'type'", "'in'", "'call'", "'function'", "", "'phi'", "", "", "'opcode'",
		"'have'", "'any'", "'not'", "'for'",
	}
	staticData.symbolicNames = []string{
		"", "DeepFilter", "Deep", "Percent", "DeepDot", "LtEq", "GtEq", "DoubleGt",
		"Filter", "EqEq", "RegexpMatch", "NotRegexpMatch", "And", "Or", "NotEq",
		"DollarBraceOpen", "Semicolon", "ConditionStart", "DeepNextStart", "UseStart",
		"DeepNextEnd", "DeepNext", "TopDefStart", "DefStart", "TopDef", "Gt",
		"Dot", "Lt", "Eq", "Add", "Amp", "Question", "OpenParen", "Comma", "CloseParen",
		"ListSelectOpen", "ListSelectClose", "MapBuilderOpen", "MapBuilderClose",
		"ListStart", "DollarOutput", "Colon", "Search", "Bang", "Star", "Minus",
		"As", "Backtick", "SingleQuote", "DoubleQuote", "LineComment", "BreakLine",
		"WhiteSpace", "Number", "OctalNumber", "BinaryNumber", "HexNumber",
		"StringType", "ListType", "DictType", "NumberType", "BoolType", "BoolLiteral",
		"Alert", "Check", "Then", "Desc", "Else", "Type", "In", "Call", "Function",
		"Constant", "Phi", "FormalParam", "Return", "Opcode", "Have", "HaveAny",
		"Not", "For", "Identifier", "IdentifierChar", "QuotedStringLiteral",
		"RegexpLiteral", "WS",
	}
	staticData.ruleNames = []string{
		"DeepFilter", "Deep", "Percent", "DeepDot", "LtEq", "GtEq", "DoubleGt",
		"Filter", "EqEq", "RegexpMatch", "NotRegexpMatch", "And", "Or", "NotEq",
		"DollarBraceOpen", "Semicolon", "ConditionStart", "DeepNextStart", "UseStart",
		"DeepNextEnd", "DeepNext", "TopDefStart", "DefStart", "TopDef", "Gt",
		"Dot", "Lt", "Eq", "Add", "Amp", "Question", "OpenParen", "Comma", "CloseParen",
		"ListSelectOpen", "ListSelectClose", "MapBuilderOpen", "MapBuilderClose",
		"ListStart", "DollarOutput", "Colon", "Search", "Bang", "Star", "Minus",
		"As", "Backtick", "SingleQuote", "DoubleQuote", "LineComment", "BreakLine",
		"WhiteSpace", "Number", "OctalNumber", "BinaryNumber", "HexNumber",
		"StringType", "ListType", "DictType", "NumberType", "BoolType", "BoolLiteral",
		"Alert", "Check", "Then", "Desc", "Else", "Type", "In", "Call", "Function",
		"Constant", "Phi", "FormalParam", "Return", "Opcode", "Have", "HaveAny",
		"Not", "For", "Identifier", "IdentifierChar", "QuotedStringLiteral",
		"IdentifierCharStart", "HexDigit", "Digit", "OctalDigit", "RegexpLiteral",
		"RegexpLiteralChar", "WS",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 85, 589, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67,
		2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 2, 71, 7, 71, 2, 72, 7, 72, 2,
		73, 7, 73, 2, 74, 7, 74, 2, 75, 7, 75, 2, 76, 7, 76, 2, 77, 7, 77, 2, 78,
		7, 78, 2, 79, 7, 79, 2, 80, 7, 80, 2, 81, 7, 81, 2, 82, 7, 82, 2, 83, 7,
		83, 2, 84, 7, 84, 2, 85, 7, 85, 2, 86, 7, 86, 2, 87, 7, 87, 2, 88, 7, 88,
		2, 89, 7, 89, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
		2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 6, 1,
		6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 10, 1,
		10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13,
		1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1,
		17, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20,
		1, 20, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1,
		23, 1, 24, 1, 24, 1, 25, 1, 25, 1, 26, 1, 26, 1, 27, 1, 27, 1, 28, 1, 28,
		1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 32, 1, 32, 1, 33, 1, 33, 1,
		34, 1, 34, 1, 35, 1, 35, 1, 36, 1, 36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 39,
		1, 39, 1, 40, 1, 40, 1, 41, 1, 41, 1, 42, 1, 42, 1, 43, 1, 43, 1, 44, 1,
		44, 1, 45, 1, 45, 1, 45, 1, 46, 1, 46, 1, 47, 1, 47, 1, 48, 1, 48, 1, 49,
		1, 49, 1, 49, 1, 49, 5, 49, 313, 8, 49, 10, 49, 12, 49, 316, 9, 49, 1,
		50, 1, 50, 1, 51, 1, 51, 1, 51, 1, 51, 1, 52, 4, 52, 325, 8, 52, 11, 52,
		12, 52, 326, 1, 53, 1, 53, 1, 53, 1, 53, 4, 53, 333, 8, 53, 11, 53, 12,
		53, 334, 1, 54, 1, 54, 1, 54, 1, 54, 4, 54, 341, 8, 54, 11, 54, 12, 54,
		342, 1, 55, 1, 55, 1, 55, 1, 55, 4, 55, 349, 8, 55, 11, 55, 12, 55, 350,
		1, 56, 1, 56, 1, 56, 1, 56, 1, 57, 1, 57, 1, 57, 1, 57, 1, 57, 1, 58, 1,
		58, 1, 58, 1, 58, 1, 58, 1, 59, 1, 59, 1, 59, 1, 59, 1, 59, 1, 59, 1, 59,
		1, 59, 3, 59, 375, 8, 59, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60, 1, 61, 1,
		61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 3, 61, 391, 8, 61,
		1, 62, 1, 62, 1, 62, 1, 62, 1, 62, 1, 62, 1, 63, 1, 63, 1, 63, 1, 63, 1,
		63, 1, 63, 1, 64, 1, 64, 1, 64, 1, 64, 1, 64, 1, 65, 1, 65, 1, 65, 1, 65,
		1, 65, 1, 65, 1, 65, 1, 65, 3, 65, 418, 8, 65, 1, 66, 1, 66, 1, 66, 1,
		66, 1, 66, 1, 67, 1, 67, 1, 67, 1, 67, 1, 67, 1, 68, 1, 68, 1, 68, 1, 69,
		1, 69, 1, 69, 1, 69, 1, 69, 1, 70, 1, 70, 1, 70, 1, 70, 1, 70, 1, 70, 1,
		70, 1, 70, 1, 70, 1, 71, 1, 71, 1, 71, 1, 71, 1, 71, 1, 71, 1, 71, 1, 71,
		1, 71, 1, 71, 1, 71, 1, 71, 1, 71, 3, 71, 460, 8, 71, 1, 72, 1, 72, 1,
		72, 1, 72, 1, 73, 1, 73, 1, 73, 1, 73, 1, 73, 1, 73, 1, 73, 1, 73, 1, 73,
		1, 73, 1, 73, 1, 73, 1, 73, 1, 73, 1, 73, 1, 73, 1, 73, 3, 73, 483, 8,
		73, 1, 74, 1, 74, 1, 74, 1, 74, 1, 74, 1, 74, 1, 74, 1, 74, 1, 74, 3, 74,
		494, 8, 74, 1, 75, 1, 75, 1, 75, 1, 75, 1, 75, 1, 75, 1, 75, 1, 76, 1,
		76, 1, 76, 1, 76, 1, 76, 1, 77, 1, 77, 1, 77, 1, 77, 1, 78, 1, 78, 1, 78,
		1, 78, 1, 79, 1, 79, 1, 79, 1, 79, 1, 80, 1, 80, 5, 80, 522, 8, 80, 10,
		80, 12, 80, 525, 9, 80, 1, 81, 1, 81, 3, 81, 529, 8, 81, 1, 82, 1, 82,
		1, 82, 1, 82, 1, 82, 1, 82, 1, 82, 5, 82, 538, 8, 82, 10, 82, 12, 82, 541,
		9, 82, 1, 82, 1, 82, 1, 82, 1, 82, 1, 82, 1, 82, 1, 82, 1, 82, 1, 82, 5,
		82, 552, 8, 82, 10, 82, 12, 82, 555, 9, 82, 1, 82, 1, 82, 3, 82, 559, 8,
		82, 1, 83, 3, 83, 562, 8, 83, 1, 84, 1, 84, 1, 85, 1, 85, 1, 86, 1, 86,
		1, 87, 1, 87, 4, 87, 572, 8, 87, 11, 87, 12, 87, 573, 1, 87, 1, 87, 1,
		88, 1, 88, 1, 88, 3, 88, 581, 8, 88, 1, 89, 4, 89, 584, 8, 89, 11, 89,
		12, 89, 585, 1, 89, 1, 89, 0, 0, 90, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11,
		6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15,
		31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24,
		49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33,
		67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42,
		85, 43, 87, 44, 89, 45, 91, 46, 93, 47, 95, 48, 97, 49, 99, 50, 101, 51,
		103, 52, 105, 53, 107, 54, 109, 55, 111, 56, 113, 57, 115, 58, 117, 59,
		119, 60, 121, 61, 123, 62, 125, 63, 127, 64, 129, 65, 131, 66, 133, 67,
		135, 68, 137, 69, 139, 70, 141, 71, 143, 72, 145, 73, 147, 74, 149, 75,
		151, 76, 153, 77, 155, 78, 157, 79, 159, 80, 161, 81, 163, 82, 165, 83,
		167, 0, 169, 0, 171, 0, 173, 0, 175, 84, 177, 0, 179, 85, 1, 0, 10, 2,
		0, 10, 10, 13, 13, 2, 0, 13, 13, 32, 32, 1, 0, 48, 57, 4, 0, 10, 10, 13,
		13, 39, 39, 92, 92, 4, 0, 10, 10, 13, 13, 34, 34, 92, 92, 4, 0, 42, 42,
		65, 90, 95, 95, 97, 122, 3, 0, 48, 57, 65, 70, 97, 102, 1, 0, 48, 55, 1,
		0, 47, 47, 3, 0, 9, 9, 13, 13, 32, 32, 608, 0, 1, 1, 0, 0, 0, 0, 3, 1,
		0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1,
		0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19,
		1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0,
		27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0,
		0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0,
		0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0,
		0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1,
		0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65,
		1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0,
		73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0,
		0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0,
		0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0,
		0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103,
		1, 0, 0, 0, 0, 105, 1, 0, 0, 0, 0, 107, 1, 0, 0, 0, 0, 109, 1, 0, 0, 0,
		0, 111, 1, 0, 0, 0, 0, 113, 1, 0, 0, 0, 0, 115, 1, 0, 0, 0, 0, 117, 1,
		0, 0, 0, 0, 119, 1, 0, 0, 0, 0, 121, 1, 0, 0, 0, 0, 123, 1, 0, 0, 0, 0,
		125, 1, 0, 0, 0, 0, 127, 1, 0, 0, 0, 0, 129, 1, 0, 0, 0, 0, 131, 1, 0,
		0, 0, 0, 133, 1, 0, 0, 0, 0, 135, 1, 0, 0, 0, 0, 137, 1, 0, 0, 0, 0, 139,
		1, 0, 0, 0, 0, 141, 1, 0, 0, 0, 0, 143, 1, 0, 0, 0, 0, 145, 1, 0, 0, 0,
		0, 147, 1, 0, 0, 0, 0, 149, 1, 0, 0, 0, 0, 151, 1, 0, 0, 0, 0, 153, 1,
		0, 0, 0, 0, 155, 1, 0, 0, 0, 0, 157, 1, 0, 0, 0, 0, 159, 1, 0, 0, 0, 0,
		161, 1, 0, 0, 0, 0, 163, 1, 0, 0, 0, 0, 165, 1, 0, 0, 0, 0, 175, 1, 0,
		0, 0, 0, 179, 1, 0, 0, 0, 1, 181, 1, 0, 0, 0, 3, 185, 1, 0, 0, 0, 5, 189,
		1, 0, 0, 0, 7, 192, 1, 0, 0, 0, 9, 195, 1, 0, 0, 0, 11, 198, 1, 0, 0, 0,
		13, 201, 1, 0, 0, 0, 15, 204, 1, 0, 0, 0, 17, 207, 1, 0, 0, 0, 19, 210,
		1, 0, 0, 0, 21, 213, 1, 0, 0, 0, 23, 216, 1, 0, 0, 0, 25, 219, 1, 0, 0,
		0, 27, 222, 1, 0, 0, 0, 29, 225, 1, 0, 0, 0, 31, 228, 1, 0, 0, 0, 33, 230,
		1, 0, 0, 0, 35, 233, 1, 0, 0, 0, 37, 236, 1, 0, 0, 0, 39, 239, 1, 0, 0,
		0, 41, 243, 1, 0, 0, 0, 43, 247, 1, 0, 0, 0, 45, 250, 1, 0, 0, 0, 47, 253,
		1, 0, 0, 0, 49, 257, 1, 0, 0, 0, 51, 259, 1, 0, 0, 0, 53, 261, 1, 0, 0,
		0, 55, 263, 1, 0, 0, 0, 57, 265, 1, 0, 0, 0, 59, 267, 1, 0, 0, 0, 61, 269,
		1, 0, 0, 0, 63, 271, 1, 0, 0, 0, 65, 273, 1, 0, 0, 0, 67, 275, 1, 0, 0,
		0, 69, 277, 1, 0, 0, 0, 71, 279, 1, 0, 0, 0, 73, 281, 1, 0, 0, 0, 75, 283,
		1, 0, 0, 0, 77, 285, 1, 0, 0, 0, 79, 287, 1, 0, 0, 0, 81, 289, 1, 0, 0,
		0, 83, 291, 1, 0, 0, 0, 85, 293, 1, 0, 0, 0, 87, 295, 1, 0, 0, 0, 89, 297,
		1, 0, 0, 0, 91, 299, 1, 0, 0, 0, 93, 302, 1, 0, 0, 0, 95, 304, 1, 0, 0,
		0, 97, 306, 1, 0, 0, 0, 99, 308, 1, 0, 0, 0, 101, 317, 1, 0, 0, 0, 103,
		319, 1, 0, 0, 0, 105, 324, 1, 0, 0, 0, 107, 328, 1, 0, 0, 0, 109, 336,
		1, 0, 0, 0, 111, 344, 1, 0, 0, 0, 113, 352, 1, 0, 0, 0, 115, 356, 1, 0,
		0, 0, 117, 361, 1, 0, 0, 0, 119, 374, 1, 0, 0, 0, 121, 376, 1, 0, 0, 0,
		123, 390, 1, 0, 0, 0, 125, 392, 1, 0, 0, 0, 127, 398, 1, 0, 0, 0, 129,
		404, 1, 0, 0, 0, 131, 417, 1, 0, 0, 0, 133, 419, 1, 0, 0, 0, 135, 424,
		1, 0, 0, 0, 137, 429, 1, 0, 0, 0, 139, 432, 1, 0, 0, 0, 141, 437, 1, 0,
		0, 0, 143, 459, 1, 0, 0, 0, 145, 461, 1, 0, 0, 0, 147, 482, 1, 0, 0, 0,
		149, 493, 1, 0, 0, 0, 151, 495, 1, 0, 0, 0, 153, 502, 1, 0, 0, 0, 155,
		507, 1, 0, 0, 0, 157, 511, 1, 0, 0, 0, 159, 515, 1, 0, 0, 0, 161, 519,
		1, 0, 0, 0, 163, 528, 1, 0, 0, 0, 165, 558, 1, 0, 0, 0, 167, 561, 1, 0,
		0, 0, 169, 563, 1, 0, 0, 0, 171, 565, 1, 0, 0, 0, 173, 567, 1, 0, 0, 0,
		175, 569, 1, 0, 0, 0, 177, 580, 1, 0, 0, 0, 179, 583, 1, 0, 0, 0, 181,
		182, 5, 61, 0, 0, 182, 183, 5, 61, 0, 0, 183, 184, 5, 62, 0, 0, 184, 2,
		1, 0, 0, 0, 185, 186, 5, 46, 0, 0, 186, 187, 5, 46, 0, 0, 187, 188, 5,
		46, 0, 0, 188, 4, 1, 0, 0, 0, 189, 190, 5, 37, 0, 0, 190, 191, 5, 37, 0,
		0, 191, 6, 1, 0, 0, 0, 192, 193, 5, 46, 0, 0, 193, 194, 5, 46, 0, 0, 194,
		8, 1, 0, 0, 0, 195, 196, 5, 60, 0, 0, 196, 197, 5, 61, 0, 0, 197, 10, 1,
		0, 0, 0, 198, 199, 5, 62, 0, 0, 199, 200, 5, 61, 0, 0, 200, 12, 1, 0, 0,
		0, 201, 202, 5, 62, 0, 0, 202, 203, 5, 62, 0, 0, 203, 14, 1, 0, 0, 0, 204,
		205, 5, 61, 0, 0, 205, 206, 5, 62, 0, 0, 206, 16, 1, 0, 0, 0, 207, 208,
		5, 61, 0, 0, 208, 209, 5, 61, 0, 0, 209, 18, 1, 0, 0, 0, 210, 211, 5, 61,
		0, 0, 211, 212, 5, 126, 0, 0, 212, 20, 1, 0, 0, 0, 213, 214, 5, 33, 0,
		0, 214, 215, 5, 126, 0, 0, 215, 22, 1, 0, 0, 0, 216, 217, 5, 38, 0, 0,
		217, 218, 5, 38, 0, 0, 218, 24, 1, 0, 0, 0, 219, 220, 5, 124, 0, 0, 220,
		221, 5, 124, 0, 0, 221, 26, 1, 0, 0, 0, 222, 223, 5, 33, 0, 0, 223, 224,
		5, 61, 0, 0, 224, 28, 1, 0, 0, 0, 225, 226, 5, 36, 0, 0, 226, 227, 5, 123,
		0, 0, 227, 30, 1, 0, 0, 0, 228, 229, 5, 59, 0, 0, 229, 32, 1, 0, 0, 0,
		230, 231, 5, 63, 0, 0, 231, 232, 5, 123, 0, 0, 232, 34, 1, 0, 0, 0, 233,
		234, 5, 45, 0, 0, 234, 235, 5, 123, 0, 0, 235, 36, 1, 0, 0, 0, 236, 237,
		5, 45, 0, 0, 237, 238, 5, 62, 0, 0, 238, 38, 1, 0, 0, 0, 239, 240, 5, 125,
		0, 0, 240, 241, 5, 45, 0, 0, 241, 242, 5, 62, 0, 0, 242, 40, 1, 0, 0, 0,
		243, 244, 5, 45, 0, 0, 244, 245, 5, 45, 0, 0, 245, 246, 5, 62, 0, 0, 246,
		42, 1, 0, 0, 0, 247, 248, 5, 35, 0, 0, 248, 249, 5, 123, 0, 0, 249, 44,
		1, 0, 0, 0, 250, 251, 5, 35, 0, 0, 251, 252, 5, 62, 0, 0, 252, 46, 1, 0,
		0, 0, 253, 254, 5, 35, 0, 0, 254, 255, 5, 45, 0, 0, 255, 256, 5, 62, 0,
		0, 256, 48, 1, 0, 0, 0, 257, 258, 5, 62, 0, 0, 258, 50, 1, 0, 0, 0, 259,
		260, 5, 46, 0, 0, 260, 52, 1, 0, 0, 0, 261, 262, 5, 60, 0, 0, 262, 54,
		1, 0, 0, 0, 263, 264, 5, 61, 0, 0, 264, 56, 1, 0, 0, 0, 265, 266, 5, 43,
		0, 0, 266, 58, 1, 0, 0, 0, 267, 268, 5, 38, 0, 0, 268, 60, 1, 0, 0, 0,
		269, 270, 5, 63, 0, 0, 270, 62, 1, 0, 0, 0, 271, 272, 5, 40, 0, 0, 272,
		64, 1, 0, 0, 0, 273, 274, 5, 44, 0, 0, 274, 66, 1, 0, 0, 0, 275, 276, 5,
		41, 0, 0, 276, 68, 1, 0, 0, 0, 277, 278, 5, 91, 0, 0, 278, 70, 1, 0, 0,
		0, 279, 280, 5, 93, 0, 0, 280, 72, 1, 0, 0, 0, 281, 282, 5, 123, 0, 0,
		282, 74, 1, 0, 0, 0, 283, 284, 5, 125, 0, 0, 284, 76, 1, 0, 0, 0, 285,
		286, 5, 35, 0, 0, 286, 78, 1, 0, 0, 0, 287, 288, 5, 36, 0, 0, 288, 80,
		1, 0, 0, 0, 289, 290, 5, 58, 0, 0, 290, 82, 1, 0, 0, 0, 291, 292, 5, 37,
		0, 0, 292, 84, 1, 0, 0, 0, 293, 294, 5, 33, 0, 0, 294, 86, 1, 0, 0, 0,
		295, 296, 5, 42, 0, 0, 296, 88, 1, 0, 0, 0, 297, 298, 5, 45, 0, 0, 298,
		90, 1, 0, 0, 0, 299, 300, 5, 97, 0, 0, 300, 301, 5, 115, 0, 0, 301, 92,
		1, 0, 0, 0, 302, 303, 5, 96, 0, 0, 303, 94, 1, 0, 0, 0, 304, 305, 5, 39,
		0, 0, 305, 96, 1, 0, 0, 0, 306, 307, 5, 34, 0, 0, 307, 98, 1, 0, 0, 0,
		308, 309, 5, 47, 0, 0, 309, 310, 5, 47, 0, 0, 310, 314, 1, 0, 0, 0, 311,
		313, 8, 0, 0, 0, 312, 311, 1, 0, 0, 0, 313, 316, 1, 0, 0, 0, 314, 312,
		1, 0, 0, 0, 314, 315, 1, 0, 0, 0, 315, 100, 1, 0, 0, 0, 316, 314, 1, 0,
		0, 0, 317, 318, 5, 10, 0, 0, 318, 102, 1, 0, 0, 0, 319, 320, 7, 1, 0, 0,
		320, 321, 1, 0, 0, 0, 321, 322, 6, 51, 0, 0, 322, 104, 1, 0, 0, 0, 323,
		325, 3, 171, 85, 0, 324, 323, 1, 0, 0, 0, 325, 326, 1, 0, 0, 0, 326, 324,
		1, 0, 0, 0, 326, 327, 1, 0, 0, 0, 327, 106, 1, 0, 0, 0, 328, 329, 5, 48,
		0, 0, 329, 330, 5, 111, 0, 0, 330, 332, 1, 0, 0, 0, 331, 333, 3, 173, 86,
		0, 332, 331, 1, 0, 0, 0, 333, 334, 1, 0, 0, 0, 334, 332, 1, 0, 0, 0, 334,
		335, 1, 0, 0, 0, 335, 108, 1, 0, 0, 0, 336, 337, 5, 48, 0, 0, 337, 338,
		5, 98, 0, 0, 338, 340, 1, 0, 0, 0, 339, 341, 2, 48, 49, 0, 340, 339, 1,
		0, 0, 0, 341, 342, 1, 0, 0, 0, 342, 340, 1, 0, 0, 0, 342, 343, 1, 0, 0,
		0, 343, 110, 1, 0, 0, 0, 344, 345, 5, 48, 0, 0, 345, 346, 5, 120, 0, 0,
		346, 348, 1, 0, 0, 0, 347, 349, 3, 169, 84, 0, 348, 347, 1, 0, 0, 0, 349,
		350, 1, 0, 0, 0, 350, 348, 1, 0, 0, 0, 350, 351, 1, 0, 0, 0, 351, 112,
		1, 0, 0, 0, 352, 353, 5, 115, 0, 0, 353, 354, 5, 116, 0, 0, 354, 355, 5,
		114, 0, 0, 355, 114, 1, 0, 0, 0, 356, 357, 5, 108, 0, 0, 357, 358, 5, 105,
		0, 0, 358, 359, 5, 115, 0, 0, 359, 360, 5, 116, 0, 0, 360, 116, 1, 0, 0,
		0, 361, 362, 5, 100, 0, 0, 362, 363, 5, 105, 0, 0, 363, 364, 5, 99, 0,
		0, 364, 365, 5, 116, 0, 0, 365, 118, 1, 0, 0, 0, 366, 367, 5, 105, 0, 0,
		367, 368, 5, 110, 0, 0, 368, 375, 5, 116, 0, 0, 369, 370, 5, 102, 0, 0,
		370, 371, 5, 108, 0, 0, 371, 372, 5, 111, 0, 0, 372, 373, 5, 97, 0, 0,
		373, 375, 5, 116, 0, 0, 374, 366, 1, 0, 0, 0, 374, 369, 1, 0, 0, 0, 375,
		120, 1, 0, 0, 0, 376, 377, 5, 98, 0, 0, 377, 378, 5, 111, 0, 0, 378, 379,
		5, 111, 0, 0, 379, 380, 5, 108, 0, 0, 380, 122, 1, 0, 0, 0, 381, 382, 5,
		116, 0, 0, 382, 383, 5, 114, 0, 0, 383, 384, 5, 117, 0, 0, 384, 391, 5,
		101, 0, 0, 385, 386, 5, 102, 0, 0, 386, 387, 5, 97, 0, 0, 387, 388, 5,
		108, 0, 0, 388, 389, 5, 115, 0, 0, 389, 391, 5, 101, 0, 0, 390, 381, 1,
		0, 0, 0, 390, 385, 1, 0, 0, 0, 391, 124, 1, 0, 0, 0, 392, 393, 5, 97, 0,
		0, 393, 394, 5, 108, 0, 0, 394, 395, 5, 101, 0, 0, 395, 396, 5, 114, 0,
		0, 396, 397, 5, 116, 0, 0, 397, 126, 1, 0, 0, 0, 398, 399, 5, 99, 0, 0,
		399, 400, 5, 104, 0, 0, 400, 401, 5, 101, 0, 0, 401, 402, 5, 99, 0, 0,
		402, 403, 5, 107, 0, 0, 403, 128, 1, 0, 0, 0, 404, 405, 5, 116, 0, 0, 405,
		406, 5, 104, 0, 0, 406, 407, 5, 101, 0, 0, 407, 408, 5, 110, 0, 0, 408,
		130, 1, 0, 0, 0, 409, 410, 5, 100, 0, 0, 410, 411, 5, 101, 0, 0, 411, 412,
		5, 115, 0, 0, 412, 418, 5, 99, 0, 0, 413, 414, 5, 110, 0, 0, 414, 415,
		5, 111, 0, 0, 415, 416, 5, 116, 0, 0, 416, 418, 5, 101, 0, 0, 417, 409,
		1, 0, 0, 0, 417, 413, 1, 0, 0, 0, 418, 132, 1, 0, 0, 0, 419, 420, 5, 101,
		0, 0, 420, 421, 5, 108, 0, 0, 421, 422, 5, 115, 0, 0, 422, 423, 5, 101,
		0, 0, 423, 134, 1, 0, 0, 0, 424, 425, 5, 116, 0, 0, 425, 426, 5, 121, 0,
		0, 426, 427, 5, 112, 0, 0, 427, 428, 5, 101, 0, 0, 428, 136, 1, 0, 0, 0,
		429, 430, 5, 105, 0, 0, 430, 431, 5, 110, 0, 0, 431, 138, 1, 0, 0, 0, 432,
		433, 5, 99, 0, 0, 433, 434, 5, 97, 0, 0, 434, 435, 5, 108, 0, 0, 435, 436,
		5, 108, 0, 0, 436, 140, 1, 0, 0, 0, 437, 438, 5, 102, 0, 0, 438, 439, 5,
		117, 0, 0, 439, 440, 5, 110, 0, 0, 440, 441, 5, 99, 0, 0, 441, 442, 5,
		116, 0, 0, 442, 443, 5, 105, 0, 0, 443, 444, 5, 111, 0, 0, 444, 445, 5,
		110, 0, 0, 445, 142, 1, 0, 0, 0, 446, 447, 5, 99, 0, 0, 447, 448, 5, 111,
		0, 0, 448, 449, 5, 110, 0, 0, 449, 450, 5, 115, 0, 0, 450, 460, 5, 116,
		0, 0, 451, 452, 5, 99, 0, 0, 452, 453, 5, 111, 0, 0, 453, 454, 5, 110,
		0, 0, 454, 455, 5, 115, 0, 0, 455, 456, 5, 116, 0, 0, 456, 457, 5, 97,
		0, 0, 457, 458, 5, 110, 0, 0, 458, 460, 5, 116, 0, 0, 459, 446, 1, 0, 0,
		0, 459, 451, 1, 0, 0, 0, 460, 144, 1, 0, 0, 0, 461, 462, 5, 112, 0, 0,
		462, 463, 5, 104, 0, 0, 463, 464, 5, 105, 0, 0, 464, 146, 1, 0, 0, 0, 465,
		466, 5, 112, 0, 0, 466, 467, 5, 97, 0, 0, 467, 468, 5, 114, 0, 0, 468,
		469, 5, 97, 0, 0, 469, 483, 5, 109, 0, 0, 470, 471, 5, 102, 0, 0, 471,
		472, 5, 111, 0, 0, 472, 473, 5, 114, 0, 0, 473, 474, 5, 109, 0, 0, 474,
		475, 5, 97, 0, 0, 475, 476, 5, 108, 0, 0, 476, 477, 5, 95, 0, 0, 477, 478,
		5, 112, 0, 0, 478, 479, 5, 97, 0, 0, 479, 480, 5, 114, 0, 0, 480, 481,
		5, 97, 0, 0, 481, 483, 5, 109, 0, 0, 482, 465, 1, 0, 0, 0, 482, 470, 1,
		0, 0, 0, 483, 148, 1, 0, 0, 0, 484, 485, 5, 114, 0, 0, 485, 486, 5, 101,
		0, 0, 486, 487, 5, 116, 0, 0, 487, 488, 5, 117, 0, 0, 488, 489, 5, 114,
		0, 0, 489, 494, 5, 110, 0, 0, 490, 491, 5, 114, 0, 0, 491, 492, 5, 101,
		0, 0, 492, 494, 5, 116, 0, 0, 493, 484, 1, 0, 0, 0, 493, 490, 1, 0, 0,
		0, 494, 150, 1, 0, 0, 0, 495, 496, 5, 111, 0, 0, 496, 497, 5, 112, 0, 0,
		497, 498, 5, 99, 0, 0, 498, 499, 5, 111, 0, 0, 499, 500, 5, 100, 0, 0,
		500, 501, 5, 101, 0, 0, 501, 152, 1, 0, 0, 0, 502, 503, 5, 104, 0, 0, 503,
		504, 5, 97, 0, 0, 504, 505, 5, 118, 0, 0, 505, 506, 5, 101, 0, 0, 506,
		154, 1, 0, 0, 0, 507, 508, 5, 97, 0, 0, 508, 509, 5, 110, 0, 0, 509, 510,
		5, 121, 0, 0, 510, 156, 1, 0, 0, 0, 511, 512, 5, 110, 0, 0, 512, 513, 5,
		111, 0, 0, 513, 514, 5, 116, 0, 0, 514, 158, 1, 0, 0, 0, 515, 516, 5, 102,
		0, 0, 516, 517, 5, 111, 0, 0, 517, 518, 5, 114, 0, 0, 518, 160, 1, 0, 0,
		0, 519, 523, 3, 167, 83, 0, 520, 522, 3, 163, 81, 0, 521, 520, 1, 0, 0,
		0, 522, 525, 1, 0, 0, 0, 523, 521, 1, 0, 0, 0, 523, 524, 1, 0, 0, 0, 524,
		162, 1, 0, 0, 0, 525, 523, 1, 0, 0, 0, 526, 529, 7, 2, 0, 0, 527, 529,
		3, 167, 83, 0, 528, 526, 1, 0, 0, 0, 528, 527, 1, 0, 0, 0, 529, 164, 1,
		0, 0, 0, 530, 539, 3, 95, 47, 0, 531, 538, 8, 3, 0, 0, 532, 533, 5, 92,
		0, 0, 533, 538, 5, 39, 0, 0, 534, 535, 5, 92, 0, 0, 535, 538, 5, 92, 0,
		0, 536, 538, 5, 92, 0, 0, 537, 531, 1, 0, 0, 0, 537, 532, 1, 0, 0, 0, 537,
		534, 1, 0, 0, 0, 537, 536, 1, 0, 0, 0, 538, 541, 1, 0, 0, 0, 539, 537,
		1, 0, 0, 0, 539, 540, 1, 0, 0, 0, 540, 542, 1, 0, 0, 0, 541, 539, 1, 0,
		0, 0, 542, 543, 3, 95, 47, 0, 543, 559, 1, 0, 0, 0, 544, 553, 3, 97, 48,
		0, 545, 552, 8, 4, 0, 0, 546, 547, 5, 92, 0, 0, 547, 552, 5, 34, 0, 0,
		548, 549, 5, 92, 0, 0, 549, 552, 5, 92, 0, 0, 550, 552, 5, 92, 0, 0, 551,
		545, 1, 0, 0, 0, 551, 546, 1, 0, 0, 0, 551, 548, 1, 0, 0, 0, 551, 550,
		1, 0, 0, 0, 552, 555, 1, 0, 0, 0, 553, 551, 1, 0, 0, 0, 553, 554, 1, 0,
		0, 0, 554, 556, 1, 0, 0, 0, 555, 553, 1, 0, 0, 0, 556, 557, 3, 97, 48,
		0, 557, 559, 1, 0, 0, 0, 558, 530, 1, 0, 0, 0, 558, 544, 1, 0, 0, 0, 559,
		166, 1, 0, 0, 0, 560, 562, 7, 5, 0, 0, 561, 560, 1, 0, 0, 0, 562, 168,
		1, 0, 0, 0, 563, 564, 7, 6, 0, 0, 564, 170, 1, 0, 0, 0, 565, 566, 7, 2,
		0, 0, 566, 172, 1, 0, 0, 0, 567, 568, 7, 7, 0, 0, 568, 174, 1, 0, 0, 0,
		569, 571, 5, 47, 0, 0, 570, 572, 3, 177, 88, 0, 571, 570, 1, 0, 0, 0, 572,
		573, 1, 0, 0, 0, 573, 571, 1, 0, 0, 0, 573, 574, 1, 0, 0, 0, 574, 575,
		1, 0, 0, 0, 575, 576, 5, 47, 0, 0, 576, 176, 1, 0, 0, 0, 577, 578, 5, 92,
		0, 0, 578, 581, 5, 47, 0, 0, 579, 581, 8, 8, 0, 0, 580, 577, 1, 0, 0, 0,
		580, 579, 1, 0, 0, 0, 581, 178, 1, 0, 0, 0, 582, 584, 7, 9, 0, 0, 583,
		582, 1, 0, 0, 0, 584, 585, 1, 0, 0, 0, 585, 583, 1, 0, 0, 0, 585, 586,
		1, 0, 0, 0, 586, 587, 1, 0, 0, 0, 587, 588, 6, 89, 0, 0, 588, 180, 1, 0,
		0, 0, 23, 0, 314, 326, 334, 342, 350, 374, 390, 417, 459, 482, 493, 523,
		528, 537, 539, 551, 553, 558, 561, 573, 580, 585, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// SyntaxFlowLexerInit initializes any static state used to implement SyntaxFlowLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewSyntaxFlowLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func SyntaxFlowLexerInit() {
	staticData := &syntaxflowlexerLexerStaticData
	staticData.once.Do(syntaxflowlexerLexerInit)
}

// NewSyntaxFlowLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewSyntaxFlowLexer(input antlr.CharStream) *SyntaxFlowLexer {
	SyntaxFlowLexerInit()
	l := new(SyntaxFlowLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &syntaxflowlexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "SyntaxFlowLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// SyntaxFlowLexer tokens.
const (
	SyntaxFlowLexerDeepFilter          = 1
	SyntaxFlowLexerDeep                = 2
	SyntaxFlowLexerPercent             = 3
	SyntaxFlowLexerDeepDot             = 4
	SyntaxFlowLexerLtEq                = 5
	SyntaxFlowLexerGtEq                = 6
	SyntaxFlowLexerDoubleGt            = 7
	SyntaxFlowLexerFilter              = 8
	SyntaxFlowLexerEqEq                = 9
	SyntaxFlowLexerRegexpMatch         = 10
	SyntaxFlowLexerNotRegexpMatch      = 11
	SyntaxFlowLexerAnd                 = 12
	SyntaxFlowLexerOr                  = 13
	SyntaxFlowLexerNotEq               = 14
	SyntaxFlowLexerDollarBraceOpen     = 15
	SyntaxFlowLexerSemicolon           = 16
	SyntaxFlowLexerConditionStart      = 17
	SyntaxFlowLexerDeepNextStart       = 18
	SyntaxFlowLexerUseStart            = 19
	SyntaxFlowLexerDeepNextEnd         = 20
	SyntaxFlowLexerDeepNext            = 21
	SyntaxFlowLexerTopDefStart         = 22
	SyntaxFlowLexerDefStart            = 23
	SyntaxFlowLexerTopDef              = 24
	SyntaxFlowLexerGt                  = 25
	SyntaxFlowLexerDot                 = 26
	SyntaxFlowLexerLt                  = 27
	SyntaxFlowLexerEq                  = 28
	SyntaxFlowLexerAdd                 = 29
	SyntaxFlowLexerAmp                 = 30
	SyntaxFlowLexerQuestion            = 31
	SyntaxFlowLexerOpenParen           = 32
	SyntaxFlowLexerComma               = 33
	SyntaxFlowLexerCloseParen          = 34
	SyntaxFlowLexerListSelectOpen      = 35
	SyntaxFlowLexerListSelectClose     = 36
	SyntaxFlowLexerMapBuilderOpen      = 37
	SyntaxFlowLexerMapBuilderClose     = 38
	SyntaxFlowLexerListStart           = 39
	SyntaxFlowLexerDollarOutput        = 40
	SyntaxFlowLexerColon               = 41
	SyntaxFlowLexerSearch              = 42
	SyntaxFlowLexerBang                = 43
	SyntaxFlowLexerStar                = 44
	SyntaxFlowLexerMinus               = 45
	SyntaxFlowLexerAs                  = 46
	SyntaxFlowLexerBacktick            = 47
	SyntaxFlowLexerSingleQuote         = 48
	SyntaxFlowLexerDoubleQuote         = 49
	SyntaxFlowLexerLineComment         = 50
	SyntaxFlowLexerBreakLine           = 51
	SyntaxFlowLexerWhiteSpace          = 52
	SyntaxFlowLexerNumber              = 53
	SyntaxFlowLexerOctalNumber         = 54
	SyntaxFlowLexerBinaryNumber        = 55
	SyntaxFlowLexerHexNumber           = 56
	SyntaxFlowLexerStringType          = 57
	SyntaxFlowLexerListType            = 58
	SyntaxFlowLexerDictType            = 59
	SyntaxFlowLexerNumberType          = 60
	SyntaxFlowLexerBoolType            = 61
	SyntaxFlowLexerBoolLiteral         = 62
	SyntaxFlowLexerAlert               = 63
	SyntaxFlowLexerCheck               = 64
	SyntaxFlowLexerThen                = 65
	SyntaxFlowLexerDesc                = 66
	SyntaxFlowLexerElse                = 67
	SyntaxFlowLexerType                = 68
	SyntaxFlowLexerIn                  = 69
	SyntaxFlowLexerCall                = 70
	SyntaxFlowLexerFunction            = 71
	SyntaxFlowLexerConstant            = 72
	SyntaxFlowLexerPhi                 = 73
	SyntaxFlowLexerFormalParam         = 74
	SyntaxFlowLexerReturn              = 75
	SyntaxFlowLexerOpcode              = 76
	SyntaxFlowLexerHave                = 77
	SyntaxFlowLexerHaveAny             = 78
	SyntaxFlowLexerNot                 = 79
	SyntaxFlowLexerFor                 = 80
	SyntaxFlowLexerIdentifier          = 81
	SyntaxFlowLexerIdentifierChar      = 82
	SyntaxFlowLexerQuotedStringLiteral = 83
	SyntaxFlowLexerRegexpLiteral       = 84
	SyntaxFlowLexerWS                  = 85
)

// Code generated from java-escape by ANTLR 4.11.1. DO NOT EDIT.

package sf

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr/v4"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type SyntaxFlowLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var syntaxflowlexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func syntaxflowlexerLexerInit() {
	staticData := &syntaxflowlexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "'${'", "';'", "'\\n'", "'->'", "'-->'", "'+'", "'==>'", "'...'",
		"'%%'", "'..'", "'<='", "'>='", "'>>'", "'=>'", "'=='", "'=~'", "'!~'",
		"'&&'", "'||'", "'!='", "'?{'", "'-{'", "'}->'", "'#{'", "'#>'", "'#->'",
		"'>'", "'.'", "'<'", "'='", "'?'", "'('", "','", "')'", "'['", "']'",
		"'{'", "'}'", "'#'", "'$'", "':'", "'%'", "'!'", "'*'", "'-'", "'as'",
		"'`'", "'''", "'\"'", "", "", "", "", "", "", "'str'", "'list'", "'dict'",
		"", "'bool'", "", "'alert'", "'check'", "'then'", "", "'else'", "'type'",
		"'in'", "'call'", "'function'", "", "'phi'", "", "", "'opcode'", "'have'",
		"'any'", "'not'", "'for'",
	}
	staticData.symbolicNames = []string{
		"", "", "", "", "", "", "", "DeepFilter", "Deep", "Percent", "DeepDot",
		"LtEq", "GtEq", "DoubleGt", "Filter", "EqEq", "RegexpMatch", "NotRegexpMatch",
		"And", "Or", "NotEq", "ConditionStart", "DeepNextStart", "DeepNextEnd",
		"TopDefStart", "DefStart", "TopDef", "Gt", "Dot", "Lt", "Eq", "Question",
		"OpenParen", "Comma", "CloseParen", "ListSelectOpen", "ListSelectClose",
		"MapBuilderOpen", "MapBuilderClose", "ListStart", "DollarOutput", "Colon",
		"Search", "Bang", "Star", "Minus", "As", "Backtick", "SingleQuote",
		"DoubleQuote", "LineComment", "WhiteSpace", "Number", "OctalNumber",
		"BinaryNumber", "HexNumber", "StringType", "ListType", "DictType", "NumberType",
		"BoolType", "BoolLiteral", "Alert", "Check", "Then", "Desc", "Else",
		"Type", "In", "Call", "Function", "Constant", "Phi", "FormalParam",
		"Return", "Opcode", "Have", "HaveAny", "Not", "For", "Identifier", "IdentifierChar",
		"QuotedStringLiteral", "RegexpLiteral", "WS",
	}
	staticData.ruleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "DeepFilter", "Deep",
		"Percent", "DeepDot", "LtEq", "GtEq", "DoubleGt", "Filter", "EqEq",
		"RegexpMatch", "NotRegexpMatch", "And", "Or", "NotEq", "ConditionStart",
		"DeepNextStart", "DeepNextEnd", "TopDefStart", "DefStart", "TopDef",
		"Gt", "Dot", "Lt", "Eq", "Question", "OpenParen", "Comma", "CloseParen",
		"ListSelectOpen", "ListSelectClose", "MapBuilderOpen", "MapBuilderClose",
		"ListStart", "DollarOutput", "Colon", "Search", "Bang", "Star", "Minus",
		"As", "Backtick", "SingleQuote", "DoubleQuote", "LineComment", "WhiteSpace",
		"Number", "OctalNumber", "BinaryNumber", "HexNumber", "StringType",
		"ListType", "DictType", "NumberType", "BoolType", "BoolLiteral", "Alert",
		"Check", "Then", "Desc", "Else", "Type", "In", "Call", "Function", "Constant",
		"Phi", "FormalParam", "Return", "Opcode", "Have", "HaveAny", "Not",
		"For", "Identifier", "IdentifierChar", "QuotedStringLiteral", "IdentifierCharStart",
		"HexDigit", "Digit", "OctalDigit", "RegexpLiteral", "RegexpLiteralChar",
		"WS",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 84, 585, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67,
		2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 2, 71, 7, 71, 2, 72, 7, 72, 2,
		73, 7, 73, 2, 74, 7, 74, 2, 75, 7, 75, 2, 76, 7, 76, 2, 77, 7, 77, 2, 78,
		7, 78, 2, 79, 7, 79, 2, 80, 7, 80, 2, 81, 7, 81, 2, 82, 7, 82, 2, 83, 7,
		83, 2, 84, 7, 84, 2, 85, 7, 85, 2, 86, 7, 86, 2, 87, 7, 87, 2, 88, 7, 88,
		1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4,
		1, 4, 1, 4, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7,
		1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11,
		1, 11, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1,
		15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18,
		1, 18, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1,
		22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 25,
		1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 27, 1, 27, 1, 28, 1, 28, 1, 29, 1,
		29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 32, 1, 32, 1, 33, 1, 33, 1, 34, 1, 34,
		1, 35, 1, 35, 1, 36, 1, 36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 39, 1, 39, 1,
		40, 1, 40, 1, 41, 1, 41, 1, 42, 1, 42, 1, 43, 1, 43, 1, 44, 1, 44, 1, 45,
		1, 45, 1, 45, 1, 46, 1, 46, 1, 47, 1, 47, 1, 48, 1, 48, 1, 49, 1, 49, 1,
		49, 1, 49, 5, 49, 311, 8, 49, 10, 49, 12, 49, 314, 9, 49, 1, 50, 1, 50,
		1, 50, 1, 50, 1, 51, 4, 51, 321, 8, 51, 11, 51, 12, 51, 322, 1, 52, 1,
		52, 1, 52, 1, 52, 4, 52, 329, 8, 52, 11, 52, 12, 52, 330, 1, 53, 1, 53,
		1, 53, 1, 53, 4, 53, 337, 8, 53, 11, 53, 12, 53, 338, 1, 54, 1, 54, 1,
		54, 1, 54, 4, 54, 345, 8, 54, 11, 54, 12, 54, 346, 1, 55, 1, 55, 1, 55,
		1, 55, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 57, 1, 57, 1, 57, 1, 57, 1,
		57, 1, 58, 1, 58, 1, 58, 1, 58, 1, 58, 1, 58, 1, 58, 1, 58, 3, 58, 371,
		8, 58, 1, 59, 1, 59, 1, 59, 1, 59, 1, 59, 1, 60, 1, 60, 1, 60, 1, 60, 1,
		60, 1, 60, 1, 60, 1, 60, 1, 60, 3, 60, 387, 8, 60, 1, 61, 1, 61, 1, 61,
		1, 61, 1, 61, 1, 61, 1, 62, 1, 62, 1, 62, 1, 62, 1, 62, 1, 62, 1, 63, 1,
		63, 1, 63, 1, 63, 1, 63, 1, 64, 1, 64, 1, 64, 1, 64, 1, 64, 1, 64, 1, 64,
		1, 64, 3, 64, 414, 8, 64, 1, 65, 1, 65, 1, 65, 1, 65, 1, 65, 1, 66, 1,
		66, 1, 66, 1, 66, 1, 66, 1, 67, 1, 67, 1, 67, 1, 68, 1, 68, 1, 68, 1, 68,
		1, 68, 1, 69, 1, 69, 1, 69, 1, 69, 1, 69, 1, 69, 1, 69, 1, 69, 1, 69, 1,
		70, 1, 70, 1, 70, 1, 70, 1, 70, 1, 70, 1, 70, 1, 70, 1, 70, 1, 70, 1, 70,
		1, 70, 1, 70, 3, 70, 456, 8, 70, 1, 71, 1, 71, 1, 71, 1, 71, 1, 72, 1,
		72, 1, 72, 1, 72, 1, 72, 1, 72, 1, 72, 1, 72, 1, 72, 1, 72, 1, 72, 1, 72,
		1, 72, 1, 72, 1, 72, 1, 72, 1, 72, 3, 72, 479, 8, 72, 1, 73, 1, 73, 1,
		73, 1, 73, 1, 73, 1, 73, 1, 73, 1, 73, 1, 73, 3, 73, 490, 8, 73, 1, 74,
		1, 74, 1, 74, 1, 74, 1, 74, 1, 74, 1, 74, 1, 75, 1, 75, 1, 75, 1, 75, 1,
		75, 1, 76, 1, 76, 1, 76, 1, 76, 1, 77, 1, 77, 1, 77, 1, 77, 1, 78, 1, 78,
		1, 78, 1, 78, 1, 79, 1, 79, 5, 79, 518, 8, 79, 10, 79, 12, 79, 521, 9,
		79, 1, 80, 1, 80, 3, 80, 525, 8, 80, 1, 81, 1, 81, 1, 81, 1, 81, 1, 81,
		1, 81, 1, 81, 5, 81, 534, 8, 81, 10, 81, 12, 81, 537, 9, 81, 1, 81, 1,
		81, 1, 81, 1, 81, 1, 81, 1, 81, 1, 81, 1, 81, 1, 81, 5, 81, 548, 8, 81,
		10, 81, 12, 81, 551, 9, 81, 1, 81, 1, 81, 3, 81, 555, 8, 81, 1, 82, 3,
		82, 558, 8, 82, 1, 83, 1, 83, 1, 84, 1, 84, 1, 85, 1, 85, 1, 86, 1, 86,
		4, 86, 568, 8, 86, 11, 86, 12, 86, 569, 1, 86, 1, 86, 1, 87, 1, 87, 1,
		87, 3, 87, 577, 8, 87, 1, 88, 4, 88, 580, 8, 88, 11, 88, 12, 88, 581, 1,
		88, 1, 88, 0, 0, 89, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8,
		17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17,
		35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26,
		53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35,
		71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42, 85, 43, 87, 44,
		89, 45, 91, 46, 93, 47, 95, 48, 97, 49, 99, 50, 101, 51, 103, 52, 105,
		53, 107, 54, 109, 55, 111, 56, 113, 57, 115, 58, 117, 59, 119, 60, 121,
		61, 123, 62, 125, 63, 127, 64, 129, 65, 131, 66, 133, 67, 135, 68, 137,
		69, 139, 70, 141, 71, 143, 72, 145, 73, 147, 74, 149, 75, 151, 76, 153,
		77, 155, 78, 157, 79, 159, 80, 161, 81, 163, 82, 165, 0, 167, 0, 169, 0,
		171, 0, 173, 83, 175, 0, 177, 84, 1, 0, 10, 2, 0, 10, 10, 13, 13, 3, 0,
		10, 10, 13, 13, 32, 32, 1, 0, 48, 57, 4, 0, 10, 10, 13, 13, 39, 39, 92,
		92, 4, 0, 10, 10, 13, 13, 34, 34, 92, 92, 4, 0, 42, 42, 65, 90, 95, 95,
		97, 122, 3, 0, 48, 57, 65, 70, 97, 102, 1, 0, 48, 55, 1, 0, 47, 47, 3,
		0, 9, 9, 13, 13, 32, 32, 604, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5,
		1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13,
		1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0,
		21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0,
		0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0,
		0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0,
		0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1,
		0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59,
		1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0,
		67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0,
		0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0,
		0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0,
		0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1,
		0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1, 0, 0, 0, 0,
		105, 1, 0, 0, 0, 0, 107, 1, 0, 0, 0, 0, 109, 1, 0, 0, 0, 0, 111, 1, 0,
		0, 0, 0, 113, 1, 0, 0, 0, 0, 115, 1, 0, 0, 0, 0, 117, 1, 0, 0, 0, 0, 119,
		1, 0, 0, 0, 0, 121, 1, 0, 0, 0, 0, 123, 1, 0, 0, 0, 0, 125, 1, 0, 0, 0,
		0, 127, 1, 0, 0, 0, 0, 129, 1, 0, 0, 0, 0, 131, 1, 0, 0, 0, 0, 133, 1,
		0, 0, 0, 0, 135, 1, 0, 0, 0, 0, 137, 1, 0, 0, 0, 0, 139, 1, 0, 0, 0, 0,
		141, 1, 0, 0, 0, 0, 143, 1, 0, 0, 0, 0, 145, 1, 0, 0, 0, 0, 147, 1, 0,
		0, 0, 0, 149, 1, 0, 0, 0, 0, 151, 1, 0, 0, 0, 0, 153, 1, 0, 0, 0, 0, 155,
		1, 0, 0, 0, 0, 157, 1, 0, 0, 0, 0, 159, 1, 0, 0, 0, 0, 161, 1, 0, 0, 0,
		0, 163, 1, 0, 0, 0, 0, 173, 1, 0, 0, 0, 0, 177, 1, 0, 0, 0, 1, 179, 1,
		0, 0, 0, 3, 182, 1, 0, 0, 0, 5, 184, 1, 0, 0, 0, 7, 186, 1, 0, 0, 0, 9,
		189, 1, 0, 0, 0, 11, 193, 1, 0, 0, 0, 13, 195, 1, 0, 0, 0, 15, 199, 1,
		0, 0, 0, 17, 203, 1, 0, 0, 0, 19, 206, 1, 0, 0, 0, 21, 209, 1, 0, 0, 0,
		23, 212, 1, 0, 0, 0, 25, 215, 1, 0, 0, 0, 27, 218, 1, 0, 0, 0, 29, 221,
		1, 0, 0, 0, 31, 224, 1, 0, 0, 0, 33, 227, 1, 0, 0, 0, 35, 230, 1, 0, 0,
		0, 37, 233, 1, 0, 0, 0, 39, 236, 1, 0, 0, 0, 41, 239, 1, 0, 0, 0, 43, 242,
		1, 0, 0, 0, 45, 245, 1, 0, 0, 0, 47, 249, 1, 0, 0, 0, 49, 252, 1, 0, 0,
		0, 51, 255, 1, 0, 0, 0, 53, 259, 1, 0, 0, 0, 55, 261, 1, 0, 0, 0, 57, 263,
		1, 0, 0, 0, 59, 265, 1, 0, 0, 0, 61, 267, 1, 0, 0, 0, 63, 269, 1, 0, 0,
		0, 65, 271, 1, 0, 0, 0, 67, 273, 1, 0, 0, 0, 69, 275, 1, 0, 0, 0, 71, 277,
		1, 0, 0, 0, 73, 279, 1, 0, 0, 0, 75, 281, 1, 0, 0, 0, 77, 283, 1, 0, 0,
		0, 79, 285, 1, 0, 0, 0, 81, 287, 1, 0, 0, 0, 83, 289, 1, 0, 0, 0, 85, 291,
		1, 0, 0, 0, 87, 293, 1, 0, 0, 0, 89, 295, 1, 0, 0, 0, 91, 297, 1, 0, 0,
		0, 93, 300, 1, 0, 0, 0, 95, 302, 1, 0, 0, 0, 97, 304, 1, 0, 0, 0, 99, 306,
		1, 0, 0, 0, 101, 315, 1, 0, 0, 0, 103, 320, 1, 0, 0, 0, 105, 324, 1, 0,
		0, 0, 107, 332, 1, 0, 0, 0, 109, 340, 1, 0, 0, 0, 111, 348, 1, 0, 0, 0,
		113, 352, 1, 0, 0, 0, 115, 357, 1, 0, 0, 0, 117, 370, 1, 0, 0, 0, 119,
		372, 1, 0, 0, 0, 121, 386, 1, 0, 0, 0, 123, 388, 1, 0, 0, 0, 125, 394,
		1, 0, 0, 0, 127, 400, 1, 0, 0, 0, 129, 413, 1, 0, 0, 0, 131, 415, 1, 0,
		0, 0, 133, 420, 1, 0, 0, 0, 135, 425, 1, 0, 0, 0, 137, 428, 1, 0, 0, 0,
		139, 433, 1, 0, 0, 0, 141, 455, 1, 0, 0, 0, 143, 457, 1, 0, 0, 0, 145,
		478, 1, 0, 0, 0, 147, 489, 1, 0, 0, 0, 149, 491, 1, 0, 0, 0, 151, 498,
		1, 0, 0, 0, 153, 503, 1, 0, 0, 0, 155, 507, 1, 0, 0, 0, 157, 511, 1, 0,
		0, 0, 159, 515, 1, 0, 0, 0, 161, 524, 1, 0, 0, 0, 163, 554, 1, 0, 0, 0,
		165, 557, 1, 0, 0, 0, 167, 559, 1, 0, 0, 0, 169, 561, 1, 0, 0, 0, 171,
		563, 1, 0, 0, 0, 173, 565, 1, 0, 0, 0, 175, 576, 1, 0, 0, 0, 177, 579,
		1, 0, 0, 0, 179, 180, 5, 36, 0, 0, 180, 181, 5, 123, 0, 0, 181, 2, 1, 0,
		0, 0, 182, 183, 5, 59, 0, 0, 183, 4, 1, 0, 0, 0, 184, 185, 5, 10, 0, 0,
		185, 6, 1, 0, 0, 0, 186, 187, 5, 45, 0, 0, 187, 188, 5, 62, 0, 0, 188,
		8, 1, 0, 0, 0, 189, 190, 5, 45, 0, 0, 190, 191, 5, 45, 0, 0, 191, 192,
		5, 62, 0, 0, 192, 10, 1, 0, 0, 0, 193, 194, 5, 43, 0, 0, 194, 12, 1, 0,
		0, 0, 195, 196, 5, 61, 0, 0, 196, 197, 5, 61, 0, 0, 197, 198, 5, 62, 0,
		0, 198, 14, 1, 0, 0, 0, 199, 200, 5, 46, 0, 0, 200, 201, 5, 46, 0, 0, 201,
		202, 5, 46, 0, 0, 202, 16, 1, 0, 0, 0, 203, 204, 5, 37, 0, 0, 204, 205,
		5, 37, 0, 0, 205, 18, 1, 0, 0, 0, 206, 207, 5, 46, 0, 0, 207, 208, 5, 46,
		0, 0, 208, 20, 1, 0, 0, 0, 209, 210, 5, 60, 0, 0, 210, 211, 5, 61, 0, 0,
		211, 22, 1, 0, 0, 0, 212, 213, 5, 62, 0, 0, 213, 214, 5, 61, 0, 0, 214,
		24, 1, 0, 0, 0, 215, 216, 5, 62, 0, 0, 216, 217, 5, 62, 0, 0, 217, 26,
		1, 0, 0, 0, 218, 219, 5, 61, 0, 0, 219, 220, 5, 62, 0, 0, 220, 28, 1, 0,
		0, 0, 221, 222, 5, 61, 0, 0, 222, 223, 5, 61, 0, 0, 223, 30, 1, 0, 0, 0,
		224, 225, 5, 61, 0, 0, 225, 226, 5, 126, 0, 0, 226, 32, 1, 0, 0, 0, 227,
		228, 5, 33, 0, 0, 228, 229, 5, 126, 0, 0, 229, 34, 1, 0, 0, 0, 230, 231,
		5, 38, 0, 0, 231, 232, 5, 38, 0, 0, 232, 36, 1, 0, 0, 0, 233, 234, 5, 124,
		0, 0, 234, 235, 5, 124, 0, 0, 235, 38, 1, 0, 0, 0, 236, 237, 5, 33, 0,
		0, 237, 238, 5, 61, 0, 0, 238, 40, 1, 0, 0, 0, 239, 240, 5, 63, 0, 0, 240,
		241, 5, 123, 0, 0, 241, 42, 1, 0, 0, 0, 242, 243, 5, 45, 0, 0, 243, 244,
		5, 123, 0, 0, 244, 44, 1, 0, 0, 0, 245, 246, 5, 125, 0, 0, 246, 247, 5,
		45, 0, 0, 247, 248, 5, 62, 0, 0, 248, 46, 1, 0, 0, 0, 249, 250, 5, 35,
		0, 0, 250, 251, 5, 123, 0, 0, 251, 48, 1, 0, 0, 0, 252, 253, 5, 35, 0,
		0, 253, 254, 5, 62, 0, 0, 254, 50, 1, 0, 0, 0, 255, 256, 5, 35, 0, 0, 256,
		257, 5, 45, 0, 0, 257, 258, 5, 62, 0, 0, 258, 52, 1, 0, 0, 0, 259, 260,
		5, 62, 0, 0, 260, 54, 1, 0, 0, 0, 261, 262, 5, 46, 0, 0, 262, 56, 1, 0,
		0, 0, 263, 264, 5, 60, 0, 0, 264, 58, 1, 0, 0, 0, 265, 266, 5, 61, 0, 0,
		266, 60, 1, 0, 0, 0, 267, 268, 5, 63, 0, 0, 268, 62, 1, 0, 0, 0, 269, 270,
		5, 40, 0, 0, 270, 64, 1, 0, 0, 0, 271, 272, 5, 44, 0, 0, 272, 66, 1, 0,
		0, 0, 273, 274, 5, 41, 0, 0, 274, 68, 1, 0, 0, 0, 275, 276, 5, 91, 0, 0,
		276, 70, 1, 0, 0, 0, 277, 278, 5, 93, 0, 0, 278, 72, 1, 0, 0, 0, 279, 280,
		5, 123, 0, 0, 280, 74, 1, 0, 0, 0, 281, 282, 5, 125, 0, 0, 282, 76, 1,
		0, 0, 0, 283, 284, 5, 35, 0, 0, 284, 78, 1, 0, 0, 0, 285, 286, 5, 36, 0,
		0, 286, 80, 1, 0, 0, 0, 287, 288, 5, 58, 0, 0, 288, 82, 1, 0, 0, 0, 289,
		290, 5, 37, 0, 0, 290, 84, 1, 0, 0, 0, 291, 292, 5, 33, 0, 0, 292, 86,
		1, 0, 0, 0, 293, 294, 5, 42, 0, 0, 294, 88, 1, 0, 0, 0, 295, 296, 5, 45,
		0, 0, 296, 90, 1, 0, 0, 0, 297, 298, 5, 97, 0, 0, 298, 299, 5, 115, 0,
		0, 299, 92, 1, 0, 0, 0, 300, 301, 5, 96, 0, 0, 301, 94, 1, 0, 0, 0, 302,
		303, 5, 39, 0, 0, 303, 96, 1, 0, 0, 0, 304, 305, 5, 34, 0, 0, 305, 98,
		1, 0, 0, 0, 306, 307, 5, 47, 0, 0, 307, 308, 5, 47, 0, 0, 308, 312, 1,
		0, 0, 0, 309, 311, 8, 0, 0, 0, 310, 309, 1, 0, 0, 0, 311, 314, 1, 0, 0,
		0, 312, 310, 1, 0, 0, 0, 312, 313, 1, 0, 0, 0, 313, 100, 1, 0, 0, 0, 314,
		312, 1, 0, 0, 0, 315, 316, 7, 1, 0, 0, 316, 317, 1, 0, 0, 0, 317, 318,
		6, 50, 0, 0, 318, 102, 1, 0, 0, 0, 319, 321, 3, 169, 84, 0, 320, 319, 1,
		0, 0, 0, 321, 322, 1, 0, 0, 0, 322, 320, 1, 0, 0, 0, 322, 323, 1, 0, 0,
		0, 323, 104, 1, 0, 0, 0, 324, 325, 5, 48, 0, 0, 325, 326, 5, 111, 0, 0,
		326, 328, 1, 0, 0, 0, 327, 329, 3, 171, 85, 0, 328, 327, 1, 0, 0, 0, 329,
		330, 1, 0, 0, 0, 330, 328, 1, 0, 0, 0, 330, 331, 1, 0, 0, 0, 331, 106,
		1, 0, 0, 0, 332, 333, 5, 48, 0, 0, 333, 334, 5, 98, 0, 0, 334, 336, 1,
		0, 0, 0, 335, 337, 2, 48, 49, 0, 336, 335, 1, 0, 0, 0, 337, 338, 1, 0,
		0, 0, 338, 336, 1, 0, 0, 0, 338, 339, 1, 0, 0, 0, 339, 108, 1, 0, 0, 0,
		340, 341, 5, 48, 0, 0, 341, 342, 5, 120, 0, 0, 342, 344, 1, 0, 0, 0, 343,
		345, 3, 167, 83, 0, 344, 343, 1, 0, 0, 0, 345, 346, 1, 0, 0, 0, 346, 344,
		1, 0, 0, 0, 346, 347, 1, 0, 0, 0, 347, 110, 1, 0, 0, 0, 348, 349, 5, 115,
		0, 0, 349, 350, 5, 116, 0, 0, 350, 351, 5, 114, 0, 0, 351, 112, 1, 0, 0,
		0, 352, 353, 5, 108, 0, 0, 353, 354, 5, 105, 0, 0, 354, 355, 5, 115, 0,
		0, 355, 356, 5, 116, 0, 0, 356, 114, 1, 0, 0, 0, 357, 358, 5, 100, 0, 0,
		358, 359, 5, 105, 0, 0, 359, 360, 5, 99, 0, 0, 360, 361, 5, 116, 0, 0,
		361, 116, 1, 0, 0, 0, 362, 363, 5, 105, 0, 0, 363, 364, 5, 110, 0, 0, 364,
		371, 5, 116, 0, 0, 365, 366, 5, 102, 0, 0, 366, 367, 5, 108, 0, 0, 367,
		368, 5, 111, 0, 0, 368, 369, 5, 97, 0, 0, 369, 371, 5, 116, 0, 0, 370,
		362, 1, 0, 0, 0, 370, 365, 1, 0, 0, 0, 371, 118, 1, 0, 0, 0, 372, 373,
		5, 98, 0, 0, 373, 374, 5, 111, 0, 0, 374, 375, 5, 111, 0, 0, 375, 376,
		5, 108, 0, 0, 376, 120, 1, 0, 0, 0, 377, 378, 5, 116, 0, 0, 378, 379, 5,
		114, 0, 0, 379, 380, 5, 117, 0, 0, 380, 387, 5, 101, 0, 0, 381, 382, 5,
		102, 0, 0, 382, 383, 5, 97, 0, 0, 383, 384, 5, 108, 0, 0, 384, 385, 5,
		115, 0, 0, 385, 387, 5, 101, 0, 0, 386, 377, 1, 0, 0, 0, 386, 381, 1, 0,
		0, 0, 387, 122, 1, 0, 0, 0, 388, 389, 5, 97, 0, 0, 389, 390, 5, 108, 0,
		0, 390, 391, 5, 101, 0, 0, 391, 392, 5, 114, 0, 0, 392, 393, 5, 116, 0,
		0, 393, 124, 1, 0, 0, 0, 394, 395, 5, 99, 0, 0, 395, 396, 5, 104, 0, 0,
		396, 397, 5, 101, 0, 0, 397, 398, 5, 99, 0, 0, 398, 399, 5, 107, 0, 0,
		399, 126, 1, 0, 0, 0, 400, 401, 5, 116, 0, 0, 401, 402, 5, 104, 0, 0, 402,
		403, 5, 101, 0, 0, 403, 404, 5, 110, 0, 0, 404, 128, 1, 0, 0, 0, 405, 406,
		5, 100, 0, 0, 406, 407, 5, 101, 0, 0, 407, 408, 5, 115, 0, 0, 408, 414,
		5, 99, 0, 0, 409, 410, 5, 110, 0, 0, 410, 411, 5, 111, 0, 0, 411, 412,
		5, 116, 0, 0, 412, 414, 5, 101, 0, 0, 413, 405, 1, 0, 0, 0, 413, 409, 1,
		0, 0, 0, 414, 130, 1, 0, 0, 0, 415, 416, 5, 101, 0, 0, 416, 417, 5, 108,
		0, 0, 417, 418, 5, 115, 0, 0, 418, 419, 5, 101, 0, 0, 419, 132, 1, 0, 0,
		0, 420, 421, 5, 116, 0, 0, 421, 422, 5, 121, 0, 0, 422, 423, 5, 112, 0,
		0, 423, 424, 5, 101, 0, 0, 424, 134, 1, 0, 0, 0, 425, 426, 5, 105, 0, 0,
		426, 427, 5, 110, 0, 0, 427, 136, 1, 0, 0, 0, 428, 429, 5, 99, 0, 0, 429,
		430, 5, 97, 0, 0, 430, 431, 5, 108, 0, 0, 431, 432, 5, 108, 0, 0, 432,
		138, 1, 0, 0, 0, 433, 434, 5, 102, 0, 0, 434, 435, 5, 117, 0, 0, 435, 436,
		5, 110, 0, 0, 436, 437, 5, 99, 0, 0, 437, 438, 5, 116, 0, 0, 438, 439,
		5, 105, 0, 0, 439, 440, 5, 111, 0, 0, 440, 441, 5, 110, 0, 0, 441, 140,
		1, 0, 0, 0, 442, 443, 5, 99, 0, 0, 443, 444, 5, 111, 0, 0, 444, 445, 5,
		110, 0, 0, 445, 446, 5, 115, 0, 0, 446, 456, 5, 116, 0, 0, 447, 448, 5,
		99, 0, 0, 448, 449, 5, 111, 0, 0, 449, 450, 5, 110, 0, 0, 450, 451, 5,
		115, 0, 0, 451, 452, 5, 116, 0, 0, 452, 453, 5, 97, 0, 0, 453, 454, 5,
		110, 0, 0, 454, 456, 5, 116, 0, 0, 455, 442, 1, 0, 0, 0, 455, 447, 1, 0,
		0, 0, 456, 142, 1, 0, 0, 0, 457, 458, 5, 112, 0, 0, 458, 459, 5, 104, 0,
		0, 459, 460, 5, 105, 0, 0, 460, 144, 1, 0, 0, 0, 461, 462, 5, 112, 0, 0,
		462, 463, 5, 97, 0, 0, 463, 464, 5, 114, 0, 0, 464, 465, 5, 97, 0, 0, 465,
		479, 5, 109, 0, 0, 466, 467, 5, 102, 0, 0, 467, 468, 5, 111, 0, 0, 468,
		469, 5, 114, 0, 0, 469, 470, 5, 109, 0, 0, 470, 471, 5, 97, 0, 0, 471,
		472, 5, 108, 0, 0, 472, 473, 5, 95, 0, 0, 473, 474, 5, 112, 0, 0, 474,
		475, 5, 97, 0, 0, 475, 476, 5, 114, 0, 0, 476, 477, 5, 97, 0, 0, 477, 479,
		5, 109, 0, 0, 478, 461, 1, 0, 0, 0, 478, 466, 1, 0, 0, 0, 479, 146, 1,
		0, 0, 0, 480, 481, 5, 114, 0, 0, 481, 482, 5, 101, 0, 0, 482, 483, 5, 116,
		0, 0, 483, 484, 5, 117, 0, 0, 484, 485, 5, 114, 0, 0, 485, 490, 5, 110,
		0, 0, 486, 487, 5, 114, 0, 0, 487, 488, 5, 101, 0, 0, 488, 490, 5, 116,
		0, 0, 489, 480, 1, 0, 0, 0, 489, 486, 1, 0, 0, 0, 490, 148, 1, 0, 0, 0,
		491, 492, 5, 111, 0, 0, 492, 493, 5, 112, 0, 0, 493, 494, 5, 99, 0, 0,
		494, 495, 5, 111, 0, 0, 495, 496, 5, 100, 0, 0, 496, 497, 5, 101, 0, 0,
		497, 150, 1, 0, 0, 0, 498, 499, 5, 104, 0, 0, 499, 500, 5, 97, 0, 0, 500,
		501, 5, 118, 0, 0, 501, 502, 5, 101, 0, 0, 502, 152, 1, 0, 0, 0, 503, 504,
		5, 97, 0, 0, 504, 505, 5, 110, 0, 0, 505, 506, 5, 121, 0, 0, 506, 154,
		1, 0, 0, 0, 507, 508, 5, 110, 0, 0, 508, 509, 5, 111, 0, 0, 509, 510, 5,
		116, 0, 0, 510, 156, 1, 0, 0, 0, 511, 512, 5, 102, 0, 0, 512, 513, 5, 111,
		0, 0, 513, 514, 5, 114, 0, 0, 514, 158, 1, 0, 0, 0, 515, 519, 3, 165, 82,
		0, 516, 518, 3, 161, 80, 0, 517, 516, 1, 0, 0, 0, 518, 521, 1, 0, 0, 0,
		519, 517, 1, 0, 0, 0, 519, 520, 1, 0, 0, 0, 520, 160, 1, 0, 0, 0, 521,
		519, 1, 0, 0, 0, 522, 525, 7, 2, 0, 0, 523, 525, 3, 165, 82, 0, 524, 522,
		1, 0, 0, 0, 524, 523, 1, 0, 0, 0, 525, 162, 1, 0, 0, 0, 526, 535, 3, 95,
		47, 0, 527, 534, 8, 3, 0, 0, 528, 529, 5, 92, 0, 0, 529, 534, 5, 39, 0,
		0, 530, 531, 5, 92, 0, 0, 531, 534, 5, 92, 0, 0, 532, 534, 5, 92, 0, 0,
		533, 527, 1, 0, 0, 0, 533, 528, 1, 0, 0, 0, 533, 530, 1, 0, 0, 0, 533,
		532, 1, 0, 0, 0, 534, 537, 1, 0, 0, 0, 535, 533, 1, 0, 0, 0, 535, 536,
		1, 0, 0, 0, 536, 538, 1, 0, 0, 0, 537, 535, 1, 0, 0, 0, 538, 539, 3, 95,
		47, 0, 539, 555, 1, 0, 0, 0, 540, 549, 3, 97, 48, 0, 541, 548, 8, 4, 0,
		0, 542, 543, 5, 92, 0, 0, 543, 548, 5, 34, 0, 0, 544, 545, 5, 92, 0, 0,
		545, 548, 5, 92, 0, 0, 546, 548, 5, 92, 0, 0, 547, 541, 1, 0, 0, 0, 547,
		542, 1, 0, 0, 0, 547, 544, 1, 0, 0, 0, 547, 546, 1, 0, 0, 0, 548, 551,
		1, 0, 0, 0, 549, 547, 1, 0, 0, 0, 549, 550, 1, 0, 0, 0, 550, 552, 1, 0,
		0, 0, 551, 549, 1, 0, 0, 0, 552, 553, 3, 97, 48, 0, 553, 555, 1, 0, 0,
		0, 554, 526, 1, 0, 0, 0, 554, 540, 1, 0, 0, 0, 555, 164, 1, 0, 0, 0, 556,
		558, 7, 5, 0, 0, 557, 556, 1, 0, 0, 0, 558, 166, 1, 0, 0, 0, 559, 560,
		7, 6, 0, 0, 560, 168, 1, 0, 0, 0, 561, 562, 7, 2, 0, 0, 562, 170, 1, 0,
		0, 0, 563, 564, 7, 7, 0, 0, 564, 172, 1, 0, 0, 0, 565, 567, 5, 47, 0, 0,
		566, 568, 3, 175, 87, 0, 567, 566, 1, 0, 0, 0, 568, 569, 1, 0, 0, 0, 569,
		567, 1, 0, 0, 0, 569, 570, 1, 0, 0, 0, 570, 571, 1, 0, 0, 0, 571, 572,
		5, 47, 0, 0, 572, 174, 1, 0, 0, 0, 573, 574, 5, 92, 0, 0, 574, 577, 5,
		47, 0, 0, 575, 577, 8, 8, 0, 0, 576, 573, 1, 0, 0, 0, 576, 575, 1, 0, 0,
		0, 577, 176, 1, 0, 0, 0, 578, 580, 7, 9, 0, 0, 579, 578, 1, 0, 0, 0, 580,
		581, 1, 0, 0, 0, 581, 579, 1, 0, 0, 0, 581, 582, 1, 0, 0, 0, 582, 583,
		1, 0, 0, 0, 583, 584, 6, 88, 0, 0, 584, 178, 1, 0, 0, 0, 23, 0, 312, 322,
		330, 338, 346, 370, 386, 413, 455, 478, 489, 519, 524, 533, 535, 547, 549,
		554, 557, 569, 576, 581, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// SyntaxFlowLexerInit initializes any static state used to implement SyntaxFlowLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewSyntaxFlowLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func SyntaxFlowLexerInit() {
	staticData := &syntaxflowlexerLexerStaticData
	staticData.once.Do(syntaxflowlexerLexerInit)
}

// NewSyntaxFlowLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewSyntaxFlowLexer(input antlr.CharStream) *SyntaxFlowLexer {
	SyntaxFlowLexerInit()
	l := new(SyntaxFlowLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &syntaxflowlexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "SyntaxFlow.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// SyntaxFlowLexer tokens.
const (
	SyntaxFlowLexerT__0                = 1
	SyntaxFlowLexerT__1                = 2
	SyntaxFlowLexerT__2                = 3
	SyntaxFlowLexerT__3                = 4
	SyntaxFlowLexerT__4                = 5
	SyntaxFlowLexerT__5                = 6
	SyntaxFlowLexerDeepFilter          = 7
	SyntaxFlowLexerDeep                = 8
	SyntaxFlowLexerPercent             = 9
	SyntaxFlowLexerDeepDot             = 10
	SyntaxFlowLexerLtEq                = 11
	SyntaxFlowLexerGtEq                = 12
	SyntaxFlowLexerDoubleGt            = 13
	SyntaxFlowLexerFilter              = 14
	SyntaxFlowLexerEqEq                = 15
	SyntaxFlowLexerRegexpMatch         = 16
	SyntaxFlowLexerNotRegexpMatch      = 17
	SyntaxFlowLexerAnd                 = 18
	SyntaxFlowLexerOr                  = 19
	SyntaxFlowLexerNotEq               = 20
	SyntaxFlowLexerConditionStart      = 21
	SyntaxFlowLexerDeepNextStart       = 22
	SyntaxFlowLexerDeepNextEnd         = 23
	SyntaxFlowLexerTopDefStart         = 24
	SyntaxFlowLexerDefStart            = 25
	SyntaxFlowLexerTopDef              = 26
	SyntaxFlowLexerGt                  = 27
	SyntaxFlowLexerDot                 = 28
	SyntaxFlowLexerLt                  = 29
	SyntaxFlowLexerEq                  = 30
	SyntaxFlowLexerQuestion            = 31
	SyntaxFlowLexerOpenParen           = 32
	SyntaxFlowLexerComma               = 33
	SyntaxFlowLexerCloseParen          = 34
	SyntaxFlowLexerListSelectOpen      = 35
	SyntaxFlowLexerListSelectClose     = 36
	SyntaxFlowLexerMapBuilderOpen      = 37
	SyntaxFlowLexerMapBuilderClose     = 38
	SyntaxFlowLexerListStart           = 39
	SyntaxFlowLexerDollarOutput        = 40
	SyntaxFlowLexerColon               = 41
	SyntaxFlowLexerSearch              = 42
	SyntaxFlowLexerBang                = 43
	SyntaxFlowLexerStar                = 44
	SyntaxFlowLexerMinus               = 45
	SyntaxFlowLexerAs                  = 46
	SyntaxFlowLexerBacktick            = 47
	SyntaxFlowLexerSingleQuote         = 48
	SyntaxFlowLexerDoubleQuote         = 49
	SyntaxFlowLexerLineComment         = 50
	SyntaxFlowLexerWhiteSpace          = 51
	SyntaxFlowLexerNumber              = 52
	SyntaxFlowLexerOctalNumber         = 53
	SyntaxFlowLexerBinaryNumber        = 54
	SyntaxFlowLexerHexNumber           = 55
	SyntaxFlowLexerStringType          = 56
	SyntaxFlowLexerListType            = 57
	SyntaxFlowLexerDictType            = 58
	SyntaxFlowLexerNumberType          = 59
	SyntaxFlowLexerBoolType            = 60
	SyntaxFlowLexerBoolLiteral         = 61
	SyntaxFlowLexerAlert               = 62
	SyntaxFlowLexerCheck               = 63
	SyntaxFlowLexerThen                = 64
	SyntaxFlowLexerDesc                = 65
	SyntaxFlowLexerElse                = 66
	SyntaxFlowLexerType                = 67
	SyntaxFlowLexerIn                  = 68
	SyntaxFlowLexerCall                = 69
	SyntaxFlowLexerFunction            = 70
	SyntaxFlowLexerConstant            = 71
	SyntaxFlowLexerPhi                 = 72
	SyntaxFlowLexerFormalParam         = 73
	SyntaxFlowLexerReturn              = 74
	SyntaxFlowLexerOpcode              = 75
	SyntaxFlowLexerHave                = 76
	SyntaxFlowLexerHaveAny             = 77
	SyntaxFlowLexerNot                 = 78
	SyntaxFlowLexerFor                 = 79
	SyntaxFlowLexerIdentifier          = 80
	SyntaxFlowLexerIdentifierChar      = 81
	SyntaxFlowLexerQuotedStringLiteral = 82
	SyntaxFlowLexerRegexpLiteral       = 83
	SyntaxFlowLexerWS                  = 84
)

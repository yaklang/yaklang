// Code generated from ./SuricataRuleLexer.g4 by ANTLR 4.12.0. DO NOT EDIT.

package parser

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr/v4"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type SuricataRuleLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var suricatarulelexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func suricatarulelexerLexerInit() {
	staticData := &suricatarulelexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE", "PARAM_MODE",
	}
	staticData.literalNames = []string{
		"", "'any'", "'!'", "'$'", "'->'", "'*'", "'/'", "'%'", "'&'", "'+'",
		"'-'", "'^'", "'<'", "'>'", "'<='", "'>='", "':'", "'::'", "'['", "']'",
		"'('", "'{'", "'}'", "','", "'='", "'~'", "'.'", "", "", "", "", "",
		"", "", "", "", "", "';'", "", "')'",
	}
	staticData.symbolicNames = []string{
		"", "Any", "Negative", "Dollar", "Arrow", "Mul", "Div", "Mod", "Amp",
		"Plus", "Sub", "Power", "Lt", "Gt", "LtEq", "GtEq", "Colon", "DoubleColon",
		"LBracket", "RBracket", "ParamStart", "LBrace", "RBrace", "Comma", "Eq",
		"NotSymbol", "Dot", "LINE_COMMENT", "ID", "NORMALSTRING", "INT", "HEX",
		"FLOAT", "WS", "NonSemiColon", "SHEBANG", "ParamQuotedString", "ParamSep",
		"ParamValue", "ParamEnd",
	}
	staticData.ruleNames = []string{
		"Any", "Negative", "Dollar", "Arrow", "Mul", "Div", "Mod", "Amp", "Plus",
		"Sub", "Power", "Lt", "Gt", "LtEq", "GtEq", "Colon", "DoubleColon",
		"LBracket", "RBracket", "ParamStart", "LBrace", "RBrace", "Comma", "Eq",
		"NotSymbol", "Dot", "LINE_COMMENT", "ID", "NORMALSTRING", "INT", "HEX",
		"FLOAT", "ExponentPart", "HexExponentPart", "EscapeSequence", "DecimalEscape",
		"HexEscape", "UtfEscape", "Digit", "HexDigit", "SingleLineInputCharacter",
		"WS", "NonSemiColon", "SHEBANG", "Quote", "CharInQuotedString", "ParamQuotedString",
		"ParamSep", "ParamValue", "ParamEnd", "FreeValueAnyChar",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 39, 350, 6, -1, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3,
		7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9,
		7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7,
		14, 2, 15, 7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19,
		2, 20, 7, 20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2,
		25, 7, 25, 2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30,
		7, 30, 2, 31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7,
		35, 2, 36, 7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40,
		2, 41, 7, 41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2,
		46, 7, 46, 2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 1, 0,
		1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4,
		1, 5, 1, 5, 1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 1, 8, 1, 9, 1, 9, 1, 10, 1, 10,
		1, 11, 1, 11, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1,
		15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 18, 1, 18, 1, 19, 1, 19,
		1, 19, 1, 19, 1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 1, 22, 1, 23, 1, 23, 1,
		24, 1, 24, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 3, 26, 168, 8, 26, 1, 26,
		5, 26, 171, 8, 26, 10, 26, 12, 26, 174, 9, 26, 1, 26, 1, 26, 1, 27, 1,
		27, 5, 27, 180, 8, 27, 10, 27, 12, 27, 183, 9, 27, 1, 28, 1, 28, 1, 28,
		5, 28, 188, 8, 28, 10, 28, 12, 28, 191, 9, 28, 1, 28, 1, 28, 1, 29, 4,
		29, 196, 8, 29, 11, 29, 12, 29, 197, 1, 30, 4, 30, 201, 8, 30, 11, 30,
		12, 30, 202, 1, 31, 4, 31, 206, 8, 31, 11, 31, 12, 31, 207, 1, 31, 1, 31,
		5, 31, 212, 8, 31, 10, 31, 12, 31, 215, 9, 31, 1, 31, 3, 31, 218, 8, 31,
		1, 31, 1, 31, 4, 31, 222, 8, 31, 11, 31, 12, 31, 223, 1, 31, 3, 31, 227,
		8, 31, 1, 31, 4, 31, 230, 8, 31, 11, 31, 12, 31, 231, 1, 31, 1, 31, 3,
		31, 236, 8, 31, 1, 32, 1, 32, 3, 32, 240, 8, 32, 1, 32, 4, 32, 243, 8,
		32, 11, 32, 12, 32, 244, 1, 33, 1, 33, 3, 33, 249, 8, 33, 1, 33, 4, 33,
		252, 8, 33, 11, 33, 12, 33, 253, 1, 34, 1, 34, 1, 34, 1, 34, 3, 34, 260,
		8, 34, 1, 34, 1, 34, 1, 34, 1, 34, 3, 34, 266, 8, 34, 1, 35, 1, 35, 1,
		35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 3, 35, 279,
		8, 35, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 37, 1, 37, 1, 37, 1, 37, 1,
		37, 4, 37, 291, 8, 37, 11, 37, 12, 37, 292, 1, 37, 1, 37, 1, 38, 1, 38,
		1, 39, 1, 39, 1, 40, 1, 40, 1, 41, 4, 41, 304, 8, 41, 11, 41, 12, 41, 305,
		1, 41, 1, 41, 1, 42, 4, 42, 311, 8, 42, 11, 42, 12, 42, 312, 1, 43, 1,
		43, 1, 43, 5, 43, 318, 8, 43, 10, 43, 12, 43, 321, 9, 43, 1, 43, 1, 43,
		1, 44, 1, 44, 1, 45, 1, 45, 1, 46, 1, 46, 5, 46, 331, 8, 46, 10, 46, 12,
		46, 334, 9, 46, 1, 46, 1, 46, 1, 47, 1, 47, 1, 48, 4, 48, 341, 8, 48, 11,
		48, 12, 48, 342, 1, 49, 1, 49, 1, 49, 1, 49, 1, 50, 1, 50, 0, 0, 51, 2,
		1, 4, 2, 6, 3, 8, 4, 10, 5, 12, 6, 14, 7, 16, 8, 18, 9, 20, 10, 22, 11,
		24, 12, 26, 13, 28, 14, 30, 15, 32, 16, 34, 17, 36, 18, 38, 19, 40, 20,
		42, 21, 44, 22, 46, 23, 48, 24, 50, 25, 52, 26, 54, 27, 56, 28, 58, 29,
		60, 30, 62, 31, 64, 32, 66, 0, 68, 0, 70, 0, 72, 0, 74, 0, 76, 0, 78, 0,
		80, 0, 82, 0, 84, 33, 86, 34, 88, 35, 90, 0, 92, 0, 94, 36, 96, 37, 98,
		38, 100, 39, 102, 0, 2, 0, 1, 15, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0,
		48, 57, 65, 90, 95, 95, 97, 122, 2, 0, 34, 34, 92, 92, 2, 0, 69, 69, 101,
		101, 2, 0, 43, 43, 45, 45, 2, 0, 80, 80, 112, 112, 11, 0, 34, 36, 39, 39,
		92, 92, 97, 98, 102, 102, 110, 110, 114, 114, 116, 116, 118, 118, 122,
		122, 124, 124, 1, 0, 48, 50, 1, 0, 48, 57, 3, 0, 48, 57, 65, 70, 97, 102,
		4, 0, 10, 10, 13, 13, 133, 133, 8232, 8233, 3, 0, 9, 10, 12, 13, 32, 32,
		2, 0, 59, 59, 94, 94, 1, 0, 34, 34, 3, 0, 34, 34, 41, 41, 59, 59, 368,
		0, 2, 1, 0, 0, 0, 0, 4, 1, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 8, 1, 0, 0, 0,
		0, 10, 1, 0, 0, 0, 0, 12, 1, 0, 0, 0, 0, 14, 1, 0, 0, 0, 0, 16, 1, 0, 0,
		0, 0, 18, 1, 0, 0, 0, 0, 20, 1, 0, 0, 0, 0, 22, 1, 0, 0, 0, 0, 24, 1, 0,
		0, 0, 0, 26, 1, 0, 0, 0, 0, 28, 1, 0, 0, 0, 0, 30, 1, 0, 0, 0, 0, 32, 1,
		0, 0, 0, 0, 34, 1, 0, 0, 0, 0, 36, 1, 0, 0, 0, 0, 38, 1, 0, 0, 0, 0, 40,
		1, 0, 0, 0, 0, 42, 1, 0, 0, 0, 0, 44, 1, 0, 0, 0, 0, 46, 1, 0, 0, 0, 0,
		48, 1, 0, 0, 0, 0, 50, 1, 0, 0, 0, 0, 52, 1, 0, 0, 0, 0, 54, 1, 0, 0, 0,
		0, 56, 1, 0, 0, 0, 0, 58, 1, 0, 0, 0, 0, 60, 1, 0, 0, 0, 0, 62, 1, 0, 0,
		0, 0, 64, 1, 0, 0, 0, 0, 84, 1, 0, 0, 0, 0, 86, 1, 0, 0, 0, 0, 88, 1, 0,
		0, 0, 1, 94, 1, 0, 0, 0, 1, 96, 1, 0, 0, 0, 1, 98, 1, 0, 0, 0, 1, 100,
		1, 0, 0, 0, 2, 104, 1, 0, 0, 0, 4, 108, 1, 0, 0, 0, 6, 110, 1, 0, 0, 0,
		8, 112, 1, 0, 0, 0, 10, 115, 1, 0, 0, 0, 12, 117, 1, 0, 0, 0, 14, 119,
		1, 0, 0, 0, 16, 121, 1, 0, 0, 0, 18, 123, 1, 0, 0, 0, 20, 125, 1, 0, 0,
		0, 22, 127, 1, 0, 0, 0, 24, 129, 1, 0, 0, 0, 26, 131, 1, 0, 0, 0, 28, 133,
		1, 0, 0, 0, 30, 136, 1, 0, 0, 0, 32, 139, 1, 0, 0, 0, 34, 141, 1, 0, 0,
		0, 36, 144, 1, 0, 0, 0, 38, 146, 1, 0, 0, 0, 40, 148, 1, 0, 0, 0, 42, 152,
		1, 0, 0, 0, 44, 154, 1, 0, 0, 0, 46, 156, 1, 0, 0, 0, 48, 158, 1, 0, 0,
		0, 50, 160, 1, 0, 0, 0, 52, 162, 1, 0, 0, 0, 54, 167, 1, 0, 0, 0, 56, 177,
		1, 0, 0, 0, 58, 184, 1, 0, 0, 0, 60, 195, 1, 0, 0, 0, 62, 200, 1, 0, 0,
		0, 64, 235, 1, 0, 0, 0, 66, 237, 1, 0, 0, 0, 68, 246, 1, 0, 0, 0, 70, 265,
		1, 0, 0, 0, 72, 278, 1, 0, 0, 0, 74, 280, 1, 0, 0, 0, 76, 285, 1, 0, 0,
		0, 78, 296, 1, 0, 0, 0, 80, 298, 1, 0, 0, 0, 82, 300, 1, 0, 0, 0, 84, 303,
		1, 0, 0, 0, 86, 310, 1, 0, 0, 0, 88, 314, 1, 0, 0, 0, 90, 324, 1, 0, 0,
		0, 92, 326, 1, 0, 0, 0, 94, 328, 1, 0, 0, 0, 96, 337, 1, 0, 0, 0, 98, 340,
		1, 0, 0, 0, 100, 344, 1, 0, 0, 0, 102, 348, 1, 0, 0, 0, 104, 105, 5, 97,
		0, 0, 105, 106, 5, 110, 0, 0, 106, 107, 5, 121, 0, 0, 107, 3, 1, 0, 0,
		0, 108, 109, 5, 33, 0, 0, 109, 5, 1, 0, 0, 0, 110, 111, 5, 36, 0, 0, 111,
		7, 1, 0, 0, 0, 112, 113, 5, 45, 0, 0, 113, 114, 5, 62, 0, 0, 114, 9, 1,
		0, 0, 0, 115, 116, 5, 42, 0, 0, 116, 11, 1, 0, 0, 0, 117, 118, 5, 47, 0,
		0, 118, 13, 1, 0, 0, 0, 119, 120, 5, 37, 0, 0, 120, 15, 1, 0, 0, 0, 121,
		122, 5, 38, 0, 0, 122, 17, 1, 0, 0, 0, 123, 124, 5, 43, 0, 0, 124, 19,
		1, 0, 0, 0, 125, 126, 5, 45, 0, 0, 126, 21, 1, 0, 0, 0, 127, 128, 5, 94,
		0, 0, 128, 23, 1, 0, 0, 0, 129, 130, 5, 60, 0, 0, 130, 25, 1, 0, 0, 0,
		131, 132, 5, 62, 0, 0, 132, 27, 1, 0, 0, 0, 133, 134, 5, 60, 0, 0, 134,
		135, 5, 61, 0, 0, 135, 29, 1, 0, 0, 0, 136, 137, 5, 62, 0, 0, 137, 138,
		5, 61, 0, 0, 138, 31, 1, 0, 0, 0, 139, 140, 5, 58, 0, 0, 140, 33, 1, 0,
		0, 0, 141, 142, 5, 58, 0, 0, 142, 143, 5, 58, 0, 0, 143, 35, 1, 0, 0, 0,
		144, 145, 5, 91, 0, 0, 145, 37, 1, 0, 0, 0, 146, 147, 5, 93, 0, 0, 147,
		39, 1, 0, 0, 0, 148, 149, 5, 40, 0, 0, 149, 150, 1, 0, 0, 0, 150, 151,
		6, 19, 0, 0, 151, 41, 1, 0, 0, 0, 152, 153, 5, 123, 0, 0, 153, 43, 1, 0,
		0, 0, 154, 155, 5, 125, 0, 0, 155, 45, 1, 0, 0, 0, 156, 157, 5, 44, 0,
		0, 157, 47, 1, 0, 0, 0, 158, 159, 5, 61, 0, 0, 159, 49, 1, 0, 0, 0, 160,
		161, 5, 126, 0, 0, 161, 51, 1, 0, 0, 0, 162, 163, 5, 46, 0, 0, 163, 53,
		1, 0, 0, 0, 164, 168, 5, 35, 0, 0, 165, 166, 5, 47, 0, 0, 166, 168, 5,
		47, 0, 0, 167, 164, 1, 0, 0, 0, 167, 165, 1, 0, 0, 0, 168, 172, 1, 0, 0,
		0, 169, 171, 3, 82, 40, 0, 170, 169, 1, 0, 0, 0, 171, 174, 1, 0, 0, 0,
		172, 170, 1, 0, 0, 0, 172, 173, 1, 0, 0, 0, 173, 175, 1, 0, 0, 0, 174,
		172, 1, 0, 0, 0, 175, 176, 6, 26, 1, 0, 176, 55, 1, 0, 0, 0, 177, 181,
		7, 0, 0, 0, 178, 180, 7, 1, 0, 0, 179, 178, 1, 0, 0, 0, 180, 183, 1, 0,
		0, 0, 181, 179, 1, 0, 0, 0, 181, 182, 1, 0, 0, 0, 182, 57, 1, 0, 0, 0,
		183, 181, 1, 0, 0, 0, 184, 189, 5, 34, 0, 0, 185, 188, 3, 70, 34, 0, 186,
		188, 8, 2, 0, 0, 187, 185, 1, 0, 0, 0, 187, 186, 1, 0, 0, 0, 188, 191,
		1, 0, 0, 0, 189, 187, 1, 0, 0, 0, 189, 190, 1, 0, 0, 0, 190, 192, 1, 0,
		0, 0, 191, 189, 1, 0, 0, 0, 192, 193, 5, 34, 0, 0, 193, 59, 1, 0, 0, 0,
		194, 196, 3, 78, 38, 0, 195, 194, 1, 0, 0, 0, 196, 197, 1, 0, 0, 0, 197,
		195, 1, 0, 0, 0, 197, 198, 1, 0, 0, 0, 198, 61, 1, 0, 0, 0, 199, 201, 3,
		80, 39, 0, 200, 199, 1, 0, 0, 0, 201, 202, 1, 0, 0, 0, 202, 200, 1, 0,
		0, 0, 202, 203, 1, 0, 0, 0, 203, 63, 1, 0, 0, 0, 204, 206, 3, 78, 38, 0,
		205, 204, 1, 0, 0, 0, 206, 207, 1, 0, 0, 0, 207, 205, 1, 0, 0, 0, 207,
		208, 1, 0, 0, 0, 208, 209, 1, 0, 0, 0, 209, 213, 5, 46, 0, 0, 210, 212,
		3, 78, 38, 0, 211, 210, 1, 0, 0, 0, 212, 215, 1, 0, 0, 0, 213, 211, 1,
		0, 0, 0, 213, 214, 1, 0, 0, 0, 214, 217, 1, 0, 0, 0, 215, 213, 1, 0, 0,
		0, 216, 218, 3, 66, 32, 0, 217, 216, 1, 0, 0, 0, 217, 218, 1, 0, 0, 0,
		218, 236, 1, 0, 0, 0, 219, 221, 5, 46, 0, 0, 220, 222, 3, 78, 38, 0, 221,
		220, 1, 0, 0, 0, 222, 223, 1, 0, 0, 0, 223, 221, 1, 0, 0, 0, 223, 224,
		1, 0, 0, 0, 224, 226, 1, 0, 0, 0, 225, 227, 3, 66, 32, 0, 226, 225, 1,
		0, 0, 0, 226, 227, 1, 0, 0, 0, 227, 236, 1, 0, 0, 0, 228, 230, 3, 78, 38,
		0, 229, 228, 1, 0, 0, 0, 230, 231, 1, 0, 0, 0, 231, 229, 1, 0, 0, 0, 231,
		232, 1, 0, 0, 0, 232, 233, 1, 0, 0, 0, 233, 234, 3, 66, 32, 0, 234, 236,
		1, 0, 0, 0, 235, 205, 1, 0, 0, 0, 235, 219, 1, 0, 0, 0, 235, 229, 1, 0,
		0, 0, 236, 65, 1, 0, 0, 0, 237, 239, 7, 3, 0, 0, 238, 240, 7, 4, 0, 0,
		239, 238, 1, 0, 0, 0, 239, 240, 1, 0, 0, 0, 240, 242, 1, 0, 0, 0, 241,
		243, 3, 78, 38, 0, 242, 241, 1, 0, 0, 0, 243, 244, 1, 0, 0, 0, 244, 242,
		1, 0, 0, 0, 244, 245, 1, 0, 0, 0, 245, 67, 1, 0, 0, 0, 246, 248, 7, 5,
		0, 0, 247, 249, 7, 4, 0, 0, 248, 247, 1, 0, 0, 0, 248, 249, 1, 0, 0, 0,
		249, 251, 1, 0, 0, 0, 250, 252, 3, 78, 38, 0, 251, 250, 1, 0, 0, 0, 252,
		253, 1, 0, 0, 0, 253, 251, 1, 0, 0, 0, 253, 254, 1, 0, 0, 0, 254, 69, 1,
		0, 0, 0, 255, 256, 5, 92, 0, 0, 256, 266, 7, 6, 0, 0, 257, 259, 5, 92,
		0, 0, 258, 260, 5, 13, 0, 0, 259, 258, 1, 0, 0, 0, 259, 260, 1, 0, 0, 0,
		260, 261, 1, 0, 0, 0, 261, 266, 5, 10, 0, 0, 262, 266, 3, 72, 35, 0, 263,
		266, 3, 74, 36, 0, 264, 266, 3, 76, 37, 0, 265, 255, 1, 0, 0, 0, 265, 257,
		1, 0, 0, 0, 265, 262, 1, 0, 0, 0, 265, 263, 1, 0, 0, 0, 265, 264, 1, 0,
		0, 0, 266, 71, 1, 0, 0, 0, 267, 268, 5, 92, 0, 0, 268, 279, 3, 78, 38,
		0, 269, 270, 5, 92, 0, 0, 270, 271, 3, 78, 38, 0, 271, 272, 3, 78, 38,
		0, 272, 279, 1, 0, 0, 0, 273, 274, 5, 92, 0, 0, 274, 275, 7, 7, 0, 0, 275,
		276, 3, 78, 38, 0, 276, 277, 3, 78, 38, 0, 277, 279, 1, 0, 0, 0, 278, 267,
		1, 0, 0, 0, 278, 269, 1, 0, 0, 0, 278, 273, 1, 0, 0, 0, 279, 73, 1, 0,
		0, 0, 280, 281, 5, 92, 0, 0, 281, 282, 5, 120, 0, 0, 282, 283, 3, 80, 39,
		0, 283, 284, 3, 80, 39, 0, 284, 75, 1, 0, 0, 0, 285, 286, 5, 92, 0, 0,
		286, 287, 5, 117, 0, 0, 287, 288, 5, 123, 0, 0, 288, 290, 1, 0, 0, 0, 289,
		291, 3, 80, 39, 0, 290, 289, 1, 0, 0, 0, 291, 292, 1, 0, 0, 0, 292, 290,
		1, 0, 0, 0, 292, 293, 1, 0, 0, 0, 293, 294, 1, 0, 0, 0, 294, 295, 5, 125,
		0, 0, 295, 77, 1, 0, 0, 0, 296, 297, 7, 8, 0, 0, 297, 79, 1, 0, 0, 0, 298,
		299, 7, 9, 0, 0, 299, 81, 1, 0, 0, 0, 300, 301, 8, 10, 0, 0, 301, 83, 1,
		0, 0, 0, 302, 304, 7, 11, 0, 0, 303, 302, 1, 0, 0, 0, 304, 305, 1, 0, 0,
		0, 305, 303, 1, 0, 0, 0, 305, 306, 1, 0, 0, 0, 306, 307, 1, 0, 0, 0, 307,
		308, 6, 41, 1, 0, 308, 85, 1, 0, 0, 0, 309, 311, 7, 12, 0, 0, 310, 309,
		1, 0, 0, 0, 311, 312, 1, 0, 0, 0, 312, 310, 1, 0, 0, 0, 312, 313, 1, 0,
		0, 0, 313, 87, 1, 0, 0, 0, 314, 315, 5, 35, 0, 0, 315, 319, 5, 33, 0, 0,
		316, 318, 3, 82, 40, 0, 317, 316, 1, 0, 0, 0, 318, 321, 1, 0, 0, 0, 319,
		317, 1, 0, 0, 0, 319, 320, 1, 0, 0, 0, 320, 322, 1, 0, 0, 0, 321, 319,
		1, 0, 0, 0, 322, 323, 6, 43, 2, 0, 323, 89, 1, 0, 0, 0, 324, 325, 5, 34,
		0, 0, 325, 91, 1, 0, 0, 0, 326, 327, 8, 13, 0, 0, 327, 93, 1, 0, 0, 0,
		328, 332, 3, 90, 44, 0, 329, 331, 3, 92, 45, 0, 330, 329, 1, 0, 0, 0, 331,
		334, 1, 0, 0, 0, 332, 330, 1, 0, 0, 0, 332, 333, 1, 0, 0, 0, 333, 335,
		1, 0, 0, 0, 334, 332, 1, 0, 0, 0, 335, 336, 3, 90, 44, 0, 336, 95, 1, 0,
		0, 0, 337, 338, 5, 59, 0, 0, 338, 97, 1, 0, 0, 0, 339, 341, 3, 102, 50,
		0, 340, 339, 1, 0, 0, 0, 341, 342, 1, 0, 0, 0, 342, 340, 1, 0, 0, 0, 342,
		343, 1, 0, 0, 0, 343, 99, 1, 0, 0, 0, 344, 345, 5, 41, 0, 0, 345, 346,
		1, 0, 0, 0, 346, 347, 6, 49, 3, 0, 347, 101, 1, 0, 0, 0, 348, 349, 8, 14,
		0, 0, 349, 103, 1, 0, 0, 0, 29, 0, 1, 167, 172, 181, 187, 189, 197, 202,
		207, 213, 217, 223, 226, 231, 235, 239, 244, 248, 253, 259, 265, 278, 292,
		305, 312, 319, 332, 342, 4, 5, 1, 0, 6, 0, 0, 0, 1, 0, 4, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// SuricataRuleLexerInit initializes any static state used to implement SuricataRuleLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewSuricataRuleLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func SuricataRuleLexerInit() {
	staticData := &suricatarulelexerLexerStaticData
	staticData.once.Do(suricatarulelexerLexerInit)
}

// NewSuricataRuleLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewSuricataRuleLexer(input antlr.CharStream) *SuricataRuleLexer {
	SuricataRuleLexerInit()
	l := new(SuricataRuleLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &suricatarulelexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "SuricataRuleLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// SuricataRuleLexer tokens.
const (
	SuricataRuleLexerAny               = 1
	SuricataRuleLexerNegative          = 2
	SuricataRuleLexerDollar            = 3
	SuricataRuleLexerArrow             = 4
	SuricataRuleLexerMul               = 5
	SuricataRuleLexerDiv               = 6
	SuricataRuleLexerMod               = 7
	SuricataRuleLexerAmp               = 8
	SuricataRuleLexerPlus              = 9
	SuricataRuleLexerSub               = 10
	SuricataRuleLexerPower             = 11
	SuricataRuleLexerLt                = 12
	SuricataRuleLexerGt                = 13
	SuricataRuleLexerLtEq              = 14
	SuricataRuleLexerGtEq              = 15
	SuricataRuleLexerColon             = 16
	SuricataRuleLexerDoubleColon       = 17
	SuricataRuleLexerLBracket          = 18
	SuricataRuleLexerRBracket          = 19
	SuricataRuleLexerParamStart        = 20
	SuricataRuleLexerLBrace            = 21
	SuricataRuleLexerRBrace            = 22
	SuricataRuleLexerComma             = 23
	SuricataRuleLexerEq                = 24
	SuricataRuleLexerNotSymbol         = 25
	SuricataRuleLexerDot               = 26
	SuricataRuleLexerLINE_COMMENT      = 27
	SuricataRuleLexerID                = 28
	SuricataRuleLexerNORMALSTRING      = 29
	SuricataRuleLexerINT               = 30
	SuricataRuleLexerHEX               = 31
	SuricataRuleLexerFLOAT             = 32
	SuricataRuleLexerWS                = 33
	SuricataRuleLexerNonSemiColon      = 34
	SuricataRuleLexerSHEBANG           = 35
	SuricataRuleLexerParamQuotedString = 36
	SuricataRuleLexerParamSep          = 37
	SuricataRuleLexerParamValue        = 38
	SuricataRuleLexerParamEnd          = 39
)

// SuricataRuleLexerPARAM_MODE is the SuricataRuleLexer mode.
const SuricataRuleLexerPARAM_MODE = 1

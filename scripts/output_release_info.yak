raw = cli.String("filename", cli.setHelp("Raw Message Info"), cli.setRequired(true), cli.setDefault("/tmp/msg.txt"))
apiKey = cli.String("apikey", cli.setHelp("openai-key"), cli.setRequired(true))
aiType = cli.String("ai-type", cli.setHelp("ai-type-key"), cli.setRequired(true))

cli.check()

log.Info("start to fetch file: %v", raw)

log.Info("start to call FunctionCall in openai")
results = ai.FunctionCall(f`我正在发布一个新版本，后面我会放入 commit message 的信息，请你帮我总结成 Release Node，帮我编写一下我想要发布的信息，commit 信息为：

${string(file.ReadFile(raw)~)}

输出的内容使用列表展示(按行分割)，尽量精炼，控制在10条左右，注意同类合并，输出的时候，中文英文版本都要输出，英文放在 release_note_en 字段中`, {
    "release_note": "总结 release note 信息为中文，以序号开头，每条以 \n 换行",
    "release_note_en": "总结 release note 信息为英文，以序号开头，每条以 \n 换行"
}, ai.type(aiType), ai.apiKey(apiKey), ai.debugStream(true))~


println(string(results.release_note))
println(string(results.release_note_en))
file.Save("release_note.txt", results.release_note)
file.Save("release_note.en.txt", results.release_note_en)
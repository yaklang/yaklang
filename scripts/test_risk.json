{
    "report_time": "2024-01-15T10:30:00Z",
    "program_name": "test-project",
    "program_lang": "javascript",
    "file_count": 5,
    "code_line_count": 150,
    "risk_nums": 3,
    "risks": {
        "risk_001": {
            "file_path": "src/auth.js",
            "line": 25,
            "severity": "critical",
            "title": "硬编码密码",
            "description": "密码被硬编码在源代码中，存在严重安全风险。攻击者可以直接从代码中获取密码，无需任何破解过程。",
            "solution": "将密码移到环境变量或配置文件中，使用加密存储。建议使用专业的密钥管理系统。"
        },
        "risk_002": {
            "file_path": "src/database.js",
            "line": 42,
            "severity": "high",
            "title": "SQL注入漏洞",
            "description": "用户输入直接拼接到SQL查询中，可能导致SQL注入攻击。攻击者可以执行任意SQL命令，访问或修改数据库。",
            "solution": "使用参数化查询或预处理语句来防止SQL注入。对所有用户输入进行验证和转义。"
        },
        "risk_003": {
            "file_path": "src/utils.js",
            "line": 15,
            "severity": "medium",
            "title": "敏感信息泄露",
            "description": "代码中包含调试信息，可能泄露敏感的系统信息给攻击者。",
            "solution": "移除或禁用生产环境中的调试信息。使用环境变量控制调试输出的级别。"
        },
        "risk_004": {
            "file_path": "src/api.js",
            "line": 67,
            "severity": "low",
            "title": "缺少输入验证",
            "description": "API端点缺少对输入数据的验证，可能导致意外的行为或错误。",
            "solution": "添加输入验证中间件，对所有API输入进行格式和类型检查。"
        }
    },
    "file": [
        {
            "path": "src/auth.js",
            "line_count": 50,
            "risks": [
                "risk_001"
            ]
        },
        {
            "path": "src/database.js",
            "line_count": 80,
            "risks": [
                "risk_002"
            ]
        },
        {
            "path": "src/utils.js",
            "line_count": 30,
            "risks": [
                "risk_003"
            ]
        },
        {
            "path": "src/api.js",
            "line_count": 120,
            "risks": [
                "risk_004"
            ]
        }
    ]
}
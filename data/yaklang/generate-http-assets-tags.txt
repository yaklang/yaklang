// 本脚本用于资产中的 CVE 漏洞威胁
//

/*
    1. 从指纹库更新 Tags
    2. 正则更新
*/

log("正在更新 Websites 的 CVE 漏洞情况")
webC = db.FuzzQueryWebsitesByKeyword(CTX, "http")
for website = range webC {
    ids, err = website.GetAllRequestID()
    if err != nil {
        log("get request ids failed: %s", website.WebsiteName)
        continue
    }

    cpeStats = cve.NewCPEStats(f("网站: %v", website.WebsiteName))

    for _, id = range ids {
        req, rsps, err = db.HTTPRequestIDToRequestAndResponses(id)
        if err != nil {
            log("convert http pairs failed: %s", err)
            continue
        }

        for _, rsp = range rsps {
            cpes, err = scan.HTTPResponseToMatchResult(rsp)
            if err != nil {
                continue
            }

            for _, cpe = range cpes {
                err = cpeStats.Feed(cpe.String())
                if err != nil {
                    log("%v from: %v", err, sdump(rsp))
                    continue
                }
            }
        }
    }

    if cpeStats.VendorProductCount() <= 0 {
        continue
    }

    err = db.SaveWebsiteCVEThreat(website, cpeStats.ToCVEThreat())
    if err != nil {
        log("save cve threat for website failed: %s", err)
    }
}
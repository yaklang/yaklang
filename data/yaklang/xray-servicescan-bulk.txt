log("正在启动 Webhook 服务器")
hook = NewWebHook(os.GetRandomAvailableTCPPort(), fn(data) {
    mapRaw, err = str.JsonRawByteToMap(data)
    if err != nil {
        return
    }

    type = mapRaw.type

    if f("%v", type) == "web_vuln" {
        dump(f("recv [%s]", type))
        err = db.SaveVulnFromXrayRawMap(mapRaw, TASK_ID, RUNTIME_ID)
        if err != nil {
            dump(err, mapRaw)
        }
    }else{
        dump(mapRaw)
    }
})
addr = hook.Addr()
hook.Start()

log("默认 webhook 启动： %v, 1 秒后启动扫描进程", addr)
sleep(1)



swg = sync.NewSizedWaitGroup(5)
for _, host = range str.ParseStringToHosts("47.52.100.105/24") {
    for _, port = range str.ParseStringToPorts("80") {
        t = str.HostPort(host, port)
        log("start to scan port: %v", str.HostPort(host, port))
        swg.Add()
        go fn(target) {
            defer swg.Done()

            args = [
                "--config", xray.FetchDefaultXrayConfig(),
                "servicescan", "--target", target,
                "--webhook-output", addr,
            ]
            log("启动 XRAY 进程: %v", str.Join(args, " "))
            subprocess, err = GetXraySubProcess(CTX, file,
                args...
            )
            assertNil(err)

            output, err = subprocess.CombinedOutput()
            if err != nil {
                log(string(output))
            }
            log("XRAY 进程结束: %v", err)
        }(t)
    }
}

log("全部任务提交完毕，等待退出")
swg.Wait()